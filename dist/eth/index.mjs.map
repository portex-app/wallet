{"version":3,"file":"index.mjs","names":["FMT_NUMBER","FMT_BYTES","BlockTags","HardforksOrdered","__awaiter","name","_a","_a","isResponseWithError","_a","_a","isBytes","split","utf8ToBytes","toBytes","concatBytes","randomBytes","_0n","_1n","_2n","bytes","assert","hash","crypto","util","objectUtil","defaultErrorMap","ctx","defaultErrorMap","isValid","errorUtil","ctx","errorMap","version","result","mask","issues","elements","defaultErrorMap","processed","base","r","ZodFirstPartyTypeKind","isHexPrefixed","parseBaseType","hexToNumber","numberToHex","padLeft","sign","prefix","uint8ArrayToHexString","bytes","_a","isUint8Array","_a","base","hash","isNullish","name","formats","z","_a","format","_a","_a","validatorUtils","bytes","ecUtf8ToBytes","_a","number","hash","EventEmitter","name","EventEmitter","EventEmitter3","isHexStrict","isHexStrictValidator","isHex","isHexValidator","checkAddressCheckSum","checkAddressCheckSumValidator","isAddress","isAddressValidator","isBloom","isBloomValidator","isInBloom","isInBloomValidator","isUserEthereumAddressInBloom","isUserEthereumAddressInBloomValidator","isContractAddressInBloom","isContractAddressInBloomValidator","isTopic","isTopicValidator","isTopicInBloom","isTopicInBloomValidator","isNullishValidator","sign","utils","format","_a","_b","hash","name","hexArg","bytes","__awaiter","bytes","_a","__awaiter","_a","__awaiter","EventEmitter","_a","__awaiter","Web3ConfigEvent","globalThis","exports","name","decode","bytes","split","fetch","init","__awaiter","_a","WebSocket","_a","__awaiter","Web3RequestManagerEvent","WSProvider","__awaiter","registeredSubscriptions","_a","name","__awaiter","_a","__awaiter","Wallet","_a","crypto","cr","encrypt","decrypt","hash","hash","isLE","_32n","T1","_0n","_1n","_2n","isBytes","bytesToHex","bytes","hexToNumber","hexToBytes","concatBytes","utf8ToBytes","gen","_0n","_1n","_2n","_3n","_4n","number","Fp","bitLen","isLE","bytes","bitLength","_0n","_1n","base","window","mask","Fp","ut","s","_0n","_1n","_2n","toBytes","bytes","Point","a","number","prefix","sign","r","hash","create","_3n","secp256k1","_a","ethereumCryptography","Chain","Hardfork","ConsensusType","ConsensusAlgorithm","CustomChain","TypeOutput","stripHexPrefix","_a","_b","name","padToEven","uint8ArrayToBigInt","bigIntToUint8Array","bytes","output","output","cachedHexes","bytesToHex","hexToBytes","utf8ToBytes","numberToHex","module","CRC32","T0","T1","e1153","e1559","e2315","e2537","e2565","e2718","e2929","e2930","e3198","e3529","e3540","e3541","e3554","e3607","e3651","e3670","e3675","e3855","e3860","e4345","e4399","e5133","pkg","_a","name","HARDFORK_SPECS","hardforks","Capability","_a","hash","TRANSACTION_TYPE","TRANSACTION_TYPE_UINT8ARRAY","_a","base","hashMessage","TRANSACTION_TYPE","_a","base","hashMessage","_a","hashMessage","__awaiter","_a","hash","__awaiter","_a","__awaiter","_a","registeredSubscriptions","base","__awaiter","global","undefined","setImmediate","__awaiter","getHashRate","getGasPrice","getMaxPriorityFeePerGas","getAccounts","getBlockNumber","getBalance","getStorageAt","getTransactionCount","getCode","sign","signTransaction","sendTransaction","call","estimateGas","getTransactionReceipt","uninstallFilter","getFilterChanges","getFilterLogs","getLogs","hash","getFeeHistory","getPendingTransactions","getChainId","getProof","createAccessList","signTypedData","__awaiter","getId","getPeerCount","isListening","__awaiter","getAccounts","newAccount","unlockAccount","lockAccount","importRawKey","sendTransaction","signTransaction","sign","ecRecover","_a","_a","__awaiter","__awaiter","__awaiter","_a","__awaiter","_a","name","__awaiter","_a","promiseToError","__awaiter","__awaiter","_a","__awaiter","_a","__awaiter","_a","_a","name","name","_a","bytes","bytes","bytes","bytes","encoded","bytes","bytes","bytes","_a","bytes","decodeParameters","bytes","bytes","name","_a","__awaiter","_a","__awaiter","_a","__awaiter","_a","hash","__awaiter","_a","sendTransaction","sign","signed","signTransaction","__awaiter","__awaiter","_a","hash","name","__awaiter","_a","name","_a","_a","__awaiter","_a","__awaiter","self","name","__awaiter","_a","_b","bytes","decode","add","V","name","split","output","decomposed","name","__awaiter","name","__awaiter","_a","__awaiter","name","__awaiter","signTransaction","sign","__awaiter","Transport","Network","__awaiter","_a","__awaiter","isValid","__awaiter","_a","Wallet","Eip6963EventName","_a","utils","self","Contract","Web3","WalletStatus","Web3","accounts: string[]","accounts?: string[]","account: WalletAccount","status: WalletStatus","account: WalletAccount | null","handler: (status: WalletStatus, account?: WalletAccount | null) => void","deeplinkUrl?: string","to: string","amount: string | number","unit: 'ether' | 'wei'","contractABI: AbiItem[]","contractAddress: string","contractAddress?: string","chainId: string","chainIdMap: Record<string, string>","chainId: string | number","networkInfo?: {\n      chainName: string;\n      nativeCurrency: {\n        name: string;\n        symbol: string;\n        decimals: number;\n      };\n      rpcUrls: string[];\n      blockExplorerUrls?: string[];\n    }","error: unknown","response: unknown","networkInfo: {\n      chainName: string;\n      nativeCurrency: {\n        name: string;\n        symbol: string;\n        decimals: number;\n      };\n      rpcUrls: string[];\n      blockExplorerUrls?: string[];\n    }"],"sources":["../../../node_modules/.pnpm/web3-types@1.10.0/node_modules/web3-types/lib/esm/data_format_types.js","../../../node_modules/.pnpm/web3-types@1.10.0/node_modules/web3-types/lib/esm/eth_types.js","../../../node_modules/.pnpm/web3-types@1.10.0/node_modules/web3-types/lib/esm/primitives_types.js","../../../node_modules/.pnpm/web3-types@1.10.0/node_modules/web3-types/lib/esm/web3_base_provider.js","../../../node_modules/.pnpm/web3-types@1.10.0/node_modules/web3-types/lib/esm/web3_base_wallet.js","../../../node_modules/.pnpm/web3-errors@1.3.1/node_modules/web3-errors/lib/esm/error_codes.js","../../../node_modules/.pnpm/web3-errors@1.3.1/node_modules/web3-errors/lib/esm/web3_error_base.js","../../../node_modules/.pnpm/web3-errors@1.3.1/node_modules/web3-errors/lib/esm/errors/account_errors.js","../../../node_modules/.pnpm/web3-errors@1.3.1/node_modules/web3-errors/lib/esm/errors/connection_errors.js","../../../node_modules/.pnpm/web3-errors@1.3.1/node_modules/web3-errors/lib/esm/errors/contract_errors.js","../../../node_modules/.pnpm/web3-errors@1.3.1/node_modules/web3-errors/lib/esm/errors/ens_errors.js","../../../node_modules/.pnpm/web3-errors@1.3.1/node_modules/web3-errors/lib/esm/errors/generic_errors.js","../../../node_modules/.pnpm/web3-errors@1.3.1/node_modules/web3-errors/lib/esm/errors/provider_errors.js","../../../node_modules/.pnpm/web3-errors@1.3.1/node_modules/web3-errors/lib/esm/errors/signature_errors.js","../../../node_modules/.pnpm/web3-errors@1.3.1/node_modules/web3-errors/lib/esm/errors/transaction_errors.js","../../../node_modules/.pnpm/web3-errors@1.3.1/node_modules/web3-errors/lib/esm/errors/utils_errors.js","../../../node_modules/.pnpm/web3-errors@1.3.1/node_modules/web3-errors/lib/esm/errors/response_errors.js","../../../node_modules/.pnpm/web3-errors@1.3.1/node_modules/web3-errors/lib/esm/errors/core_errors.js","../../../node_modules/.pnpm/web3-errors@1.3.1/node_modules/web3-errors/lib/esm/errors/rpc_error_messages.js","../../../node_modules/.pnpm/web3-errors@1.3.1/node_modules/web3-errors/lib/esm/errors/rpc_errors.js","../../../node_modules/.pnpm/web3-errors@1.3.1/node_modules/web3-errors/lib/esm/errors/schema_errors.js","../../../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/_assert.js","../../../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/_u64.js","../../../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/crypto.js","../../../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/utils.js","../../../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/sha3.js","../../../node_modules/.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/esm/utils.js","../../../node_modules/.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/esm/keccak.js","../../../node_modules/.pnpm/zod@3.25.67/node_modules/zod/dist/esm/v3/helpers/util.js","../../../node_modules/.pnpm/zod@3.25.67/node_modules/zod/dist/esm/v3/ZodError.js","../../../node_modules/.pnpm/zod@3.25.67/node_modules/zod/dist/esm/v3/locales/en.js","../../../node_modules/.pnpm/zod@3.25.67/node_modules/zod/dist/esm/v3/errors.js","../../../node_modules/.pnpm/zod@3.25.67/node_modules/zod/dist/esm/v3/helpers/parseUtil.js","../../../node_modules/.pnpm/zod@3.25.67/node_modules/zod/dist/esm/v3/helpers/errorUtil.js","../../../node_modules/.pnpm/zod@3.25.67/node_modules/zod/dist/esm/v3/types.js","../../../node_modules/.pnpm/zod@3.25.67/node_modules/zod/dist/esm/v3/external.js","../../../node_modules/.pnpm/web3-validator@2.0.6/node_modules/web3-validator/lib/esm/errors.js","../../../node_modules/.pnpm/web3-validator@2.0.6/node_modules/web3-validator/lib/esm/constants.js","../../../node_modules/.pnpm/web3-validator@2.0.6/node_modules/web3-validator/lib/esm/validation/abi.js","../../../node_modules/.pnpm/web3-validator@2.0.6/node_modules/web3-validator/lib/esm/validation/string.js","../../../node_modules/.pnpm/web3-validator@2.0.6/node_modules/web3-validator/lib/esm/utils.js","../../../node_modules/.pnpm/web3-validator@2.0.6/node_modules/web3-validator/lib/esm/validation/bytes.js","../../../node_modules/.pnpm/web3-validator@2.0.6/node_modules/web3-validator/lib/esm/validation/address.js","../../../node_modules/.pnpm/web3-validator@2.0.6/node_modules/web3-validator/lib/esm/validation/numbers.js","../../../node_modules/.pnpm/web3-validator@2.0.6/node_modules/web3-validator/lib/esm/validation/block.js","../../../node_modules/.pnpm/web3-validator@2.0.6/node_modules/web3-validator/lib/esm/validation/bloom.js","../../../node_modules/.pnpm/web3-validator@2.0.6/node_modules/web3-validator/lib/esm/validation/boolean.js","../../../node_modules/.pnpm/web3-validator@2.0.6/node_modules/web3-validator/lib/esm/validation/object.js","../../../node_modules/.pnpm/web3-validator@2.0.6/node_modules/web3-validator/lib/esm/validation/topic.js","../../../node_modules/.pnpm/web3-validator@2.0.6/node_modules/web3-validator/lib/esm/validation/filter.js","../../../node_modules/.pnpm/web3-validator@2.0.6/node_modules/web3-validator/lib/esm/formats.js","../../../node_modules/.pnpm/web3-validator@2.0.6/node_modules/web3-validator/lib/esm/validator.js","../../../node_modules/.pnpm/web3-validator@2.0.6/node_modules/web3-validator/lib/esm/web3_validator.js","../../../node_modules/.pnpm/web3-validator@2.0.6/node_modules/web3-validator/lib/esm/default_validator.js","../../../node_modules/.pnpm/web3-utils@4.3.3/node_modules/web3-utils/lib/esm/uint8array.js","../../../node_modules/.pnpm/web3-utils@4.3.3/node_modules/web3-utils/lib/esm/converters.js","../../../node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.js","../../../node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.mjs","../../../node_modules/.pnpm/web3-utils@4.3.3/node_modules/web3-utils/lib/esm/event_emitter.js","../../../node_modules/.pnpm/web3-utils@4.3.3/node_modules/web3-utils/lib/esm/validation.js","../../../node_modules/.pnpm/web3-utils@4.3.3/node_modules/web3-utils/lib/esm/objects.js","../../../node_modules/.pnpm/web3-utils@4.3.3/node_modules/web3-utils/lib/esm/string_manipulation.js","../../../node_modules/.pnpm/web3-utils@4.3.3/node_modules/web3-utils/lib/esm/formatter.js","../../../node_modules/.pnpm/web3-utils@4.3.3/node_modules/web3-utils/lib/esm/hash.js","../../../node_modules/.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/esm/random.js","../../../node_modules/.pnpm/web3-utils@4.3.3/node_modules/web3-utils/lib/esm/random.js","../../../node_modules/.pnpm/web3-utils@4.3.3/node_modules/web3-utils/lib/esm/promise_helpers.js","../../../node_modules/.pnpm/web3-utils@4.3.3/node_modules/web3-utils/lib/esm/uuid.js","../../../node_modules/.pnpm/web3-utils@4.3.3/node_modules/web3-utils/lib/esm/json_rpc.js","../../../node_modules/.pnpm/web3-utils@4.3.3/node_modules/web3-utils/lib/esm/web3_deferred_promise.js","../../../node_modules/.pnpm/web3-utils@4.3.3/node_modules/web3-utils/lib/esm/chunk_response_parser.js","../../../node_modules/.pnpm/web3-utils@4.3.3/node_modules/web3-utils/lib/esm/web3_eip1193_provider.js","../../../node_modules/.pnpm/web3-utils@4.3.3/node_modules/web3-utils/lib/esm/socket_provider.js","../../../node_modules/.pnpm/web3-utils@4.3.3/node_modules/web3-utils/lib/esm/index.js","../../../node_modules/.pnpm/web3-core@4.7.1/node_modules/web3-core/lib/esm/web3_event_emitter.js","../../../node_modules/.pnpm/web3-core@4.7.1/node_modules/web3-core/lib/esm/web3_config.js","../../../node_modules/.pnpm/cross-fetch@4.1.0/node_modules/cross-fetch/dist/browser-ponyfill.js","../../../node_modules/.pnpm/web3-providers-http@4.2.0/node_modules/web3-providers-http/lib/esm/index.js","../../../node_modules/.pnpm/isomorphic-ws@5.0.0_ws@8.18.2/node_modules/isomorphic-ws/browser.js","../../../node_modules/.pnpm/web3-providers-ws@4.0.8/node_modules/web3-providers-ws/lib/esm/index.js","../../../node_modules/.pnpm/web3-core@4.7.1/node_modules/web3-core/lib/esm/utils.js","../../../node_modules/.pnpm/web3-core@4.7.1/node_modules/web3-core/lib/esm/web3_request_manager.js","../../../node_modules/.pnpm/web3-core@4.7.1/node_modules/web3-core/lib/esm/web3_subscription_manager.js","../../../node_modules/.pnpm/web3-core@4.7.1/node_modules/web3-core/lib/esm/web3_subscriptions.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/wallet.js","../../../node_modules/.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/esm/aes.js","../../../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/hmac.js","../../../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/pbkdf2.js","../../../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/_md.js","../../../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/sha256.js","../../../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/sha512.js","../../../node_modules/.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/esm/pbkdf2.js","../../../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/scrypt.js","../../../node_modules/.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/esm/scrypt.js","../../../node_modules/.pnpm/@noble+curves@1.4.2/node_modules/@noble/curves/esm/abstract/utils.js","../../../node_modules/.pnpm/@noble+curves@1.4.2/node_modules/@noble/curves/esm/abstract/modular.js","../../../node_modules/.pnpm/@noble+curves@1.4.2/node_modules/@noble/curves/esm/abstract/curve.js","../../../node_modules/.pnpm/@noble+curves@1.4.2/node_modules/@noble/curves/esm/abstract/weierstrass.js","../../../node_modules/.pnpm/@noble+curves@1.4.2/node_modules/@noble/curves/esm/_shortw_utils.js","../../../node_modules/.pnpm/@noble+curves@1.4.2/node_modules/@noble/curves/esm/secp256k1.js","../../../node_modules/.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/esm/secp256k1.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/tx/constants.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/schemas.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/enums.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/types.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/utils.js","../../../node_modules/.pnpm/@ethereumjs+rlp@4.0.1/node_modules/@ethereumjs/rlp/dist/index.js","../../../node_modules/.pnpm/crc-32@1.2.2/node_modules/crc-32/crc32.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/chains/goerli.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/chains/mainnet.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/chains/sepolia.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/1153.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/1559.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/2315.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/2537.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/2565.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/2718.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/2929.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/2930.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/3198.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/3529.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/3540.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/3541.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/3554.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/3607.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/3651.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/3670.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/3675.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/3855.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/3860.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/4345.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/4399.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/5133.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/eips/index.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/hardforks/chainstart.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/hardforks/dao.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/hardforks/homestead.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/hardforks/tangerineWhistle.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/hardforks/spuriousDragon.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/hardforks/byzantium.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/hardforks/constantinople.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/hardforks/petersburg.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/hardforks/istanbul.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/hardforks/muirGlacier.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/hardforks/berlin.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/hardforks/london.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/hardforks/shanghai.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/hardforks/arrowGlacier.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/hardforks/grayGlacier.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/hardforks/mergeForkIdTransition.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/hardforks/merge.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/hardforks/index.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/common/common.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/tx/types.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/tx/address.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/tx/utils.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/tx/eip1559Transaction.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/tx/eip2930Transaction.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/tx/legacyTransaction.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/tx/transactionFactory.js","../../../node_modules/.pnpm/web3-eth-accounts@4.3.1/node_modules/web3-eth-accounts/lib/esm/account.js","../../../node_modules/.pnpm/web3-core@4.7.1/node_modules/web3-core/lib/esm/web3_batch_request.js","../../../node_modules/.pnpm/web3-core@4.7.1/node_modules/web3-core/lib/esm/web3_context.js","../../../node_modules/.pnpm/web3-eth-iban@4.0.7/node_modules/web3-eth-iban/lib/esm/iban.js","../../../node_modules/.pnpm/web3-core@4.7.1/node_modules/web3-core/lib/esm/web3_promi_event.js","../../../node_modules/.pnpm/setimmediate@1.0.5/node_modules/setimmediate/setImmediate.js","../../../node_modules/.pnpm/web3-rpc-methods@1.3.0/node_modules/web3-rpc-methods/lib/esm/eth_rpc_methods.js","../../../node_modules/.pnpm/web3-rpc-methods@1.3.0/node_modules/web3-rpc-methods/lib/esm/net_rpc_methods.js","../../../node_modules/.pnpm/web3-rpc-methods@1.3.0/node_modules/web3-rpc-methods/lib/esm/personal_rpc_methods.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/utils/detect_transaction_type.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/schemas.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/utils/format_transaction.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/utils/decode_signed_transaction.js","../../../node_modules/.pnpm/web3-net@4.1.0/node_modules/web3-net/lib/esm/rpc_method_wrappers.js","../../../node_modules/.pnpm/web3-net@4.1.0/node_modules/web3-net/lib/esm/net.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/constants.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/utils/get_transaction_gas_pricing.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/utils/transaction_builder.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/utils/reject_if_block_timeout.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/utils/try_send_transaction.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/utils/wait_for_transaction_receipt.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/utils/watch_transaction_by_polling.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/utils/watch_transaction_by_subscription.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/utils/watch_transaction_for_confirmations.js","../../../node_modules/.pnpm/web3-eth-abi@4.4.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-abi/lib/esm/utils.js","../../../node_modules/.pnpm/web3-eth-abi@4.4.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-abi/lib/esm/api/errors_api.js","../../../node_modules/.pnpm/web3-eth-abi@4.4.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-abi/lib/esm/api/events_api.js","../../../node_modules/.pnpm/abitype@0.7.1_typescript@5.8.3_zod@3.25.67/node_modules/abitype/dist/chunk-WP7KDV47.mjs","../../../node_modules/.pnpm/abitype@0.7.1_typescript@5.8.3_zod@3.25.67/node_modules/abitype/dist/chunk-NHABU752.mjs","../../../node_modules/.pnpm/abitype@0.7.1_typescript@5.8.3_zod@3.25.67/node_modules/abitype/dist/index.mjs","../../../node_modules/.pnpm/web3-eth-abi@4.4.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-abi/lib/esm/coders/utils.js","../../../node_modules/.pnpm/web3-eth-abi@4.4.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-abi/lib/esm/coders/base/address.js","../../../node_modules/.pnpm/web3-eth-abi@4.4.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-abi/lib/esm/coders/base/numbersLimits.js","../../../node_modules/.pnpm/web3-eth-abi@4.4.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-abi/lib/esm/coders/base/number.js","../../../node_modules/.pnpm/web3-eth-abi@4.4.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-abi/lib/esm/coders/base/bool.js","../../../node_modules/.pnpm/web3-eth-abi@4.4.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-abi/lib/esm/coders/base/bytes.js","../../../node_modules/.pnpm/web3-eth-abi@4.4.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-abi/lib/esm/coders/base/string.js","../../../node_modules/.pnpm/web3-eth-abi@4.4.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-abi/lib/esm/coders/base/utils.js","../../../node_modules/.pnpm/web3-eth-abi@4.4.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-abi/lib/esm/coders/base/array.js","../../../node_modules/.pnpm/web3-eth-abi@4.4.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-abi/lib/esm/coders/base/index.js","../../../node_modules/.pnpm/web3-eth-abi@4.4.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-abi/lib/esm/coders/base/tuple.js","../../../node_modules/.pnpm/web3-eth-abi@4.4.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-abi/lib/esm/coders/decode.js","../../../node_modules/.pnpm/web3-eth-abi@4.4.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-abi/lib/esm/coders/encode.js","../../../node_modules/.pnpm/web3-eth-abi@4.4.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-abi/lib/esm/api/parameters_api.js","../../../node_modules/.pnpm/web3-eth-abi@4.4.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-abi/lib/esm/api/functions_api.js","../../../node_modules/.pnpm/web3-eth-abi@4.4.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-abi/lib/esm/api/logs_api.js","../../../node_modules/.pnpm/web3-eth-abi@4.4.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-abi/lib/esm/decode_contract_error_data.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/utils/get_revert_reason.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/utils/get_transaction_error.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/utils/decoding.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/utils/send_tx_helper.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/rpc_method_wrappers.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/filtering_rpc_method_wrappers.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/web3_subscriptions.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/web3_eth.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/validation.js","../../../node_modules/.pnpm/web3-eth@4.11.1_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth/lib/esm/utils/prepare_transaction_for_signing.js","../../../node_modules/.pnpm/web3-eth-contract@4.7.2_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-contract/lib/esm/encoding.js","../../../node_modules/.pnpm/web3-eth-contract@4.7.2_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-contract/lib/esm/contract_log_subscription.js","../../../node_modules/.pnpm/@ethereumjs+rlp@5.0.2/node_modules/@ethereumjs/rlp/dist/esm/index.js","../../../node_modules/.pnpm/web3-eth-contract@4.7.2_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-contract/lib/esm/utils.js","../../../node_modules/.pnpm/web3-eth-contract@4.7.2_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-contract/lib/esm/contract-deployer-method-class.js","../../../node_modules/.pnpm/web3-eth-contract@4.7.2_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-contract/lib/esm/contract-subscription-manager.js","../../../node_modules/.pnpm/web3-eth-contract@4.7.2_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-contract/lib/esm/contract.js","../../../node_modules/.pnpm/web3-eth-contract@4.7.2_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-contract/lib/esm/index.js","../../../node_modules/.pnpm/web3-eth-ens@4.4.0_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-ens/lib/esm/config.js","../../../node_modules/.pnpm/web3-eth-ens@4.4.0_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-ens/lib/esm/abi/ens/ENSRegistry.js","../../../node_modules/.pnpm/web3-eth-ens@4.4.0_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-ens/lib/esm/abi/ens/PublicResolver.js","../../../node_modules/.pnpm/@adraffy+ens-normalize@1.11.0/node_modules/@adraffy/ens-normalize/dist/index.mjs","../../../node_modules/.pnpm/web3-eth-ens@4.4.0_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-ens/lib/esm/utils.js","../../../node_modules/.pnpm/web3-eth-ens@4.4.0_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-ens/lib/esm/registry.js","../../../node_modules/.pnpm/web3-eth-ens@4.4.0_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-ens/lib/esm/resolver.js","../../../node_modules/.pnpm/web3-eth-ens@4.4.0_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-ens/lib/esm/ens.js","../../../node_modules/.pnpm/web3-eth-personal@4.1.0_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-personal/lib/esm/rpc_method_wrappers.js","../../../node_modules/.pnpm/web3-eth-personal@4.1.0_typescript@5.8.3_zod@3.25.67/node_modules/web3-eth-personal/lib/esm/personal.js","../../../node_modules/.pnpm/web3-rpc-providers@1.0.0-rc.4/node_modules/web3-rpc-providers/lib/esm/types.js","../../../node_modules/.pnpm/web3-rpc-providers@1.0.0-rc.4/node_modules/web3-rpc-providers/lib/esm/errors.js","../../../node_modules/.pnpm/web3-rpc-providers@1.0.0-rc.4/node_modules/web3-rpc-providers/lib/esm/web3_provider.js","../../../node_modules/.pnpm/web3-rpc-providers@1.0.0-rc.4/node_modules/web3-rpc-providers/lib/esm/web3_provider_quicknode.js","../../../node_modules/.pnpm/web3-rpc-providers@1.0.0-rc.4/node_modules/web3-rpc-providers/lib/esm/web3_provider_publicnode.js","../../../node_modules/.pnpm/web3-rpc-providers@1.0.0-rc.4/node_modules/web3-rpc-providers/lib/esm/index.js","../../../node_modules/.pnpm/web3@4.16.0_typescript@5.8.3_zod@3.25.67/node_modules/web3/lib/esm/abi.js","../../../node_modules/.pnpm/web3@4.16.0_typescript@5.8.3_zod@3.25.67/node_modules/web3/lib/esm/accounts.js","../../../node_modules/.pnpm/web3@4.16.0_typescript@5.8.3_zod@3.25.67/node_modules/web3/lib/esm/version.js","../../../node_modules/.pnpm/web3@4.16.0_typescript@5.8.3_zod@3.25.67/node_modules/web3/lib/esm/web3_eip6963.js","../../../node_modules/.pnpm/web3@4.16.0_typescript@5.8.3_zod@3.25.67/node_modules/web3/lib/esm/web3.js","../../../node_modules/.pnpm/web3@4.16.0_typescript@5.8.3_zod@3.25.67/node_modules/web3/lib/esm/index.js","../src/types.ts","../src/index.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport var FMT_NUMBER;\n(function (FMT_NUMBER) {\n    FMT_NUMBER[\"NUMBER\"] = \"NUMBER_NUMBER\";\n    FMT_NUMBER[\"HEX\"] = \"NUMBER_HEX\";\n    FMT_NUMBER[\"STR\"] = \"NUMBER_STR\";\n    FMT_NUMBER[\"BIGINT\"] = \"NUMBER_BIGINT\";\n})(FMT_NUMBER || (FMT_NUMBER = {}));\nexport var FMT_BYTES;\n(function (FMT_BYTES) {\n    FMT_BYTES[\"HEX\"] = \"BYTES_HEX\";\n    FMT_BYTES[\"UINT8ARRAY\"] = \"BYTES_UINT8ARRAY\";\n})(FMT_BYTES || (FMT_BYTES = {}));\nexport const DEFAULT_RETURN_FORMAT = {\n    number: FMT_NUMBER.BIGINT,\n    bytes: FMT_BYTES.HEX,\n};\nexport const ETH_DATA_FORMAT = { number: FMT_NUMBER.HEX, bytes: FMT_BYTES.HEX };\n//# sourceMappingURL=data_format_types.js.map","export var BlockTags;\n(function (BlockTags) {\n    BlockTags[\"EARLIEST\"] = \"earliest\";\n    BlockTags[\"LATEST\"] = \"latest\";\n    BlockTags[\"PENDING\"] = \"pending\";\n    BlockTags[\"SAFE\"] = \"safe\";\n    BlockTags[\"FINALIZED\"] = \"finalized\";\n    BlockTags[\"COMMITTED\"] = \"committed\";\n})(BlockTags || (BlockTags = {}));\n// This list of hardforks is expected to be in order\n// keep this in mind when making changes to it\nexport var HardforksOrdered;\n(function (HardforksOrdered) {\n    HardforksOrdered[\"chainstart\"] = \"chainstart\";\n    HardforksOrdered[\"frontier\"] = \"frontier\";\n    HardforksOrdered[\"homestead\"] = \"homestead\";\n    HardforksOrdered[\"dao\"] = \"dao\";\n    HardforksOrdered[\"tangerineWhistle\"] = \"tangerineWhistle\";\n    HardforksOrdered[\"spuriousDragon\"] = \"spuriousDragon\";\n    HardforksOrdered[\"byzantium\"] = \"byzantium\";\n    HardforksOrdered[\"constantinople\"] = \"constantinople\";\n    HardforksOrdered[\"petersburg\"] = \"petersburg\";\n    HardforksOrdered[\"istanbul\"] = \"istanbul\";\n    HardforksOrdered[\"muirGlacier\"] = \"muirGlacier\";\n    HardforksOrdered[\"berlin\"] = \"berlin\";\n    HardforksOrdered[\"london\"] = \"london\";\n    HardforksOrdered[\"altair\"] = \"altair\";\n    HardforksOrdered[\"arrowGlacier\"] = \"arrowGlacier\";\n    HardforksOrdered[\"grayGlacier\"] = \"grayGlacier\";\n    HardforksOrdered[\"bellatrix\"] = \"bellatrix\";\n    HardforksOrdered[\"merge\"] = \"merge\";\n    HardforksOrdered[\"capella\"] = \"capella\";\n    HardforksOrdered[\"shanghai\"] = \"shanghai\";\n})(HardforksOrdered || (HardforksOrdered = {}));\n//# sourceMappingURL=eth_types.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\nexport const TypedArray = Object.getPrototypeOf(Uint8Array);\n//# sourceMappingURL=primitives_types.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst symbol = Symbol.for('web3/base-provider');\n// Provider interface compatible with EIP-1193\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md\nexport class Web3BaseProvider {\n    static isWeb3Provider(provider) {\n        return (provider instanceof Web3BaseProvider ||\n            Boolean(provider && provider[symbol]));\n    }\n    // To match an object \"instanceof\" does not work if\n    // matcher class and object is using different package versions\n    // to overcome this bottleneck used this approach.\n    // The symbol value for one string will always remain same regardless of package versions\n    // eslint-disable-next-line class-methods-use-this\n    get [symbol]() {\n        return true;\n    }\n    /**\n     * @deprecated Please use `.request` instead.\n     * @param payload - Request Payload\n     * @param callback - Callback\n     */\n    send(payload, \n    // eslint-disable-next-line @typescript-eslint/ban-types\n    callback) {\n        this.request(payload)\n            .then(response => {\n            // eslint-disable-next-line no-null/no-null\n            callback(null, response);\n        })\n            .catch((err) => {\n            callback(err);\n        });\n    }\n    /**\n     * @deprecated Please use `.request` instead.\n     * @param payload - Request Payload\n     */\n    sendAsync(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request(payload);\n        });\n    }\n    /**\n     * Modify the return type of the request method to be fully compatible with EIP-1193\n     *\n     * [deprecated] In the future major releases (\\>= v5) all providers are supposed to be fully compatible with EIP-1193.\n     * So this method will not be needed and would not be available in the future.\n     *\n     * @returns A new instance of the provider with the request method fully compatible with EIP-1193\n     *\n     * @example\n     * ```ts\n     * const provider = new Web3HttpProvider('http://localhost:8545');\n     * const fullyCompatibleProvider = provider.asEIP1193Provider();\n     * const result = await fullyCompatibleProvider.request({ method: 'eth_getBalance' });\n     * console.log(result); // '0x0234c8a3397aab58' or something like that\n     * ```\n     */\n    asEIP1193Provider() {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const newObj = Object.create(this);\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        const originalRequest = newObj.request;\n        newObj.request = function request(args) {\n            return __awaiter(this, void 0, void 0, function* () {\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n                const response = (yield originalRequest(args));\n                return response.result;\n            });\n        };\n        // @ts-expect-error the property should not be available in the new object because of using Object.create(this).\n        //\tBut it is available if we do not delete it.\n        newObj.asEIP1193Provider = undefined; // to prevent the user for calling this method again\n        return newObj;\n    }\n}\n//# sourceMappingURL=web3_base_provider.js.map","export class Web3BaseWallet extends Array {\n    constructor(accountProvider) {\n        super();\n        this._accountProvider = accountProvider;\n    }\n}\n//# sourceMappingURL=web3_base_wallet.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// Response error\nexport const ERR_RESPONSE = 100;\nexport const ERR_INVALID_RESPONSE = 101;\n// Generic errors\nexport const ERR_PARAM = 200;\nexport const ERR_FORMATTERS = 201;\nexport const ERR_METHOD_NOT_IMPLEMENTED = 202;\nexport const ERR_OPERATION_TIMEOUT = 203;\nexport const ERR_OPERATION_ABORT = 204;\nexport const ERR_ABI_ENCODING = 205;\nexport const ERR_EXISTING_PLUGIN_NAMESPACE = 206;\nexport const ERR_INVALID_METHOD_PARAMS = 207;\nexport const ERR_MULTIPLE_ERRORS = 208;\n// Contract error codes\nexport const ERR_CONTRACT = 300;\nexport const ERR_CONTRACT_RESOLVER_MISSING = 301;\nexport const ERR_CONTRACT_ABI_MISSING = 302;\nexport const ERR_CONTRACT_REQUIRED_CALLBACK = 303;\nexport const ERR_CONTRACT_EVENT_NOT_EXISTS = 304;\nexport const ERR_CONTRACT_RESERVED_EVENT = 305;\nexport const ERR_CONTRACT_MISSING_DEPLOY_DATA = 306;\nexport const ERR_CONTRACT_MISSING_ADDRESS = 307;\nexport const ERR_CONTRACT_MISSING_FROM_ADDRESS = 308;\nexport const ERR_CONTRACT_INSTANTIATION = 309;\nexport const ERR_CONTRACT_EXECUTION_REVERTED = 310;\nexport const ERR_CONTRACT_TX_DATA_AND_INPUT = 311;\n// Transaction error codes\nexport const ERR_TX = 400;\nexport const ERR_TX_REVERT_INSTRUCTION = 401;\nexport const ERR_TX_REVERT_TRANSACTION = 402;\nexport const ERR_TX_NO_CONTRACT_ADDRESS = 403;\nexport const ERR_TX_CONTRACT_NOT_STORED = 404;\nexport const ERR_TX_REVERT_WITHOUT_REASON = 405;\nexport const ERR_TX_OUT_OF_GAS = 406;\nexport const ERR_RAW_TX_UNDEFINED = 407;\nexport const ERR_TX_INVALID_SENDER = 408;\nexport const ERR_TX_INVALID_CALL = 409;\nexport const ERR_TX_MISSING_CUSTOM_CHAIN = 410;\nexport const ERR_TX_MISSING_CUSTOM_CHAIN_ID = 411;\nexport const ERR_TX_CHAIN_ID_MISMATCH = 412;\nexport const ERR_TX_INVALID_CHAIN_INFO = 413;\nexport const ERR_TX_MISSING_CHAIN_INFO = 414;\nexport const ERR_TX_MISSING_GAS = 415;\nexport const ERR_TX_INVALID_LEGACY_GAS = 416;\nexport const ERR_TX_INVALID_FEE_MARKET_GAS = 417;\nexport const ERR_TX_INVALID_FEE_MARKET_GAS_PRICE = 418;\nexport const ERR_TX_INVALID_LEGACY_FEE_MARKET = 419;\nexport const ERR_TX_INVALID_OBJECT = 420;\nexport const ERR_TX_INVALID_NONCE_OR_CHAIN_ID = 421;\nexport const ERR_TX_UNABLE_TO_POPULATE_NONCE = 422;\nexport const ERR_TX_UNSUPPORTED_EIP_1559 = 423;\nexport const ERR_TX_UNSUPPORTED_TYPE = 424;\nexport const ERR_TX_DATA_AND_INPUT = 425;\nexport const ERR_TX_POLLING_TIMEOUT = 426;\nexport const ERR_TX_RECEIPT_MISSING_OR_BLOCKHASH_NULL = 427;\nexport const ERR_TX_RECEIPT_MISSING_BLOCK_NUMBER = 428;\nexport const ERR_TX_LOCAL_WALLET_NOT_AVAILABLE = 429;\nexport const ERR_TX_NOT_FOUND = 430;\nexport const ERR_TX_SEND_TIMEOUT = 431;\nexport const ERR_TX_BLOCK_TIMEOUT = 432;\nexport const ERR_TX_SIGNING = 433;\nexport const ERR_TX_GAS_MISMATCH = 434;\nexport const ERR_TX_CHAIN_MISMATCH = 435;\nexport const ERR_TX_HARDFORK_MISMATCH = 436;\nexport const ERR_TX_INVALID_RECEIVER = 437;\nexport const ERR_TX_REVERT_TRANSACTION_CUSTOM_ERROR = 438;\nexport const ERR_TX_INVALID_PROPERTIES_FOR_TYPE = 439;\nexport const ERR_TX_MISSING_GAS_INNER_ERROR = 440;\nexport const ERR_TX_GAS_MISMATCH_INNER_ERROR = 441;\n// Connection error codes\nexport const ERR_CONN = 500;\nexport const ERR_CONN_INVALID = 501;\nexport const ERR_CONN_TIMEOUT = 502;\nexport const ERR_CONN_NOT_OPEN = 503;\nexport const ERR_CONN_CLOSE = 504;\nexport const ERR_CONN_MAX_ATTEMPTS = 505;\nexport const ERR_CONN_PENDING_REQUESTS = 506;\nexport const ERR_REQ_ALREADY_SENT = 507;\n// Provider error codes\nexport const ERR_PROVIDER = 600;\nexport const ERR_INVALID_PROVIDER = 601;\nexport const ERR_INVALID_CLIENT = 602;\nexport const ERR_SUBSCRIPTION = 603;\nexport const ERR_WS_PROVIDER = 604;\n// Account error codes\nexport const ERR_PRIVATE_KEY_LENGTH = 701;\nexport const ERR_INVALID_PRIVATE_KEY = 702;\nexport const ERR_UNSUPPORTED_KDF = 703;\nexport const ERR_KEY_DERIVATION_FAIL = 704;\nexport const ERR_KEY_VERSION_UNSUPPORTED = 705;\nexport const ERR_INVALID_PASSWORD = 706;\nexport const ERR_IV_LENGTH = 707;\nexport const ERR_INVALID_KEYSTORE = 708;\nexport const ERR_PBKDF2_ITERATIONS = 709;\n// Signature error codes\nexport const ERR_SIGNATURE_FAILED = 801;\nexport const ERR_INVALID_SIGNATURE = 802;\nexport const GENESIS_BLOCK_NUMBER = '0x0';\n// RPC error codes (EIP-1193)\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md#provider-errors\nexport const JSONRPC_ERR_REJECTED_REQUEST = 4001;\nexport const JSONRPC_ERR_UNAUTHORIZED = 4100;\nexport const JSONRPC_ERR_UNSUPPORTED_METHOD = 4200;\nexport const JSONRPC_ERR_DISCONNECTED = 4900;\nexport const JSONRPC_ERR_CHAIN_DISCONNECTED = 4901;\n// ENS error codes\nexport const ERR_ENS_CHECK_INTERFACE_SUPPORT = 901;\nexport const ERR_ENS_UNSUPPORTED_NETWORK = 902;\nexport const ERR_ENS_NETWORK_NOT_SYNCED = 903;\n// Utils error codes\nexport const ERR_INVALID_STRING = 1001;\nexport const ERR_INVALID_BYTES = 1002;\nexport const ERR_INVALID_NUMBER = 1003;\nexport const ERR_INVALID_UNIT = 1004;\nexport const ERR_INVALID_ADDRESS = 1005;\nexport const ERR_INVALID_HEX = 1006;\nexport const ERR_INVALID_TYPE = 1007;\nexport const ERR_INVALID_BOOLEAN = 1008;\nexport const ERR_INVALID_UNSIGNED_INTEGER = 1009;\nexport const ERR_INVALID_SIZE = 1010;\nexport const ERR_INVALID_LARGE_VALUE = 1011;\nexport const ERR_INVALID_BLOCK = 1012;\nexport const ERR_INVALID_TYPE_ABI = 1013;\nexport const ERR_INVALID_NIBBLE_WIDTH = 1014;\nexport const ERR_INVALID_INTEGER = 1015;\n// Validation error codes\nexport const ERR_VALIDATION = 1100;\n// Core error codes\nexport const ERR_CORE_HARDFORK_MISMATCH = 1101;\nexport const ERR_CORE_CHAIN_MISMATCH = 1102;\n// Schema error codes\nexport const ERR_SCHEMA_FORMAT = 1200;\n// RPC error codes (EIP-1474)\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1474.md\nexport const ERR_RPC_INVALID_JSON = -32700;\nexport const ERR_RPC_INVALID_REQUEST = -32600;\nexport const ERR_RPC_INVALID_METHOD = -32601;\nexport const ERR_RPC_INVALID_PARAMS = -32602;\nexport const ERR_RPC_INTERNAL_ERROR = -32603;\nexport const ERR_RPC_INVALID_INPUT = -32000;\nexport const ERR_RPC_MISSING_RESOURCE = -32001;\nexport const ERR_RPC_UNAVAILABLE_RESOURCE = -32002;\nexport const ERR_RPC_TRANSACTION_REJECTED = -32003;\nexport const ERR_RPC_UNSUPPORTED_METHOD = -32004;\nexport const ERR_RPC_LIMIT_EXCEEDED = -32005;\nexport const ERR_RPC_NOT_SUPPORTED = -32006;\n//# sourceMappingURL=error_codes.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { ERR_MULTIPLE_ERRORS } from './error_codes.js';\n/**\n * Base class for Web3 errors.\n */\nexport class BaseWeb3Error extends Error {\n    /**\n     * @deprecated Use the `cause` property instead.\n     */\n    get innerError() {\n        // eslint-disable-next-line no-use-before-define\n        if (this.cause instanceof MultipleErrors) {\n            return this.cause.errors;\n        }\n        return this.cause;\n    }\n    /**\n     * @deprecated Use the `cause` property instead.\n     */\n    set innerError(cause) {\n        if (Array.isArray(cause)) {\n            // eslint-disable-next-line no-use-before-define\n            this.cause = new MultipleErrors(cause);\n        }\n        else {\n            this.cause = cause;\n        }\n    }\n    constructor(msg, cause) {\n        super(msg);\n        if (Array.isArray(cause)) {\n            // eslint-disable-next-line no-use-before-define\n            this.cause = new MultipleErrors(cause);\n        }\n        else {\n            this.cause = cause;\n        }\n        this.name = this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(new.target.constructor);\n        }\n        else {\n            this.stack = new Error().stack;\n        }\n    }\n    static convertToString(value, unquotValue = false) {\n        // Using \"null\" value intentionally for validation\n        // eslint-disable-next-line no-null/no-null\n        if (value === null || value === undefined)\n            return 'undefined';\n        const result = JSON.stringify(value, (_, v) => (typeof v === 'bigint' ? v.toString() : v));\n        return unquotValue && ['bigint', 'string'].includes(typeof value)\n            ? result.replace(/['\\\\\"]+/g, '')\n            : result;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            code: this.code,\n            message: this.message,\n            cause: this.cause,\n            // deprecated\n            innerError: this.cause,\n        };\n    }\n}\nexport class MultipleErrors extends BaseWeb3Error {\n    constructor(errors) {\n        super(`Multiple errors occurred: [${errors.map(e => e.message).join('], [')}]`);\n        this.code = ERR_MULTIPLE_ERRORS;\n        this.errors = errors;\n    }\n}\nexport class InvalidValueError extends BaseWeb3Error {\n    constructor(value, msg) {\n        super(`Invalid value given \"${BaseWeb3Error.convertToString(value, true)}\". Error: ${msg}.`);\n        this.name = this.constructor.name;\n    }\n}\n//# sourceMappingURL=web3_error_base.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/* eslint-disable max-classes-per-file */\nimport { ERR_PRIVATE_KEY_LENGTH, ERR_INVALID_PRIVATE_KEY, ERR_INVALID_SIGNATURE, ERR_UNSUPPORTED_KDF, ERR_KEY_DERIVATION_FAIL, ERR_KEY_VERSION_UNSUPPORTED, ERR_INVALID_PASSWORD, ERR_IV_LENGTH, ERR_PBKDF2_ITERATIONS, } from '../error_codes.js';\nimport { BaseWeb3Error } from '../web3_error_base.js';\nexport class PrivateKeyLengthError extends BaseWeb3Error {\n    constructor() {\n        super(`Private key must be 32 bytes.`);\n        this.code = ERR_PRIVATE_KEY_LENGTH;\n    }\n}\nexport class InvalidPrivateKeyError extends BaseWeb3Error {\n    constructor() {\n        super(`Invalid Private Key, Not a valid string or uint8Array`);\n        this.code = ERR_INVALID_PRIVATE_KEY;\n    }\n}\nexport class InvalidSignatureError extends BaseWeb3Error {\n    constructor(errorDetails) {\n        super(`\"${errorDetails}\"`);\n        this.code = ERR_INVALID_SIGNATURE;\n    }\n}\nexport class InvalidKdfError extends BaseWeb3Error {\n    constructor() {\n        super(`Invalid key derivation function`);\n        this.code = ERR_UNSUPPORTED_KDF;\n    }\n}\nexport class KeyDerivationError extends BaseWeb3Error {\n    constructor() {\n        super(`Key derivation failed - possibly wrong password`);\n        this.code = ERR_KEY_DERIVATION_FAIL;\n    }\n}\nexport class KeyStoreVersionError extends BaseWeb3Error {\n    constructor() {\n        super('Unsupported key store version');\n        this.code = ERR_KEY_VERSION_UNSUPPORTED;\n    }\n}\nexport class InvalidPasswordError extends BaseWeb3Error {\n    constructor() {\n        super('Password cannot be empty');\n        this.code = ERR_INVALID_PASSWORD;\n    }\n}\nexport class IVLengthError extends BaseWeb3Error {\n    constructor() {\n        super('Initialization vector must be 16 bytes');\n        this.code = ERR_IV_LENGTH;\n    }\n}\nexport class PBKDF2IterationsError extends BaseWeb3Error {\n    constructor() {\n        super('c > 1000, pbkdf2 is less secure with less iterations');\n        this.code = ERR_PBKDF2_ITERATIONS;\n    }\n}\n//# sourceMappingURL=account_errors.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { ERR_CONN, ERR_CONN_INVALID, ERR_CONN_TIMEOUT, ERR_CONN_NOT_OPEN, ERR_CONN_CLOSE, ERR_CONN_MAX_ATTEMPTS, ERR_CONN_PENDING_REQUESTS, ERR_REQ_ALREADY_SENT, } from '../error_codes.js';\nimport { BaseWeb3Error } from '../web3_error_base.js';\nexport class ConnectionError extends BaseWeb3Error {\n    constructor(message, event) {\n        super(message);\n        this.code = ERR_CONN;\n        if (event) {\n            this.errorCode = event.code;\n            this.errorReason = event.reason;\n        }\n    }\n    toJSON() {\n        return Object.assign(Object.assign({}, super.toJSON()), { errorCode: this.errorCode, errorReason: this.errorReason });\n    }\n}\nexport class InvalidConnectionError extends ConnectionError {\n    constructor(host, event) {\n        super(`CONNECTION ERROR: Couldn't connect to node ${host}.`, event);\n        this.host = host;\n        this.code = ERR_CONN_INVALID;\n    }\n    toJSON() {\n        return Object.assign(Object.assign({}, super.toJSON()), { host: this.host });\n    }\n}\nexport class ConnectionTimeoutError extends ConnectionError {\n    constructor(duration) {\n        super(`CONNECTION TIMEOUT: timeout of ${duration}ms achieved`);\n        this.duration = duration;\n        this.code = ERR_CONN_TIMEOUT;\n    }\n    toJSON() {\n        return Object.assign(Object.assign({}, super.toJSON()), { duration: this.duration });\n    }\n}\nexport class ConnectionNotOpenError extends ConnectionError {\n    constructor(event) {\n        super('Connection not open', event);\n        this.code = ERR_CONN_NOT_OPEN;\n    }\n}\nexport class ConnectionCloseError extends ConnectionError {\n    constructor(event) {\n        var _a, _b;\n        super(`CONNECTION ERROR: The connection got closed with the close code ${(_a = event === null || event === void 0 ? void 0 : event.code) !== null && _a !== void 0 ? _a : ''} and the following reason string ${(_b = event === null || event === void 0 ? void 0 : event.reason) !== null && _b !== void 0 ? _b : ''}`, event);\n        this.code = ERR_CONN_CLOSE;\n    }\n}\nexport class MaxAttemptsReachedOnReconnectingError extends ConnectionError {\n    constructor(numberOfAttempts) {\n        super(`Maximum number of reconnect attempts reached! (${numberOfAttempts})`);\n        this.code = ERR_CONN_MAX_ATTEMPTS;\n    }\n}\nexport class PendingRequestsOnReconnectingError extends ConnectionError {\n    constructor() {\n        super('CONNECTION ERROR: Provider started to reconnect before the response got received!');\n        this.code = ERR_CONN_PENDING_REQUESTS;\n    }\n}\nexport class RequestAlreadySentError extends ConnectionError {\n    constructor(id) {\n        super(`Request already sent with following id: ${id}`);\n        this.code = ERR_REQ_ALREADY_SENT;\n    }\n}\n//# sourceMappingURL=connection_errors.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { ERR_CONTRACT, ERR_CONTRACT_ABI_MISSING, ERR_CONTRACT_EXECUTION_REVERTED, ERR_CONTRACT_EVENT_NOT_EXISTS, ERR_CONTRACT_INSTANTIATION, ERR_CONTRACT_MISSING_ADDRESS, ERR_CONTRACT_MISSING_DEPLOY_DATA, ERR_CONTRACT_MISSING_FROM_ADDRESS, ERR_CONTRACT_REQUIRED_CALLBACK, ERR_CONTRACT_RESERVED_EVENT, ERR_CONTRACT_RESOLVER_MISSING, ERR_CONTRACT_TX_DATA_AND_INPUT, } from '../error_codes.js';\nimport { BaseWeb3Error, InvalidValueError } from '../web3_error_base.js';\nexport class Web3ContractError extends BaseWeb3Error {\n    constructor(message, receipt) {\n        super(message);\n        this.code = ERR_CONTRACT;\n        this.receipt = receipt;\n    }\n}\nexport class ResolverMethodMissingError extends BaseWeb3Error {\n    constructor(address, name) {\n        super(`The resolver at ${address} does not implement requested method: \"${name}\".`);\n        this.address = address;\n        this.name = name;\n        this.code = ERR_CONTRACT_RESOLVER_MISSING;\n    }\n    toJSON() {\n        return Object.assign(Object.assign({}, super.toJSON()), { address: this.address, name: this.name });\n    }\n}\nexport class ContractMissingABIError extends BaseWeb3Error {\n    constructor() {\n        super('You must provide the json interface of the contract when instantiating a contract object.');\n        this.code = ERR_CONTRACT_ABI_MISSING;\n    }\n}\nexport class ContractOnceRequiresCallbackError extends BaseWeb3Error {\n    constructor() {\n        super('Once requires a callback as the second parameter.');\n        this.code = ERR_CONTRACT_REQUIRED_CALLBACK;\n    }\n}\nexport class ContractEventDoesNotExistError extends BaseWeb3Error {\n    constructor(eventName) {\n        super(`Event \"${eventName}\" doesn't exist in this contract.`);\n        this.eventName = eventName;\n        this.code = ERR_CONTRACT_EVENT_NOT_EXISTS;\n    }\n    toJSON() {\n        return Object.assign(Object.assign({}, super.toJSON()), { eventName: this.eventName });\n    }\n}\nexport class ContractReservedEventError extends BaseWeb3Error {\n    constructor(type) {\n        super(`Event \"${type}\" doesn't exist in this contract.`);\n        this.type = type;\n        this.code = ERR_CONTRACT_RESERVED_EVENT;\n    }\n    toJSON() {\n        return Object.assign(Object.assign({}, super.toJSON()), { type: this.type });\n    }\n}\nexport class ContractMissingDeployDataError extends BaseWeb3Error {\n    constructor() {\n        super(`No \"data\" specified in neither the given options, nor the default options.`);\n        this.code = ERR_CONTRACT_MISSING_DEPLOY_DATA;\n    }\n}\nexport class ContractNoAddressDefinedError extends BaseWeb3Error {\n    constructor() {\n        super(\"This contract object doesn't have address set yet, please set an address first.\");\n        this.code = ERR_CONTRACT_MISSING_ADDRESS;\n    }\n}\nexport class ContractNoFromAddressDefinedError extends BaseWeb3Error {\n    constructor() {\n        super('No \"from\" address specified in neither the given options, nor the default options.');\n        this.code = ERR_CONTRACT_MISSING_FROM_ADDRESS;\n    }\n}\nexport class ContractInstantiationError extends BaseWeb3Error {\n    constructor() {\n        super(...arguments);\n        this.code = ERR_CONTRACT_INSTANTIATION;\n    }\n}\n/**\n * This class is expected to be set as an `cause` inside ContractExecutionError\n * The properties would be typically decoded from the `data` if it was encoded according to EIP-838\n */\nexport class Eip838ExecutionError extends Web3ContractError {\n    constructor(error) {\n        super(error.message || 'Error');\n        this.name = ('name' in error && error.name) || this.constructor.name;\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.stack = ('stack' in error && error.stack) || undefined;\n        this.code = error.code;\n        // get embedded error details got from some providers like MetaMask\n        // and set this.data from the inner error data for easier read.\n        // note: the data is a hex string inside either:\n        //\t error.data, error.data.data or error.data.originalError.data (https://github.com/web3/web3.js/issues/4454#issuecomment-1485953455)\n        if (typeof error.data === 'object') {\n            let originalError;\n            if (error.data && 'originalError' in error.data) {\n                originalError = error.data.originalError;\n            }\n            else {\n                // Ganache has no `originalError` sub-object unlike others\n                originalError = error.data;\n            }\n            this.data = originalError.data;\n            this.cause = new Eip838ExecutionError(originalError);\n        }\n        else {\n            this.data = error.data;\n        }\n    }\n    setDecodedProperties(errorName, errorSignature, errorArgs) {\n        this.errorName = errorName;\n        this.errorSignature = errorSignature;\n        this.errorArgs = errorArgs;\n    }\n    toJSON() {\n        let json = Object.assign(Object.assign({}, super.toJSON()), { data: this.data });\n        if (this.errorName) {\n            json = Object.assign(Object.assign({}, json), { errorName: this.errorName, errorSignature: this.errorSignature, errorArgs: this.errorArgs });\n        }\n        return json;\n    }\n}\n/**\n * Used when an error is raised while executing a function inside a smart contract.\n * The data is expected to be encoded according to EIP-848.\n */\nexport class ContractExecutionError extends Web3ContractError {\n    constructor(rpcError) {\n        super('Error happened while trying to execute a function inside a smart contract');\n        this.code = ERR_CONTRACT_EXECUTION_REVERTED;\n        this.cause = new Eip838ExecutionError(rpcError);\n    }\n}\nexport class ContractTransactionDataAndInputError extends InvalidValueError {\n    constructor(value) {\n        var _a, _b;\n        super(`data: ${(_a = value.data) !== null && _a !== void 0 ? _a : 'undefined'}, input: ${(_b = value.input) !== null && _b !== void 0 ? _b : 'undefined'}`, 'You can\\'t have \"data\" and \"input\" as properties of a contract at the same time, please use either \"data\" or \"input\" instead.');\n        this.code = ERR_CONTRACT_TX_DATA_AND_INPUT;\n    }\n}\n//# sourceMappingURL=contract_errors.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/* eslint-disable max-classes-per-file */\nimport { ERR_ENS_CHECK_INTERFACE_SUPPORT, ERR_ENS_NETWORK_NOT_SYNCED, ERR_ENS_UNSUPPORTED_NETWORK, } from '../error_codes.js';\nimport { BaseWeb3Error } from '../web3_error_base.js';\nexport class ENSCheckInterfaceSupportError extends BaseWeb3Error {\n    constructor(errorDetails) {\n        super(`ENS resolver check interface support error. \"${errorDetails}\"`);\n        this.code = ERR_ENS_CHECK_INTERFACE_SUPPORT;\n    }\n}\nexport class ENSUnsupportedNetworkError extends BaseWeb3Error {\n    constructor(networkType) {\n        super(`ENS is not supported on network ${networkType}`);\n        this.code = ERR_ENS_UNSUPPORTED_NETWORK;\n    }\n}\nexport class ENSNetworkNotSyncedError extends BaseWeb3Error {\n    constructor() {\n        super(`Network not synced`);\n        this.code = ERR_ENS_NETWORK_NOT_SYNCED;\n    }\n}\n//# sourceMappingURL=ens_errors.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/* eslint-disable max-classes-per-file */\nimport { ERR_ABI_ENCODING, ERR_FORMATTERS, ERR_METHOD_NOT_IMPLEMENTED, ERR_OPERATION_ABORT, ERR_OPERATION_TIMEOUT, ERR_PARAM, ERR_EXISTING_PLUGIN_NAMESPACE, ERR_INVALID_METHOD_PARAMS, } from '../error_codes.js';\nimport { BaseWeb3Error } from '../web3_error_base.js';\nexport class InvalidNumberOfParamsError extends BaseWeb3Error {\n    constructor(got, expected, method) {\n        super(`Invalid number of parameters for \"${method}\". Got \"${got}\" expected \"${expected}\"!`);\n        this.got = got;\n        this.expected = expected;\n        this.method = method;\n        this.code = ERR_PARAM;\n    }\n    toJSON() {\n        return Object.assign(Object.assign({}, super.toJSON()), { got: this.got, expected: this.expected, method: this.method });\n    }\n}\nexport class InvalidMethodParamsError extends BaseWeb3Error {\n    constructor(hint) {\n        super(`Invalid parameters passed. \"${typeof hint !== 'undefined' ? hint : ''}\"`);\n        this.hint = hint;\n        this.code = ERR_INVALID_METHOD_PARAMS;\n    }\n    toJSON() {\n        return Object.assign(Object.assign({}, super.toJSON()), { hint: this.hint });\n    }\n}\nexport class FormatterError extends BaseWeb3Error {\n    constructor() {\n        super(...arguments);\n        this.code = ERR_FORMATTERS;\n    }\n}\nexport class MethodNotImplementedError extends BaseWeb3Error {\n    constructor() {\n        super(\"The method you're trying to call is not implemented.\");\n        this.code = ERR_METHOD_NOT_IMPLEMENTED;\n    }\n}\nexport class OperationTimeoutError extends BaseWeb3Error {\n    constructor() {\n        super(...arguments);\n        this.code = ERR_OPERATION_TIMEOUT;\n    }\n}\nexport class OperationAbortError extends BaseWeb3Error {\n    constructor() {\n        super(...arguments);\n        this.code = ERR_OPERATION_ABORT;\n    }\n}\nexport class AbiError extends BaseWeb3Error {\n    constructor(message, props) {\n        super(message);\n        this.code = ERR_ABI_ENCODING;\n        this.props = props !== null && props !== void 0 ? props : {};\n    }\n}\nexport class ExistingPluginNamespaceError extends BaseWeb3Error {\n    constructor(pluginNamespace) {\n        super(`A plugin with the namespace: ${pluginNamespace} has already been registered.`);\n        this.code = ERR_EXISTING_PLUGIN_NAMESPACE;\n    }\n}\n//# sourceMappingURL=generic_errors.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/* eslint-disable max-classes-per-file */\nimport { ERR_PROVIDER, ERR_INVALID_PROVIDER, ERR_INVALID_CLIENT, ERR_SUBSCRIPTION, ERR_WS_PROVIDER, } from '../error_codes.js';\nimport { BaseWeb3Error } from '../web3_error_base.js';\nexport class ProviderError extends BaseWeb3Error {\n    constructor() {\n        super(...arguments);\n        this.code = ERR_PROVIDER;\n    }\n}\nexport class InvalidProviderError extends BaseWeb3Error {\n    constructor(clientUrl) {\n        super(`Provider with url \"${clientUrl}\" is not set or invalid`);\n        this.clientUrl = clientUrl;\n        this.code = ERR_INVALID_PROVIDER;\n    }\n}\nexport class InvalidClientError extends BaseWeb3Error {\n    constructor(clientUrl) {\n        super(`Client URL \"${clientUrl}\" is invalid.`);\n        this.code = ERR_INVALID_CLIENT;\n    }\n}\nexport class SubscriptionError extends BaseWeb3Error {\n    constructor() {\n        super(...arguments);\n        this.code = ERR_SUBSCRIPTION;\n    }\n}\nexport class Web3WSProviderError extends BaseWeb3Error {\n    constructor() {\n        super(...arguments);\n        this.code = ERR_WS_PROVIDER; // this had duplicate code with generic provider\n    }\n}\n//# sourceMappingURL=provider_errors.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { ERR_SIGNATURE_FAILED } from '../error_codes.js';\nimport { InvalidValueError } from '../web3_error_base.js';\nexport class SignatureError extends InvalidValueError {\n    constructor() {\n        super(...arguments);\n        this.code = ERR_SIGNATURE_FAILED;\n    }\n}\n//# sourceMappingURL=signature_errors.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { ERR_RAW_TX_UNDEFINED, ERR_TX, ERR_TX_BLOCK_TIMEOUT, ERR_TX_CONTRACT_NOT_STORED, ERR_TX_CHAIN_ID_MISMATCH, ERR_TX_DATA_AND_INPUT, ERR_TX_GAS_MISMATCH, ERR_TX_CHAIN_MISMATCH, ERR_TX_HARDFORK_MISMATCH, ERR_TX_INVALID_CALL, ERR_TX_INVALID_CHAIN_INFO, ERR_TX_INVALID_FEE_MARKET_GAS, ERR_TX_INVALID_FEE_MARKET_GAS_PRICE, ERR_TX_INVALID_LEGACY_FEE_MARKET, ERR_TX_INVALID_LEGACY_GAS, ERR_TX_INVALID_NONCE_OR_CHAIN_ID, ERR_TX_INVALID_OBJECT, ERR_TX_INVALID_SENDER, ERR_TX_INVALID_RECEIVER, ERR_TX_LOCAL_WALLET_NOT_AVAILABLE, ERR_TX_MISSING_CHAIN_INFO, ERR_TX_MISSING_CUSTOM_CHAIN, ERR_TX_MISSING_CUSTOM_CHAIN_ID, ERR_TX_MISSING_GAS, ERR_TX_NO_CONTRACT_ADDRESS, ERR_TX_NOT_FOUND, ERR_TX_OUT_OF_GAS, ERR_TX_POLLING_TIMEOUT, ERR_TX_RECEIPT_MISSING_BLOCK_NUMBER, ERR_TX_RECEIPT_MISSING_OR_BLOCKHASH_NULL, ERR_TX_REVERT_INSTRUCTION, ERR_TX_REVERT_TRANSACTION, ERR_TX_REVERT_WITHOUT_REASON, ERR_TX_SEND_TIMEOUT, ERR_TX_SIGNING, ERR_TX_UNABLE_TO_POPULATE_NONCE, ERR_TX_UNSUPPORTED_EIP_1559, ERR_TX_UNSUPPORTED_TYPE, ERR_TX_REVERT_TRANSACTION_CUSTOM_ERROR, ERR_TX_INVALID_PROPERTIES_FOR_TYPE, ERR_TX_MISSING_GAS_INNER_ERROR, ERR_TX_GAS_MISMATCH_INNER_ERROR, } from '../error_codes.js';\nimport { InvalidValueError, BaseWeb3Error } from '../web3_error_base.js';\nexport class TransactionError extends BaseWeb3Error {\n    constructor(message, receipt) {\n        super(message);\n        this.receipt = receipt;\n        this.code = ERR_TX;\n    }\n    toJSON() {\n        return Object.assign(Object.assign({}, super.toJSON()), { receipt: this.receipt });\n    }\n}\nexport class RevertInstructionError extends BaseWeb3Error {\n    constructor(reason, signature) {\n        super(`Your request got reverted with the following reason string: ${reason}`);\n        this.reason = reason;\n        this.signature = signature;\n        this.code = ERR_TX_REVERT_INSTRUCTION;\n    }\n    toJSON() {\n        return Object.assign(Object.assign({}, super.toJSON()), { reason: this.reason, signature: this.signature });\n    }\n}\nexport class TransactionRevertInstructionError extends BaseWeb3Error {\n    constructor(reason, signature, receipt, data) {\n        super(`Transaction has been reverted by the EVM${receipt === undefined ? '' : `:\\n ${BaseWeb3Error.convertToString(receipt)}`}`);\n        this.reason = reason;\n        this.signature = signature;\n        this.receipt = receipt;\n        this.data = data;\n        this.code = ERR_TX_REVERT_TRANSACTION;\n    }\n    toJSON() {\n        return Object.assign(Object.assign({}, super.toJSON()), { reason: this.reason, signature: this.signature, receipt: this.receipt, data: this.data });\n    }\n}\n/**\n * This error is used when a transaction to a smart contract fails and\n * a custom user error (https://blog.soliditylang.org/2021/04/21/custom-errors/)\n * is able to be parsed from the revert reason\n */\nexport class TransactionRevertWithCustomError extends TransactionRevertInstructionError {\n    constructor(reason, customErrorName, customErrorDecodedSignature, customErrorArguments, signature, receipt, data) {\n        super(reason);\n        this.reason = reason;\n        this.customErrorName = customErrorName;\n        this.customErrorDecodedSignature = customErrorDecodedSignature;\n        this.customErrorArguments = customErrorArguments;\n        this.signature = signature;\n        this.receipt = receipt;\n        this.data = data;\n        this.code = ERR_TX_REVERT_TRANSACTION_CUSTOM_ERROR;\n    }\n    toJSON() {\n        return Object.assign(Object.assign({}, super.toJSON()), { reason: this.reason, customErrorName: this.customErrorName, customErrorDecodedSignature: this.customErrorDecodedSignature, customErrorArguments: this.customErrorArguments, signature: this.signature, receipt: this.receipt, data: this.data });\n    }\n}\nexport class NoContractAddressFoundError extends TransactionError {\n    constructor(receipt) {\n        super(\"The transaction receipt didn't contain a contract address.\", receipt);\n        this.code = ERR_TX_NO_CONTRACT_ADDRESS;\n    }\n    toJSON() {\n        return Object.assign(Object.assign({}, super.toJSON()), { receipt: this.receipt });\n    }\n}\nexport class ContractCodeNotStoredError extends TransactionError {\n    constructor(receipt) {\n        super(\"The contract code couldn't be stored, please check your gas limit.\", receipt);\n        this.code = ERR_TX_CONTRACT_NOT_STORED;\n    }\n}\nexport class TransactionRevertedWithoutReasonError extends TransactionError {\n    constructor(receipt) {\n        super(`Transaction has been reverted by the EVM${receipt === undefined ? '' : `:\\n ${BaseWeb3Error.convertToString(receipt)}`}`, receipt);\n        this.code = ERR_TX_REVERT_WITHOUT_REASON;\n    }\n}\nexport class TransactionOutOfGasError extends TransactionError {\n    constructor(receipt) {\n        super(`Transaction ran out of gas. Please provide more gas:\\n ${JSON.stringify(receipt, undefined, 2)}`, receipt);\n        this.code = ERR_TX_OUT_OF_GAS;\n    }\n}\nexport class UndefinedRawTransactionError extends TransactionError {\n    constructor() {\n        super(`Raw transaction undefined`);\n        this.code = ERR_RAW_TX_UNDEFINED;\n    }\n}\nexport class TransactionNotFound extends TransactionError {\n    constructor() {\n        super('Transaction not found');\n        this.code = ERR_TX_NOT_FOUND;\n    }\n}\nexport class InvalidTransactionWithSender extends InvalidValueError {\n    constructor(value) {\n        super(value, 'invalid transaction with invalid sender');\n        this.code = ERR_TX_INVALID_SENDER;\n    }\n}\nexport class InvalidTransactionWithReceiver extends InvalidValueError {\n    constructor(value) {\n        super(value, 'invalid transaction with invalid receiver');\n        this.code = ERR_TX_INVALID_RECEIVER;\n    }\n}\nexport class InvalidTransactionCall extends InvalidValueError {\n    constructor(value) {\n        super(value, 'invalid transaction call');\n        this.code = ERR_TX_INVALID_CALL;\n    }\n}\nexport class MissingCustomChainError extends InvalidValueError {\n    constructor() {\n        super('MissingCustomChainError', 'If tx.common is provided it must have tx.common.customChain');\n        this.code = ERR_TX_MISSING_CUSTOM_CHAIN;\n    }\n}\nexport class MissingCustomChainIdError extends InvalidValueError {\n    constructor() {\n        super('MissingCustomChainIdError', 'If tx.common is provided it must have tx.common.customChain and tx.common.customChain.chainId');\n        this.code = ERR_TX_MISSING_CUSTOM_CHAIN_ID;\n    }\n}\nexport class ChainIdMismatchError extends InvalidValueError {\n    constructor(value) {\n        super(JSON.stringify(value), \n        // https://github.com/ChainSafe/web3.js/blob/8783f4d64e424456bdc53b34ef1142d0a7cee4d7/packages/web3-eth-accounts/src/index.js#L176\n        'Chain Id doesnt match in tx.chainId tx.common.customChain.chainId');\n        this.code = ERR_TX_CHAIN_ID_MISMATCH;\n    }\n}\nexport class ChainMismatchError extends InvalidValueError {\n    constructor(value) {\n        super(JSON.stringify(value), 'Chain doesnt match in tx.chain tx.common.basechain');\n        this.code = ERR_TX_CHAIN_MISMATCH;\n    }\n}\nexport class HardforkMismatchError extends InvalidValueError {\n    constructor(value) {\n        super(JSON.stringify(value), 'hardfork doesnt match in tx.hardfork tx.common.hardfork');\n        this.code = ERR_TX_HARDFORK_MISMATCH;\n    }\n}\nexport class CommonOrChainAndHardforkError extends InvalidValueError {\n    constructor() {\n        super('CommonOrChainAndHardforkError', 'Please provide the common object or the chain and hardfork property but not all together.');\n        this.code = ERR_TX_INVALID_CHAIN_INFO;\n    }\n}\nexport class MissingChainOrHardforkError extends InvalidValueError {\n    constructor(value) {\n        var _a, _b;\n        super('MissingChainOrHardforkError', `When specifying chain and hardfork, both values must be defined. Received \"chain\": ${(_a = value.chain) !== null && _a !== void 0 ? _a : 'undefined'}, \"hardfork\": ${(_b = value.hardfork) !== null && _b !== void 0 ? _b : 'undefined'}`);\n        this.code = ERR_TX_MISSING_CHAIN_INFO;\n    }\n}\nexport class MissingGasInnerError extends BaseWeb3Error {\n    constructor() {\n        super('Missing properties in transaction, either define \"gas\" and \"gasPrice\" for type 0 transactions or \"gas\", \"maxPriorityFeePerGas\" and \"maxFeePerGas\" for type 2 transactions');\n        this.code = ERR_TX_MISSING_GAS_INNER_ERROR;\n    }\n}\nexport class MissingGasError extends InvalidValueError {\n    constructor(value) {\n        var _a, _b, _c, _d;\n        super(`gas: ${(_a = value.gas) !== null && _a !== void 0 ? _a : 'undefined'}, gasPrice: ${(_b = value.gasPrice) !== null && _b !== void 0 ? _b : 'undefined'}, maxPriorityFeePerGas: ${(_c = value.maxPriorityFeePerGas) !== null && _c !== void 0 ? _c : 'undefined'}, maxFeePerGas: ${(_d = value.maxFeePerGas) !== null && _d !== void 0 ? _d : 'undefined'}`, '\"gas\" is missing');\n        this.code = ERR_TX_MISSING_GAS;\n        this.cause = new MissingGasInnerError();\n    }\n}\nexport class TransactionGasMismatchInnerError extends BaseWeb3Error {\n    constructor() {\n        super('Missing properties in transaction, either define \"gas\" and \"gasPrice\" for type 0 transactions or \"gas\", \"maxPriorityFeePerGas\" and \"maxFeePerGas\" for type 2 transactions, not both');\n        this.code = ERR_TX_GAS_MISMATCH_INNER_ERROR;\n    }\n}\nexport class TransactionGasMismatchError extends InvalidValueError {\n    constructor(value) {\n        var _a, _b, _c, _d;\n        super(`gas: ${(_a = value.gas) !== null && _a !== void 0 ? _a : 'undefined'}, gasPrice: ${(_b = value.gasPrice) !== null && _b !== void 0 ? _b : 'undefined'}, maxPriorityFeePerGas: ${(_c = value.maxPriorityFeePerGas) !== null && _c !== void 0 ? _c : 'undefined'}, maxFeePerGas: ${(_d = value.maxFeePerGas) !== null && _d !== void 0 ? _d : 'undefined'}`, 'transaction must specify legacy or fee market gas properties, not both');\n        this.code = ERR_TX_GAS_MISMATCH;\n        this.cause = new TransactionGasMismatchInnerError();\n    }\n}\nexport class InvalidGasOrGasPrice extends InvalidValueError {\n    constructor(value) {\n        var _a, _b;\n        super(`gas: ${(_a = value.gas) !== null && _a !== void 0 ? _a : 'undefined'}, gasPrice: ${(_b = value.gasPrice) !== null && _b !== void 0 ? _b : 'undefined'}`, 'Gas or gasPrice is lower than 0');\n        this.code = ERR_TX_INVALID_LEGACY_GAS;\n    }\n}\nexport class InvalidMaxPriorityFeePerGasOrMaxFeePerGas extends InvalidValueError {\n    constructor(value) {\n        var _a, _b;\n        super(`maxPriorityFeePerGas: ${(_a = value.maxPriorityFeePerGas) !== null && _a !== void 0 ? _a : 'undefined'}, maxFeePerGas: ${(_b = value.maxFeePerGas) !== null && _b !== void 0 ? _b : 'undefined'}`, 'maxPriorityFeePerGas or maxFeePerGas is lower than 0');\n        this.code = ERR_TX_INVALID_FEE_MARKET_GAS;\n    }\n}\nexport class Eip1559GasPriceError extends InvalidValueError {\n    constructor(value) {\n        super(value, \"eip-1559 transactions don't support gasPrice\");\n        this.code = ERR_TX_INVALID_FEE_MARKET_GAS_PRICE;\n    }\n}\nexport class UnsupportedFeeMarketError extends InvalidValueError {\n    constructor(value) {\n        var _a, _b;\n        super(`maxPriorityFeePerGas: ${(_a = value.maxPriorityFeePerGas) !== null && _a !== void 0 ? _a : 'undefined'}, maxFeePerGas: ${(_b = value.maxFeePerGas) !== null && _b !== void 0 ? _b : 'undefined'}`, \"pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas\");\n        this.code = ERR_TX_INVALID_LEGACY_FEE_MARKET;\n    }\n}\nexport class InvalidTransactionObjectError extends InvalidValueError {\n    constructor(value) {\n        super(value, 'invalid transaction object');\n        this.code = ERR_TX_INVALID_OBJECT;\n    }\n}\nexport class InvalidNonceOrChainIdError extends InvalidValueError {\n    constructor(value) {\n        var _a, _b;\n        super(`nonce: ${(_a = value.nonce) !== null && _a !== void 0 ? _a : 'undefined'}, chainId: ${(_b = value.chainId) !== null && _b !== void 0 ? _b : 'undefined'}`, 'Nonce or chainId is lower than 0');\n        this.code = ERR_TX_INVALID_NONCE_OR_CHAIN_ID;\n    }\n}\nexport class UnableToPopulateNonceError extends InvalidValueError {\n    constructor() {\n        super('UnableToPopulateNonceError', 'unable to populate nonce, no from address available');\n        this.code = ERR_TX_UNABLE_TO_POPULATE_NONCE;\n    }\n}\nexport class Eip1559NotSupportedError extends InvalidValueError {\n    constructor() {\n        super('Eip1559NotSupportedError', \"Network doesn't support eip-1559\");\n        this.code = ERR_TX_UNSUPPORTED_EIP_1559;\n    }\n}\nexport class UnsupportedTransactionTypeError extends InvalidValueError {\n    constructor(value) {\n        super(value, 'unsupported transaction type');\n        this.code = ERR_TX_UNSUPPORTED_TYPE;\n    }\n}\nexport class TransactionDataAndInputError extends InvalidValueError {\n    constructor(value) {\n        var _a, _b;\n        super(`data: ${(_a = value.data) !== null && _a !== void 0 ? _a : 'undefined'}, input: ${(_b = value.input) !== null && _b !== void 0 ? _b : 'undefined'}`, 'You can\\'t have \"data\" and \"input\" as properties of transactions at the same time, please use either \"data\" or \"input\" instead.');\n        this.code = ERR_TX_DATA_AND_INPUT;\n    }\n}\nexport class TransactionSendTimeoutError extends BaseWeb3Error {\n    constructor(value) {\n        super(`The connected Ethereum Node did not respond within ${value.numberOfSeconds} seconds, please make sure your transaction was properly sent and you are connected to a healthy Node. Be aware that transaction might still be pending or mined!\\n\\tTransaction Hash: ${value.transactionHash ? value.transactionHash.toString() : 'not available'}`);\n        this.code = ERR_TX_SEND_TIMEOUT;\n    }\n}\nfunction transactionTimeoutHint(transactionHash) {\n    return `Please make sure your transaction was properly sent and there are no previous pending transaction for the same account. However, be aware that it might still be mined!\\n\\tTransaction Hash: ${transactionHash ? transactionHash.toString() : 'not available'}`;\n}\nexport class TransactionPollingTimeoutError extends BaseWeb3Error {\n    constructor(value) {\n        super(`Transaction was not mined within ${value.numberOfSeconds} seconds. ${transactionTimeoutHint(value.transactionHash)}`);\n        this.code = ERR_TX_POLLING_TIMEOUT;\n    }\n}\nexport class TransactionBlockTimeoutError extends BaseWeb3Error {\n    constructor(value) {\n        super(`Transaction started at ${value.starterBlockNumber} but was not mined within ${value.numberOfBlocks} blocks. ${transactionTimeoutHint(value.transactionHash)}`);\n        this.code = ERR_TX_BLOCK_TIMEOUT;\n    }\n}\nexport class TransactionMissingReceiptOrBlockHashError extends InvalidValueError {\n    constructor(value) {\n        var _a, _b;\n        super(`receipt: ${JSON.stringify(value.receipt)}, blockHash: ${(_a = value.blockHash) === null || _a === void 0 ? void 0 : _a.toString()}, transactionHash: ${(_b = value.transactionHash) === null || _b === void 0 ? void 0 : _b.toString()}`, `Receipt missing or blockHash null`);\n        this.code = ERR_TX_RECEIPT_MISSING_OR_BLOCKHASH_NULL;\n    }\n}\nexport class TransactionReceiptMissingBlockNumberError extends InvalidValueError {\n    constructor(value) {\n        super(`receipt: ${JSON.stringify(value.receipt)}`, `Receipt missing block number`);\n        this.code = ERR_TX_RECEIPT_MISSING_BLOCK_NUMBER;\n    }\n}\nexport class TransactionSigningError extends BaseWeb3Error {\n    constructor(errorDetails) {\n        super(`Invalid signature. \"${errorDetails}\"`);\n        this.code = ERR_TX_SIGNING;\n    }\n}\nexport class LocalWalletNotAvailableError extends InvalidValueError {\n    constructor() {\n        super('LocalWalletNotAvailableError', `Attempted to index account in local wallet, but no wallet is available`);\n        this.code = ERR_TX_LOCAL_WALLET_NOT_AVAILABLE;\n    }\n}\nexport class InvalidPropertiesForTransactionTypeError extends BaseWeb3Error {\n    constructor(validationError, txType) {\n        const invalidPropertyNames = [];\n        validationError.forEach(error => invalidPropertyNames.push(error.keyword));\n        super(`The following properties are invalid for the transaction type ${txType}: ${invalidPropertyNames.join(', ')}`);\n        this.code = ERR_TX_INVALID_PROPERTIES_FOR_TYPE;\n    }\n}\n//# sourceMappingURL=transaction_errors.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/* eslint-disable max-classes-per-file */\nimport { ERR_INVALID_BYTES, ERR_INVALID_NUMBER, ERR_INVALID_ADDRESS, ERR_INVALID_BLOCK, ERR_INVALID_BOOLEAN, ERR_INVALID_HEX, ERR_INVALID_LARGE_VALUE, ERR_INVALID_NIBBLE_WIDTH, ERR_INVALID_SIZE, ERR_INVALID_STRING, ERR_INVALID_TYPE, ERR_INVALID_TYPE_ABI, ERR_INVALID_UNIT, ERR_INVALID_INTEGER, ERR_INVALID_UNSIGNED_INTEGER, } from '../error_codes.js';\nimport { InvalidValueError } from '../web3_error_base.js';\nexport class InvalidBytesError extends InvalidValueError {\n    constructor(value) {\n        super(value, 'can not parse as byte data');\n        this.code = ERR_INVALID_BYTES;\n    }\n}\nexport class InvalidNumberError extends InvalidValueError {\n    constructor(value) {\n        super(value, 'can not parse as number data');\n        this.code = ERR_INVALID_NUMBER;\n    }\n}\nexport class InvalidAddressError extends InvalidValueError {\n    constructor(value) {\n        super(value, 'invalid ethereum address');\n        this.code = ERR_INVALID_ADDRESS;\n    }\n}\nexport class InvalidStringError extends InvalidValueError {\n    constructor(value) {\n        super(value, 'not a valid string');\n        this.code = ERR_INVALID_STRING;\n    }\n}\nexport class InvalidUnitError extends InvalidValueError {\n    constructor(value) {\n        super(value, 'invalid unit');\n        this.code = ERR_INVALID_UNIT;\n    }\n}\nexport class InvalidIntegerError extends InvalidValueError {\n    constructor(value) {\n        super(value, 'not a valid unit. Must be a positive integer');\n        this.code = ERR_INVALID_INTEGER;\n    }\n}\nexport class HexProcessingError extends InvalidValueError {\n    constructor(value) {\n        super(value, 'can not be converted to hex');\n        this.code = ERR_INVALID_HEX;\n    }\n}\nexport class NibbleWidthError extends InvalidValueError {\n    constructor(value) {\n        super(value, 'value greater than the nibble width');\n        this.code = ERR_INVALID_NIBBLE_WIDTH;\n    }\n}\nexport class InvalidTypeError extends InvalidValueError {\n    constructor(value) {\n        super(value, 'invalid type, type not supported');\n        this.code = ERR_INVALID_TYPE;\n    }\n}\nexport class InvalidBooleanError extends InvalidValueError {\n    constructor(value) {\n        super(value, 'not a valid boolean.');\n        this.code = ERR_INVALID_BOOLEAN;\n    }\n}\nexport class InvalidUnsignedIntegerError extends InvalidValueError {\n    constructor(value) {\n        super(value, 'not a valid unsigned integer.');\n        this.code = ERR_INVALID_UNSIGNED_INTEGER;\n    }\n}\nexport class InvalidSizeError extends InvalidValueError {\n    constructor(value) {\n        super(value, 'invalid size given.');\n        this.code = ERR_INVALID_SIZE;\n    }\n}\nexport class InvalidLargeValueError extends InvalidValueError {\n    constructor(value) {\n        super(value, 'value is larger than size.');\n        this.code = ERR_INVALID_LARGE_VALUE;\n    }\n}\nexport class InvalidBlockError extends InvalidValueError {\n    constructor(value) {\n        super(value, 'invalid string given');\n        this.code = ERR_INVALID_BLOCK;\n    }\n}\nexport class InvalidTypeAbiInputError extends InvalidValueError {\n    constructor(value) {\n        super(value, 'components found but type is not tuple');\n        this.code = ERR_INVALID_TYPE_ABI;\n    }\n}\n//# sourceMappingURL=utils_errors.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { BaseWeb3Error, MultipleErrors } from '../web3_error_base.js';\nimport { ERR_INVALID_RESPONSE, ERR_RESPONSE } from '../error_codes.js';\n// To avoid circular package dependency, copied to code here. If you update this please update same function in `json_rpc.ts`\nconst isResponseWithError = (response) => !Array.isArray(response) &&\n    response.jsonrpc === '2.0' &&\n    !!response &&\n    // eslint-disable-next-line no-null/no-null\n    (response.result === undefined || response.result === null) &&\n    // JSON RPC consider \"null\" as valid response\n    'error' in response &&\n    (typeof response.id === 'number' || typeof response.id === 'string');\nconst buildErrorMessage = (response) => isResponseWithError(response) ? response.error.message : '';\nexport class ResponseError extends BaseWeb3Error {\n    constructor(response, message, request, statusCode) {\n        var _a;\n        super(message !== null && message !== void 0 ? message : `Returned error: ${Array.isArray(response)\n            ? response.map(r => buildErrorMessage(r)).join(',')\n            : buildErrorMessage(response)}`);\n        this.code = ERR_RESPONSE;\n        if (!message) {\n            this.data = Array.isArray(response)\n                ? response.map(r => { var _a; return (_a = r.error) === null || _a === void 0 ? void 0 : _a.data; })\n                : (_a = response === null || response === void 0 ? void 0 : response.error) === null || _a === void 0 ? void 0 : _a.data;\n        }\n        this.statusCode = statusCode;\n        this.request = request;\n        let errorOrErrors;\n        if (`error` in response) {\n            errorOrErrors = response.error;\n        }\n        else if (response instanceof Array) {\n            errorOrErrors = response.filter(r => r.error).map(r => r.error);\n        }\n        if (Array.isArray(errorOrErrors) && errorOrErrors.length > 0) {\n            this.cause = new MultipleErrors(errorOrErrors);\n        }\n        else {\n            this.cause = errorOrErrors;\n        }\n    }\n    toJSON() {\n        return Object.assign(Object.assign({}, super.toJSON()), { data: this.data, request: this.request, statusCode: this.statusCode });\n    }\n}\nexport class InvalidResponseError extends ResponseError {\n    constructor(result, request) {\n        super(result, undefined, request);\n        this.code = ERR_INVALID_RESPONSE;\n        let errorOrErrors;\n        if (`error` in result) {\n            errorOrErrors = result.error;\n        }\n        else if (result instanceof Array) {\n            errorOrErrors = result.map(r => r.error);\n        }\n        if (Array.isArray(errorOrErrors)) {\n            this.cause = new MultipleErrors(errorOrErrors);\n        }\n        else {\n            this.cause = errorOrErrors;\n        }\n    }\n}\n//# sourceMappingURL=response_errors.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/* eslint-disable max-classes-per-file */\nimport { BaseWeb3Error } from '../web3_error_base.js';\nimport { ERR_CORE_HARDFORK_MISMATCH } from '../error_codes.js';\nexport class ConfigHardforkMismatchError extends BaseWeb3Error {\n    constructor(defaultHardfork, commonHardFork) {\n        super(`Web3Config hardfork doesnt match in defaultHardfork ${defaultHardfork} and common.hardfork ${commonHardFork}`);\n        this.code = ERR_CORE_HARDFORK_MISMATCH;\n    }\n}\nexport class ConfigChainMismatchError extends BaseWeb3Error {\n    constructor(defaultHardfork, commonHardFork) {\n        super(`Web3Config chain doesnt match in defaultHardfork ${defaultHardfork} and common.hardfork ${commonHardFork}`);\n        this.code = ERR_CORE_HARDFORK_MISMATCH;\n    }\n}\n//# sourceMappingURL=core_errors.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { ERR_RPC_INTERNAL_ERROR, ERR_RPC_INVALID_INPUT, ERR_RPC_INVALID_JSON, ERR_RPC_INVALID_METHOD, ERR_RPC_INVALID_PARAMS, ERR_RPC_INVALID_REQUEST, ERR_RPC_LIMIT_EXCEEDED, ERR_RPC_MISSING_RESOURCE, ERR_RPC_NOT_SUPPORTED, ERR_RPC_TRANSACTION_REJECTED, ERR_RPC_UNAVAILABLE_RESOURCE, ERR_RPC_UNSUPPORTED_METHOD, JSONRPC_ERR_CHAIN_DISCONNECTED, JSONRPC_ERR_DISCONNECTED, JSONRPC_ERR_REJECTED_REQUEST, JSONRPC_ERR_UNAUTHORIZED, JSONRPC_ERR_UNSUPPORTED_METHOD, } from '../error_codes.js';\n/**\n * A template string for a generic Rpc Error. The `*code*` will be replaced with the code number.\n * Note: consider in next version that a spelling mistake could be corrected for `occured` and the value could be:\n * \t`An Rpc error has occurred with a code of *code*`\n */\nexport const genericRpcErrorMessageTemplate = 'An Rpc error has occured with a code of *code*';\n/* eslint-disable @typescript-eslint/naming-convention */\nexport const RpcErrorMessages = {\n    //  EIP-1474 & JSON RPC 2.0\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1474.md\n    [ERR_RPC_INVALID_JSON]: {\n        message: 'Parse error',\n        description: 'Invalid JSON',\n    },\n    [ERR_RPC_INVALID_REQUEST]: {\n        message: 'Invalid request',\n        description: 'JSON is not a valid request object\t',\n    },\n    [ERR_RPC_INVALID_METHOD]: {\n        message: 'Method not found',\n        description: 'Method does not exist\t',\n    },\n    [ERR_RPC_INVALID_PARAMS]: {\n        message: 'Invalid params',\n        description: 'Invalid method parameters',\n    },\n    [ERR_RPC_INTERNAL_ERROR]: {\n        message: 'Internal error',\n        description: 'Internal JSON-RPC error',\n    },\n    [ERR_RPC_INVALID_INPUT]: {\n        message: 'Invalid input',\n        description: 'Missing or invalid parameters',\n    },\n    [ERR_RPC_MISSING_RESOURCE]: {\n        message: 'Resource not found',\n        description: 'Requested resource not found',\n    },\n    [ERR_RPC_UNAVAILABLE_RESOURCE]: {\n        message: 'Resource unavailable',\n        description: 'Requested resource not available',\n    },\n    [ERR_RPC_TRANSACTION_REJECTED]: {\n        message: 'Transaction rejected',\n        description: 'Transaction creation failed',\n    },\n    [ERR_RPC_UNSUPPORTED_METHOD]: {\n        message: 'Method not supported',\n        description: 'Method is not implemented',\n    },\n    [ERR_RPC_LIMIT_EXCEEDED]: {\n        message: 'Limit exceeded',\n        description: 'Request exceeds defined limit',\n    },\n    [ERR_RPC_NOT_SUPPORTED]: {\n        message: 'JSON-RPC version not supported',\n        description: 'Version of JSON-RPC protocol is not supported',\n    },\n    // EIP-1193\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md#provider-errors\n    [JSONRPC_ERR_REJECTED_REQUEST]: {\n        name: 'User Rejected Request',\n        message: 'The user rejected the request.',\n    },\n    [JSONRPC_ERR_UNAUTHORIZED]: {\n        name: 'Unauthorized',\n        message: 'The requested method and/or account has not been authorized by the user.',\n    },\n    [JSONRPC_ERR_UNSUPPORTED_METHOD]: {\n        name: 'Unsupported Method',\n        message: 'The Provider does not support the requested method.',\n    },\n    [JSONRPC_ERR_DISCONNECTED]: {\n        name: 'Disconnected',\n        message: 'The Provider is disconnected from all chains.',\n    },\n    [JSONRPC_ERR_CHAIN_DISCONNECTED]: {\n        name: 'Chain Disconnected',\n        message: 'The Provider is not connected to the requested chain.',\n    },\n    // EIP-1193 - CloseEvent\n    // https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent/code\n    '0-999': {\n        name: '',\n        message: 'Not used.',\n    },\n    1000: {\n        name: 'Normal Closure',\n        message: 'The connection successfully completed the purpose for which it was created.',\n    },\n    1001: {\n        name: 'Going Away',\n        message: 'The endpoint is going away, either because of a server failure or because the browser is navigating away from the page that opened the connection.',\n    },\n    1002: {\n        name: 'Protocol error',\n        message: 'The endpoint is terminating the connection due to a protocol error.',\n    },\n    1003: {\n        name: 'Unsupported Data',\n        message: 'The connection is being terminated because the endpoint received data of a type it cannot accept. (For example, a text-only endpoint received binary data.)',\n    },\n    1004: {\n        name: 'Reserved',\n        message: 'Reserved. A meaning might be defined in the future.',\n    },\n    1005: {\n        name: 'No Status Rcvd',\n        message: 'Reserved. Indicates that no status code was provided even though one was expected.',\n    },\n    1006: {\n        name: 'Abnormal Closure',\n        message: 'Reserved. Indicates that a connection was closed abnormally (that is, with no close frame being sent) when a status code is expected.',\n    },\n    1007: {\n        name: 'Invalid frame payload data',\n        message: 'The endpoint is terminating the connection because a message was received that contained inconsistent data (e.g., non-UTF-8 data within a text message).',\n    },\n    1008: {\n        name: 'Policy Violation',\n        message: 'The endpoint is terminating the connection because it received a message that violates its policy. This is a generic status code, used when codes 1003 and 1009 are not suitable.',\n    },\n    1009: {\n        name: 'Message Too Big',\n        message: 'The endpoint is terminating the connection because a data frame was received that is too large.',\n    },\n    1010: {\n        name: 'Mandatory Ext.',\n        message: \"The client is terminating the connection because it expected the server to negotiate one or more extension, but the server didn't.\",\n    },\n    1011: {\n        name: 'Internal Error',\n        message: 'The server is terminating the connection because it encountered an unexpected condition that prevented it from fulfilling the request.',\n    },\n    1012: {\n        name: 'Service Restart',\n        message: 'The server is terminating the connection because it is restarting.',\n    },\n    1013: {\n        name: 'Try Again Later',\n        message: 'The server is terminating the connection due to a temporary condition, e.g. it is overloaded and is casting off some of its clients.',\n    },\n    1014: {\n        name: 'Bad Gateway',\n        message: 'The server was acting as a gateway or proxy and received an invalid response from the upstream server. This is similar to 502 HTTP Status Code.',\n    },\n    1015: {\n        name: 'TLS handshake',\n        message: \"Reserved. Indicates that the connection was closed due to a failure to perform a TLS handshake (e.g., the server certificate can't be verified).\",\n    },\n    '1016-2999': {\n        name: '',\n        message: 'For definition by future revisions of the WebSocket Protocol specification, and for definition by extension specifications.',\n    },\n    '3000-3999': {\n        name: '',\n        message: 'For use by libraries, frameworks, and applications. These status codes are registered directly with IANA. The interpretation of these codes is undefined by the WebSocket protocol.',\n    },\n    '4000-4999': {\n        name: '',\n        message: \"For private use, and thus can't be registered. Such codes can be used by prior agreements between WebSocket applications. The interpretation of these codes is undefined by the WebSocket protocol.\",\n    },\n};\n//# sourceMappingURL=rpc_error_messages.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { BaseWeb3Error } from '../web3_error_base.js';\nimport { ERR_RPC_INTERNAL_ERROR, ERR_RPC_INVALID_INPUT, ERR_RPC_INVALID_JSON, ERR_RPC_INVALID_METHOD, ERR_RPC_INVALID_PARAMS, ERR_RPC_INVALID_REQUEST, ERR_RPC_LIMIT_EXCEEDED, ERR_RPC_MISSING_RESOURCE, ERR_RPC_NOT_SUPPORTED, ERR_RPC_TRANSACTION_REJECTED, ERR_RPC_UNAVAILABLE_RESOURCE, ERR_RPC_UNSUPPORTED_METHOD, } from '../error_codes.js';\nimport { RpcErrorMessages, genericRpcErrorMessageTemplate } from './rpc_error_messages.js';\nexport class RpcError extends BaseWeb3Error {\n    constructor(rpcError, message) {\n        super(message !== null && message !== void 0 ? message : genericRpcErrorMessageTemplate.replace('*code*', rpcError.error.code.toString()));\n        this.code = rpcError.error.code;\n        this.id = rpcError.id;\n        this.jsonrpc = rpcError.jsonrpc;\n        this.jsonRpcError = rpcError.error;\n    }\n    toJSON() {\n        return Object.assign(Object.assign({}, super.toJSON()), { error: this.jsonRpcError, id: this.id, jsonRpc: this.jsonrpc });\n    }\n}\nexport class EIP1193ProviderRpcError extends BaseWeb3Error {\n    constructor(code, data) {\n        var _a, _b, _c, _d;\n        if (!code) {\n            // this case should ideally not happen\n            super();\n        }\n        else if ((_a = RpcErrorMessages[code]) === null || _a === void 0 ? void 0 : _a.message) {\n            super(RpcErrorMessages[code].message);\n        }\n        else {\n            // Retrieve the status code object for the given code from the table, by searching through the appropriate range\n            const statusCodeRange = Object.keys(RpcErrorMessages).find(statusCode => typeof statusCode === 'string' &&\n                code >= parseInt(statusCode.split('-')[0], 10) &&\n                code <= parseInt(statusCode.split('-')[1], 10));\n            super((_c = (_b = RpcErrorMessages[statusCodeRange !== null && statusCodeRange !== void 0 ? statusCodeRange : '']) === null || _b === void 0 ? void 0 : _b.message) !== null && _c !== void 0 ? _c : genericRpcErrorMessageTemplate.replace('*code*', (_d = code === null || code === void 0 ? void 0 : code.toString()) !== null && _d !== void 0 ? _d : '\"\"'));\n        }\n        this.code = code;\n        this.data = data;\n    }\n}\nexport class ParseError extends RpcError {\n    constructor(rpcError) {\n        super(rpcError, RpcErrorMessages[ERR_RPC_INVALID_JSON].message);\n        this.code = ERR_RPC_INVALID_JSON;\n    }\n}\nexport class InvalidRequestError extends RpcError {\n    constructor(rpcError) {\n        super(rpcError, RpcErrorMessages[ERR_RPC_INVALID_REQUEST].message);\n        this.code = ERR_RPC_INVALID_REQUEST;\n    }\n}\nexport class MethodNotFoundError extends RpcError {\n    constructor(rpcError) {\n        super(rpcError, RpcErrorMessages[ERR_RPC_INVALID_METHOD].message);\n        this.code = ERR_RPC_INVALID_METHOD;\n    }\n}\nexport class InvalidParamsError extends RpcError {\n    constructor(rpcError) {\n        super(rpcError, RpcErrorMessages[ERR_RPC_INVALID_PARAMS].message);\n        this.code = ERR_RPC_INVALID_PARAMS;\n    }\n}\nexport class InternalError extends RpcError {\n    constructor(rpcError) {\n        super(rpcError, RpcErrorMessages[ERR_RPC_INTERNAL_ERROR].message);\n        this.code = ERR_RPC_INTERNAL_ERROR;\n    }\n}\nexport class InvalidInputError extends RpcError {\n    constructor(rpcError) {\n        super(rpcError, RpcErrorMessages[ERR_RPC_INVALID_INPUT].message);\n        this.code = ERR_RPC_INVALID_INPUT;\n    }\n}\nexport class MethodNotSupported extends RpcError {\n    constructor(rpcError) {\n        super(rpcError, RpcErrorMessages[ERR_RPC_UNSUPPORTED_METHOD].message);\n        this.code = ERR_RPC_UNSUPPORTED_METHOD;\n    }\n}\nexport class ResourceUnavailableError extends RpcError {\n    constructor(rpcError) {\n        super(rpcError, RpcErrorMessages[ERR_RPC_UNAVAILABLE_RESOURCE].message);\n        this.code = ERR_RPC_UNAVAILABLE_RESOURCE;\n    }\n}\nexport class ResourcesNotFoundError extends RpcError {\n    constructor(rpcError) {\n        super(rpcError, RpcErrorMessages[ERR_RPC_MISSING_RESOURCE].message);\n        this.code = ERR_RPC_MISSING_RESOURCE;\n    }\n}\nexport class VersionNotSupportedError extends RpcError {\n    constructor(rpcError) {\n        super(rpcError, RpcErrorMessages[ERR_RPC_NOT_SUPPORTED].message);\n        this.code = ERR_RPC_NOT_SUPPORTED;\n    }\n}\nexport class TransactionRejectedError extends RpcError {\n    constructor(rpcError) {\n        super(rpcError, RpcErrorMessages[ERR_RPC_TRANSACTION_REJECTED].message);\n        this.code = ERR_RPC_TRANSACTION_REJECTED;\n    }\n}\nexport class LimitExceededError extends RpcError {\n    constructor(rpcError) {\n        super(rpcError, RpcErrorMessages[ERR_RPC_LIMIT_EXCEEDED].message);\n        this.code = ERR_RPC_LIMIT_EXCEEDED;\n    }\n}\nexport const rpcErrorsMap = new Map();\nrpcErrorsMap.set(ERR_RPC_INVALID_JSON, { error: ParseError });\nrpcErrorsMap.set(ERR_RPC_INVALID_REQUEST, {\n    error: InvalidRequestError,\n});\nrpcErrorsMap.set(ERR_RPC_INVALID_METHOD, {\n    error: MethodNotFoundError,\n});\nrpcErrorsMap.set(ERR_RPC_INVALID_PARAMS, { error: InvalidParamsError });\nrpcErrorsMap.set(ERR_RPC_INTERNAL_ERROR, { error: InternalError });\nrpcErrorsMap.set(ERR_RPC_INVALID_INPUT, { error: InvalidInputError });\nrpcErrorsMap.set(ERR_RPC_UNSUPPORTED_METHOD, {\n    error: MethodNotSupported,\n});\nrpcErrorsMap.set(ERR_RPC_UNAVAILABLE_RESOURCE, {\n    error: ResourceUnavailableError,\n});\nrpcErrorsMap.set(ERR_RPC_TRANSACTION_REJECTED, {\n    error: TransactionRejectedError,\n});\nrpcErrorsMap.set(ERR_RPC_MISSING_RESOURCE, {\n    error: ResourcesNotFoundError,\n});\nrpcErrorsMap.set(ERR_RPC_NOT_SUPPORTED, {\n    error: VersionNotSupportedError,\n});\nrpcErrorsMap.set(ERR_RPC_LIMIT_EXCEEDED, { error: LimitExceededError });\n//# sourceMappingURL=rpc_errors.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { ERR_SCHEMA_FORMAT } from '../error_codes.js';\nimport { BaseWeb3Error } from '../web3_error_base.js';\nexport class SchemaFormatError extends BaseWeb3Error {\n    constructor(type) {\n        super(`Format for the type ${type} is unsupported`);\n        this.type = type;\n        this.code = ERR_SCHEMA_FORMAT;\n    }\n    toJSON() {\n        return Object.assign(Object.assign({}, super.toJSON()), { type: this.type });\n    }\n}\n//# sourceMappingURL=schema_errors.js.map","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n// copied from utils\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, isLE, byteSwap32, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        if (!isLE)\n            byteSwap32(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!isLE)\n            byteSwap32(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","import assert from \"@noble/hashes/_assert\";\nimport { hexToBytes as _hexToBytes } from \"@noble/hashes/utils\";\nconst assertBool = assert.bool;\nconst assertBytes = assert.bytes;\nexport { assertBool, assertBytes };\nexport { bytesToHex, bytesToHex as toHex, concatBytes, createView, utf8ToBytes } from \"@noble/hashes/utils\";\n// buf.toString('utf8') -> bytesToUtf8(buf)\nexport function bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexport function hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return _hexToBytes(sliced);\n}\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nexport function equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n// Internal utils\nexport function wrapHash(hash) {\n    return (msg) => {\n        assert.bytes(msg);\n        return hash(msg);\n    };\n}\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nexport const crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n","import { keccak_224, keccak_256, keccak_384, keccak_512 } from \"@noble/hashes/sha3\";\nimport { wrapHash } from \"./utils.js\";\nexport const keccak224 = wrapHash(keccak_224);\nexport const keccak256 = (() => {\n    const k = wrapHash(keccak_256);\n    k.create = keccak_256.create;\n    return k;\n})();\nexport const keccak384 = wrapHash(keccak_384);\nexport const keccak512 = wrapHash(keccak_512);\n","export var util;\n(function (util) {\n    util.assertEqual = (_) => { };\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && Number.isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array.map((val) => (typeof val === \"string\" ? `'${val}'` : val)).join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nexport var objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nexport const ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return Number.isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n","import { util } from \"./helpers/util.js\";\nexport const ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nexport const quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexport class ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n","import { ZodIssueCode } from \"../ZodError.js\";\nimport { util, ZodParsedType } from \"../helpers/util.js\";\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\nexport default errorMap;\n","import defaultErrorMap from \"./locales/en.js\";\nlet overrideErrorMap = defaultErrorMap;\nexport { defaultErrorMap };\nexport function setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexport function getErrorMap() {\n    return overrideErrorMap;\n}\n","import { getErrorMap } from \"../errors.js\";\nimport defaultErrorMap from \"../locales/en.js\";\nexport const makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nexport const EMPTY_PATH = [];\nexport function addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === defaultErrorMap ? undefined : defaultErrorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexport class ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" && (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexport const INVALID = Object.freeze({\n    status: \"aborted\",\n});\nexport const DIRTY = (value) => ({ status: \"dirty\", value });\nexport const OK = (value) => ({ status: \"valid\", value });\nexport const isAborted = (x) => x.status === \"aborted\";\nexport const isDirty = (x) => x.status === \"dirty\";\nexport const isValid = (x) => x.status === \"valid\";\nexport const isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n","export var errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    // biome-ignore lint:\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message?.message;\n})(errorUtil || (errorUtil = {}));\n","import { ZodError, ZodIssueCode, } from \"./ZodError.js\";\nimport { defaultErrorMap, getErrorMap } from \"./errors.js\";\nimport { errorUtil } from \"./helpers/errorUtil.js\";\nimport { DIRTY, INVALID, OK, ParseStatus, addIssueToContext, isAborted, isAsync, isDirty, isValid, makeIssue, } from \"./helpers/parseUtil.js\";\nimport { util, ZodParsedType, getParsedType } from \"./helpers/util.js\";\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (Array.isArray(this._key)) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message ?? ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: message ?? required_error ?? ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: message ?? invalid_type_error ?? ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nexport class ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: params?.async ?? false,\n                contextualErrorMap: params?.errorMap,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if (err?.message?.toLowerCase()?.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params?.errorMap,\n                async: true,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\" ? refinementData(val, ctx) : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    let secondsRegexSource = `[0-5]\\\\d`;\n    if (args.precision) {\n        secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n    }\n    const secondsQuantifier = args.precision ? \"+\" : \"?\"; // require seconds if precision is nonzero\n    return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (\"typ\" in decoded && decoded?.typ !== \"JWT\")\n            return false;\n        if (!decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nexport class ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            offset: options?.offset ?? false,\n            local: options?.local ?? false,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options?.position,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nexport class ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" || (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null;\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" || ch.kind === \"int\" || ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (Number.isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: params?.coerce || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nexport class ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        this._cached = { shape, keys };\n        return this._cached;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        const defaultError = this._def.errorMap?.(issue, ctx).message ?? ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: errorUtil.errToObj(message).message ?? defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(mask)) {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nexport class ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nexport class ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\n// type ZodTupleItems = [ZodTypeAny, ...ZodTypeAny[]];\nexport class ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexport class ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args ? args : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexport class ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nexport class ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(this._def.values);\n        }\n        if (!this._cache.has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\nZodEnum.create = createZodEnum;\nexport class ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(util.getValidEnumValues(this._def.values));\n        }\n        if (!this._cache.has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return INVALID;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {\n                    if (!isValid(base))\n                        return INVALID;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({\n                        status: status.value,\n                        value: result,\n                    }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nexport { ZodEffects as ZodTransformer };\nexport class ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\" ? params.default : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexport const BRAND = Symbol(\"zod_brand\");\nexport class ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexport class ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexport class ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result) ? result.then((data) => freeze(data)) : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\" ? params(data) : typeof params === \"string\" ? { message: params } : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nexport function custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = params.fatal ?? fatal ?? true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = params.fatal ?? fatal ?? true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nexport { ZodType as Schema, ZodType as ZodSchema };\nexport const late = {\n    object: ZodObject.lazycreate,\n};\nexport var ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\n// requires TS 4.4+\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nexport const coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexport { anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, dateType as date, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, instanceOfType as instanceof, intersectionType as intersection, lazyType as lazy, literalType as literal, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, recordType as record, setType as set, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, voidType as void, };\nexport const NEVER = INVALID;\n","export * from \"./errors.js\";\nexport * from \"./helpers/parseUtil.js\";\nexport * from \"./helpers/typeAliases.js\";\nexport * from \"./helpers/util.js\";\nexport * from \"./types.js\";\nexport * from \"./ZodError.js\";\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { BaseWeb3Error, ERR_VALIDATION } from 'web3-errors';\nconst errorFormatter = (error) => {\n    if (error.message) {\n        return error.message;\n    }\n    return 'unspecified error';\n};\nexport class Web3ValidatorError extends BaseWeb3Error {\n    constructor(errors) {\n        super();\n        this.code = ERR_VALIDATION;\n        this.errors = errors;\n        super.message = `Web3 validator found ${errors.length} error[s]:\\n${this._compileErrors().join('\\n')}`;\n    }\n    _compileErrors() {\n        return this.errors.map(errorFormatter);\n    }\n}\n//# sourceMappingURL=errors.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport const VALID_ETH_BASE_TYPES = ['bool', 'int', 'uint', 'bytes', 'string', 'address', 'tuple'];\n//# sourceMappingURL=constants.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport const isAbiParameterSchema = (schema) => typeof schema === 'object' && 'type' in schema && 'name' in schema;\n//# sourceMappingURL=abi.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * checks input if typeof data is valid string input\n */\nexport const isString = (value) => typeof value === 'string';\nexport const isHexStrict = (hex) => typeof hex === 'string' && /^((-)?0x[0-9a-f]+|(0x))$/i.test(hex);\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value, length) {\n    if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/))\n        return false;\n    if (typeof length !== 'undefined' && length > 0 && value.length !== 2 + 2 * length)\n        return false;\n    return true;\n}\nexport const isHex = (hex) => typeof hex === 'number' ||\n    typeof hex === 'bigint' ||\n    (typeof hex === 'string' && /^((-0x|0x|-)?[0-9a-f]+|(0x))$/i.test(hex));\nexport const isHexString8Bytes = (value, prefixed = true) => prefixed ? isHexStrict(value) && value.length === 18 : isHex(value) && value.length === 16;\nexport const isHexString32Bytes = (value, prefixed = true) => prefixed ? isHexStrict(value) && value.length === 66 : isHex(value) && value.length === 64;\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str) {\n    if (typeof str !== 'string') {\n        throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`);\n    }\n    return str.startsWith('0x');\n}\n/**\n * Checks provided Uint8Array for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Uint8Array values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = function (values) {\n    for (const [k, v] of Object.entries(values)) {\n        if (v !== undefined && v.length > 0 && v[0] === 0) {\n            throw new Error(`${k} cannot have leading zeroes, received: ${v.toString()}`);\n        }\n    }\n};\n//# sourceMappingURL=string.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { InvalidBytesError, InvalidNumberError } from 'web3-errors';\nimport { VALID_ETH_BASE_TYPES } from './constants.js';\nimport { isAbiParameterSchema } from './validation/abi.js';\nimport { isHexStrict } from './validation/string.js';\nimport { Web3ValidatorError } from './errors.js';\nconst extraTypes = ['hex', 'number', 'blockNumber', 'blockNumberOrTag', 'filter', 'bloom'];\nexport const parseBaseType = (type) => {\n    // Remove all empty spaces to avoid any parsing issue.\n    let strippedType = type.replace(/ /, '');\n    let baseTypeSize;\n    let isArray = false;\n    let arraySizes = [];\n    if (type.includes('[')) {\n        // Extract the array type\n        strippedType = strippedType.slice(0, strippedType.indexOf('['));\n        // Extract array indexes\n        arraySizes = [...type.matchAll(/(?:\\[(\\d*)\\])/g)]\n            .map(match => parseInt(match[1], 10))\n            .map(size => (Number.isNaN(size) ? -1 : size));\n        isArray = arraySizes.length > 0;\n    }\n    if (VALID_ETH_BASE_TYPES.includes(strippedType)) {\n        return { baseType: strippedType, isArray, baseTypeSize, arraySizes };\n    }\n    if (strippedType.startsWith('int')) {\n        baseTypeSize = parseInt(strippedType.substring(3), 10);\n        strippedType = 'int';\n    }\n    else if (strippedType.startsWith('uint')) {\n        baseTypeSize = parseInt(type.substring(4), 10);\n        strippedType = 'uint';\n    }\n    else if (strippedType.startsWith('bytes')) {\n        baseTypeSize = parseInt(strippedType.substring(5), 10);\n        strippedType = 'bytes';\n    }\n    else {\n        return { baseType: undefined, isArray: false, baseTypeSize: undefined, arraySizes };\n    }\n    return { baseType: strippedType, isArray, baseTypeSize, arraySizes };\n};\nconst convertEthType = (type, parentSchema = {}) => {\n    const typePropertyPresent = Object.keys(parentSchema).includes('type');\n    if (typePropertyPresent) {\n        throw new Web3ValidatorError([\n            {\n                keyword: 'eth',\n                message: 'Either \"eth\" or \"type\" can be presented in schema',\n                params: { eth: type },\n                instancePath: '',\n                schemaPath: '',\n            },\n        ]);\n    }\n    const { baseType, baseTypeSize } = parseBaseType(type);\n    if (!baseType && !extraTypes.includes(type)) {\n        throw new Web3ValidatorError([\n            {\n                keyword: 'eth',\n                message: `Eth data type \"${type}\" is not valid`,\n                params: { eth: type },\n                instancePath: '',\n                schemaPath: '',\n            },\n        ]);\n    }\n    if (baseType) {\n        if (baseType === 'tuple') {\n            throw new Error('\"tuple\" type is not implemented directly.');\n        }\n        return { format: `${baseType}${baseTypeSize !== null && baseTypeSize !== void 0 ? baseTypeSize : ''}`, required: true };\n    }\n    if (type) {\n        return { format: type, required: true };\n    }\n    return {};\n};\nexport const abiSchemaToJsonSchema = (abis, level = '/0') => {\n    const schema = {\n        type: 'array',\n        items: [],\n        maxItems: abis.length,\n        minItems: abis.length,\n    };\n    for (const [index, abi] of abis.entries()) {\n        // eslint-disable-next-line no-nested-ternary\n        let abiType;\n        let abiName;\n        let abiComponents = [];\n        // If it's a complete Abi Parameter\n        // e.g. {name: 'a', type: 'uint'}\n        if (isAbiParameterSchema(abi)) {\n            abiType = abi.type;\n            abiName = abi.name || `${level}/${index}`;\n            abiComponents = abi.components;\n            // If its short form string value e.g. ['uint']\n        }\n        else if (typeof abi === 'string') {\n            abiType = abi;\n            abiName = `${level}/${index}`;\n            // If it's provided in short form of tuple e.g. [['uint', 'string']]\n        }\n        else if (Array.isArray(abi)) {\n            // If its custom tuple e.g. ['tuple[2]', ['uint', 'string']]\n            if (abi[0] &&\n                typeof abi[0] === 'string' &&\n                abi[0].startsWith('tuple') &&\n                !Array.isArray(abi[0]) &&\n                abi[1] &&\n                Array.isArray(abi[1])) {\n                // eslint-disable-next-line prefer-destructuring\n                abiType = abi[0];\n                abiName = `${level}/${index}`;\n                abiComponents = abi[1];\n            }\n            else {\n                abiType = 'tuple';\n                abiName = `${level}/${index}`;\n                abiComponents = abi;\n            }\n        }\n        const { baseType, isArray, arraySizes } = parseBaseType(abiType);\n        let childSchema;\n        let lastSchema = schema;\n        for (let i = arraySizes.length - 1; i > 0; i -= 1) {\n            childSchema = {\n                type: 'array',\n                $id: abiName,\n                items: [],\n                maxItems: arraySizes[i],\n                minItems: arraySizes[i],\n            };\n            if (arraySizes[i] < 0) {\n                delete childSchema.maxItems;\n                delete childSchema.minItems;\n            }\n            // lastSchema.items is a Schema, concat with 'childSchema'\n            if (!Array.isArray(lastSchema.items)) {\n                lastSchema.items = [lastSchema.items, childSchema];\n            } // lastSchema.items is an empty Scheme array, set it to 'childSchema'\n            else if (lastSchema.items.length === 0) {\n                lastSchema.items = [childSchema];\n            } // lastSchema.items is a non-empty Scheme array, append 'childSchema'\n            else {\n                lastSchema.items.push(childSchema);\n            }\n            lastSchema = childSchema;\n        }\n        if (baseType === 'tuple' && !isArray) {\n            const nestedTuple = abiSchemaToJsonSchema(abiComponents, abiName);\n            nestedTuple.$id = abiName;\n            lastSchema.items.push(nestedTuple);\n        }\n        else if (baseType === 'tuple' && isArray) {\n            const arraySize = arraySizes[0];\n            const item = Object.assign({ type: 'array', $id: abiName, items: abiSchemaToJsonSchema(abiComponents, abiName) }, (arraySize >= 0 && { minItems: arraySize, maxItems: arraySize }));\n            lastSchema.items.push(item);\n        }\n        else if (isArray) {\n            const arraySize = arraySizes[0];\n            const item = Object.assign({ type: 'array', $id: abiName, items: convertEthType(abiType) }, (arraySize >= 0 && { minItems: arraySize, maxItems: arraySize }));\n            lastSchema.items.push(item);\n        }\n        else if (Array.isArray(lastSchema.items)) {\n            // Array of non-tuple items\n            lastSchema.items.push(Object.assign({ $id: abiName }, convertEthType(abiType)));\n        }\n        else {\n            // Nested object\n            lastSchema.items.push(Object.assign({ $id: abiName }, convertEthType(abiType)));\n        }\n        lastSchema = schema;\n    }\n    return schema;\n};\nexport const ethAbiToJsonSchema = (abis) => abiSchemaToJsonSchema(abis);\nexport const fetchArrayElement = (data, level) => {\n    if (level === 1) {\n        return data;\n    }\n    return fetchArrayElement(data[0], level - 1);\n};\nexport const transformJsonDataToAbiFormat = (abis, data, transformedData) => {\n    const newData = [];\n    for (const [index, abi] of abis.entries()) {\n        // eslint-disable-next-line no-nested-ternary\n        let abiType;\n        let abiName;\n        let abiComponents = [];\n        // If it's a complete Abi Parameter\n        // e.g. {name: 'a', type: 'uint'}\n        if (isAbiParameterSchema(abi)) {\n            abiType = abi.type;\n            abiName = abi.name;\n            abiComponents = abi.components;\n            // If its short form string value e.g. ['uint']\n        }\n        else if (typeof abi === 'string') {\n            abiType = abi;\n            // If it's provided in short form of tuple e.g. [['uint', 'string']]\n        }\n        else if (Array.isArray(abi)) {\n            // If its custom tuple e.g. ['tuple[2]', ['uint', 'string']]\n            if (abi[1] && Array.isArray(abi[1])) {\n                abiType = abi[0];\n                abiComponents = abi[1];\n            }\n            else {\n                abiType = 'tuple';\n                abiComponents = abi;\n            }\n        }\n        const { baseType, isArray, arraySizes } = parseBaseType(abiType);\n        const dataItem = Array.isArray(data)\n            ? data[index]\n            : data[abiName];\n        if (baseType === 'tuple' && !isArray) {\n            newData.push(transformJsonDataToAbiFormat(abiComponents, dataItem, transformedData));\n        }\n        else if (baseType === 'tuple' && isArray) {\n            const tupleData = [];\n            for (const tupleItem of dataItem) {\n                // Nested array\n                if (arraySizes.length > 1) {\n                    const nestedItems = fetchArrayElement(tupleItem, arraySizes.length - 1);\n                    const nestedData = [];\n                    for (const nestedItem of nestedItems) {\n                        nestedData.push(transformJsonDataToAbiFormat(abiComponents, nestedItem, transformedData));\n                    }\n                    tupleData.push(nestedData);\n                }\n                else {\n                    tupleData.push(transformJsonDataToAbiFormat(abiComponents, tupleItem, transformedData));\n                }\n            }\n            newData.push(tupleData);\n        }\n        else {\n            newData.push(dataItem);\n        }\n    }\n    // Have to reassign before pushing to transformedData\n    // eslint-disable-next-line no-param-reassign\n    transformedData = transformedData !== null && transformedData !== void 0 ? transformedData : [];\n    transformedData.push(...newData);\n    return transformedData;\n};\n/**\n * Code points to int\n */\nexport const codePointToInt = (codePoint) => {\n    if (codePoint >= 48 && codePoint <= 57) {\n        /* ['0'..'9'] -> [0..9] */\n        return codePoint - 48;\n    }\n    if (codePoint >= 65 && codePoint <= 70) {\n        /* ['A'..'F'] -> [10..15] */\n        return codePoint - 55;\n    }\n    if (codePoint >= 97 && codePoint <= 102) {\n        /* ['a'..'f'] -> [10..15] */\n        return codePoint - 87;\n    }\n    throw new Error(`Invalid code point: ${codePoint}`);\n};\n/**\n * Converts value to it's number representation\n */\nexport const hexToNumber = (value) => {\n    if (!isHexStrict(value)) {\n        throw new Error('Invalid hex string');\n    }\n    const [negative, hexValue] = value.startsWith('-') ? [true, value.slice(1)] : [false, value];\n    const num = BigInt(hexValue);\n    if (num > Number.MAX_SAFE_INTEGER) {\n        return negative ? -num : num;\n    }\n    if (num < Number.MIN_SAFE_INTEGER) {\n        return num;\n    }\n    return negative ? -1 * Number(num) : Number(num);\n};\n/**\n * Converts value to it's hex representation\n */\nexport const numberToHex = (value) => {\n    if ((typeof value === 'number' || typeof value === 'bigint') && value < 0) {\n        return `-0x${value.toString(16).slice(1)}`;\n    }\n    if ((typeof value === 'number' || typeof value === 'bigint') && value >= 0) {\n        return `0x${value.toString(16)}`;\n    }\n    if (typeof value === 'string' && isHexStrict(value)) {\n        const [negative, hex] = value.startsWith('-') ? [true, value.slice(1)] : [false, value];\n        const hexValue = hex.split(/^(-)?0(x|X)/).slice(-1)[0];\n        return `${negative ? '-' : ''}0x${hexValue.replace(/^0+/, '').toLowerCase()}`;\n    }\n    if (typeof value === 'string' && !isHexStrict(value)) {\n        return numberToHex(BigInt(value));\n    }\n    throw new InvalidNumberError(value);\n};\n/**\n * Adds a padding on the left of a string, if value is a integer or bigInt will be converted to a hex string.\n */\nexport const padLeft = (value, characterAmount, sign = '0') => {\n    if (typeof value === 'string' && !isHexStrict(value)) {\n        return value.padStart(characterAmount, sign);\n    }\n    const hex = typeof value === 'string' && isHexStrict(value) ? value : numberToHex(value);\n    const [prefix, hexValue] = hex.startsWith('-') ? ['-0x', hex.slice(3)] : ['0x', hex.slice(2)];\n    return `${prefix}${hexValue.padStart(characterAmount, sign)}`;\n};\nexport function uint8ArrayToHexString(uint8Array) {\n    let hexString = '0x';\n    for (const e of uint8Array) {\n        const hex = e.toString(16);\n        hexString += hex.length === 1 ? `0${hex}` : hex;\n    }\n    return hexString;\n}\n// for optimized technique for hex to bytes conversion\nconst charCodeMap = {\n    zero: 48,\n    nine: 57,\n    A: 65,\n    F: 70,\n    a: 97,\n    f: 102,\n};\nfunction charCodeToBase16(char) {\n    if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n        return char - charCodeMap.zero;\n    if (char >= charCodeMap.A && char <= charCodeMap.F)\n        return char - (charCodeMap.A - 10);\n    if (char >= charCodeMap.a && char <= charCodeMap.f)\n        return char - (charCodeMap.a - 10);\n    return undefined;\n}\nexport function hexToUint8Array(hex) {\n    let offset = 0;\n    if (hex.startsWith('0') && (hex[1] === 'x' || hex[1] === 'X')) {\n        offset = 2;\n    }\n    if (hex.length % 2 !== 0) {\n        throw new InvalidBytesError(`hex string has odd length: ${hex}`);\n    }\n    const length = (hex.length - offset) / 2;\n    const bytes = new Uint8Array(length);\n    for (let index = 0, j = offset; index < length; index += 1) {\n        // eslint-disable-next-line no-plusplus\n        const nibbleLeft = charCodeToBase16(hex.charCodeAt(j++));\n        // eslint-disable-next-line no-plusplus\n        const nibbleRight = charCodeToBase16(hex.charCodeAt(j++));\n        if (nibbleLeft === undefined || nibbleRight === undefined) {\n            throw new InvalidBytesError(`Invalid byte sequence (\"${hex[j - 2]}${hex[j - 1]}\" in \"${hex}\").`);\n        }\n        bytes[index] = nibbleLeft * 16 + nibbleRight;\n    }\n    return bytes;\n}\n// @TODO: Remove this function and its usages once all sub dependencies uses version 1.3.3 or above of @noble/hashes\nexport function ensureIfUint8Array(data) {\n    var _a;\n    if (!(data instanceof Uint8Array) &&\n        ((_a = data === null || data === void 0 ? void 0 : data.constructor) === null || _a === void 0 ? void 0 : _a.name) === 'Uint8Array') {\n        return Uint8Array.from(data);\n    }\n    return data;\n}\n//# sourceMappingURL=utils.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { hexToUint8Array, parseBaseType } from '../utils.js';\nimport { isHexStrict } from './string.js';\n/**\n * checks input if typeof data is valid Uint8Array input\n */\nexport const isUint8Array = (data) => { var _a, _b; return data instanceof Uint8Array || ((_a = data === null || data === void 0 ? void 0 : data.constructor) === null || _a === void 0 ? void 0 : _a.name) === 'Uint8Array' || ((_b = data === null || data === void 0 ? void 0 : data.constructor) === null || _b === void 0 ? void 0 : _b.name) === 'Buffer'; };\nexport const isBytes = (value, options = {\n    abiType: 'bytes',\n}) => {\n    if (typeof value !== 'string' && !Array.isArray(value) && !isUint8Array(value)) {\n        return false;\n    }\n    // isHexStrict also accepts - prefix which can not exists in bytes\n    if (typeof value === 'string' && isHexStrict(value) && value.startsWith('-')) {\n        return false;\n    }\n    if (typeof value === 'string' && !isHexStrict(value)) {\n        return false;\n    }\n    let valueToCheck;\n    if (typeof value === 'string') {\n        if (value.length % 2 !== 0) {\n            // odd length hex\n            return false;\n        }\n        valueToCheck = hexToUint8Array(value);\n    }\n    else if (Array.isArray(value)) {\n        if (value.some(d => d < 0 || d > 255 || !Number.isInteger(d))) {\n            return false;\n        }\n        valueToCheck = new Uint8Array(value);\n    }\n    else {\n        valueToCheck = value;\n    }\n    if (options === null || options === void 0 ? void 0 : options.abiType) {\n        const { baseTypeSize } = parseBaseType(options.abiType);\n        return baseTypeSize ? valueToCheck.length === baseTypeSize : true;\n    }\n    if (options === null || options === void 0 ? void 0 : options.size) {\n        return valueToCheck.length === (options === null || options === void 0 ? void 0 : options.size);\n    }\n    return true;\n};\n//# sourceMappingURL=bytes.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { utf8ToBytes } from 'ethereum-cryptography/utils.js';\nimport { ensureIfUint8Array, uint8ArrayToHexString } from '../utils.js';\nimport { isHexStrict } from './string.js';\nimport { isUint8Array } from './bytes.js';\n/**\n * Checks the checksum of a given address. Will also return false on non-checksum addresses.\n */\nexport const checkAddressCheckSum = (data) => {\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(data))\n        return false;\n    const address = data.slice(2);\n    const updatedData = utf8ToBytes(address.toLowerCase());\n    const addressHash = uint8ArrayToHexString(keccak256(ensureIfUint8Array(updatedData))).slice(2);\n    for (let i = 0; i < 40; i += 1) {\n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) ||\n            (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * Checks if a given string is a valid Ethereum address. It will also check the checksum, if the address has upper and lowercase letters.\n */\nexport const isAddress = (value, checkChecksum = true) => {\n    if (typeof value !== 'string' && !isUint8Array(value)) {\n        return false;\n    }\n    let valueToCheck;\n    if (isUint8Array(value)) {\n        valueToCheck = uint8ArrayToHexString(value);\n    }\n    else if (typeof value === 'string' && !isHexStrict(value)) {\n        valueToCheck = value.toLowerCase().startsWith('0x') ? value : `0x${value}`;\n    }\n    else {\n        valueToCheck = value;\n    }\n    // check if it has the basic requirements of an address\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(valueToCheck)) {\n        return false;\n    }\n    // If it's ALL lowercase or ALL upppercase\n    if (/^(0x|0X)?[0-9a-f]{40}$/.test(valueToCheck) ||\n        /^(0x|0X)?[0-9A-F]{40}$/.test(valueToCheck)) {\n        return true;\n        // Otherwise check each case\n    }\n    return checkChecksum ? checkAddressCheckSum(valueToCheck) : true;\n};\n//# sourceMappingURL=address.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { parseBaseType, hexToNumber } from '../utils.js';\nimport { isHexStrict } from './string.js';\n/**\n * Checks if a given value is a valid big int\n */\nexport const isBigInt = (value) => typeof value === 'bigint';\n// Note: this could be simplified using ** operator, but babel does not handle it well\n// \tyou can find more at: https://github.com/babel/babel/issues/13109 and https://github.com/web3/web3.js/issues/6187\n/** @internal */\nexport const bigintPower = (base, expo) => {\n    // edge case\n    if (expo === BigInt(0)) {\n        return BigInt(1);\n    }\n    let res = base;\n    for (let index = 1; index < expo; index += 1) {\n        res *= base;\n    }\n    return res;\n};\nexport const isUInt = (value, options = {\n    abiType: 'uint',\n}) => {\n    if (!['number', 'string', 'bigint'].includes(typeof value) ||\n        (typeof value === 'string' && value.length === 0)) {\n        return false;\n    }\n    let size;\n    if (options === null || options === void 0 ? void 0 : options.abiType) {\n        const { baseTypeSize } = parseBaseType(options.abiType);\n        if (baseTypeSize) {\n            size = baseTypeSize;\n        }\n    }\n    else if (options.bitSize) {\n        size = options.bitSize;\n    }\n    const maxSize = bigintPower(BigInt(2), BigInt(size !== null && size !== void 0 ? size : 256)) - BigInt(1);\n    try {\n        const valueToCheck = typeof value === 'string' && isHexStrict(value)\n            ? BigInt(hexToNumber(value))\n            : BigInt(value);\n        return valueToCheck >= 0 && valueToCheck <= maxSize;\n    }\n    catch (error) {\n        // Some invalid number value given which can not be converted via BigInt\n        return false;\n    }\n};\nexport const isInt = (value, options = {\n    abiType: 'int',\n}) => {\n    if (!['number', 'string', 'bigint'].includes(typeof value)) {\n        return false;\n    }\n    if (typeof value === 'number' && value > Number.MAX_SAFE_INTEGER) {\n        return false;\n    }\n    let size;\n    if (options === null || options === void 0 ? void 0 : options.abiType) {\n        const { baseTypeSize, baseType } = parseBaseType(options.abiType);\n        if (baseType !== 'int') {\n            return false;\n        }\n        if (baseTypeSize) {\n            size = baseTypeSize;\n        }\n    }\n    else if (options.bitSize) {\n        size = options.bitSize;\n    }\n    const maxSize = bigintPower(BigInt(2), BigInt((size !== null && size !== void 0 ? size : 256) - 1));\n    const minSize = BigInt(-1) * bigintPower(BigInt(2), BigInt((size !== null && size !== void 0 ? size : 256) - 1));\n    try {\n        const valueToCheck = typeof value === 'string' && isHexStrict(value)\n            ? BigInt(hexToNumber(value))\n            : BigInt(value);\n        return valueToCheck >= minSize && valueToCheck <= maxSize;\n    }\n    catch (error) {\n        // Some invalid number value given which can not be converted via BigInt\n        return false;\n    }\n};\nexport const isNumber = (value) => {\n    if (isInt(value)) {\n        return true;\n    }\n    // It would be a decimal number\n    if (typeof value === 'string' &&\n        /[0-9.]/.test(value) &&\n        value.indexOf('.') === value.lastIndexOf('.')) {\n        return true;\n    }\n    if (typeof value === 'number') {\n        return true;\n    }\n    return false;\n};\n//# sourceMappingURL=numbers.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { BlockTags } from 'web3-types';\nimport { isUInt } from './numbers.js';\nexport const isBlockNumber = (value) => isUInt(value);\n/**\n * Returns true if the given blockNumber is 'latest', 'pending', 'earliest, 'safe' or 'finalized'\n */\nexport const isBlockTag = (value) => Object.values(BlockTags).includes(value);\n/**\n * Returns true if given value is valid hex string and not negative, or is a valid BlockTag\n */\nexport const isBlockNumberOrTag = (value) => isBlockTag(value) || isBlockNumber(value);\n//# sourceMappingURL=block.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { codePointToInt, hexToUint8Array, padLeft, uint8ArrayToHexString } from '../utils.js';\nimport { isAddress } from './address.js';\nimport { isHexStrict } from './string.js';\n/**\n * Returns true if the bloom is a valid bloom\n * https://github.com/joshstevens19/ethereum-bloom-filters/blob/fbeb47b70b46243c3963fe1c2988d7461ef17236/src/index.ts#L7\n */\nexport const isBloom = (bloom) => {\n    if (typeof bloom !== 'string') {\n        return false;\n    }\n    if (!/^(0x)?[0-9a-f]{512}$/i.test(bloom)) {\n        return false;\n    }\n    if (/^(0x)?[0-9a-f]{512}$/.test(bloom) || /^(0x)?[0-9A-F]{512}$/.test(bloom)) {\n        return true;\n    }\n    return false;\n};\n/**\n * Returns true if the value is part of the given bloom\n * note: false positives are possible.\n */\nexport const isInBloom = (bloom, value) => {\n    if (typeof value === 'string' && !isHexStrict(value)) {\n        return false;\n    }\n    if (!isBloom(bloom)) {\n        return false;\n    }\n    const uint8Array = typeof value === 'string' ? hexToUint8Array(value) : value;\n    const hash = uint8ArrayToHexString(keccak256(uint8Array)).slice(2);\n    for (let i = 0; i < 12; i += 4) {\n        // calculate bit position in bloom filter that must be active\n        const bitpos = \n        // eslint-disable-next-line no-bitwise\n        ((parseInt(hash.slice(i, i + 2), 16) << 8) + parseInt(hash.slice(i + 2, i + 4), 16)) &\n            2047;\n        // test if bitpos in bloom is active\n        const code = codePointToInt(bloom.charCodeAt(bloom.length - 1 - Math.floor(bitpos / 4)));\n        // eslint-disable-next-line no-bitwise\n        const offset = 1 << bitpos % 4;\n        // eslint-disable-next-line no-bitwise\n        if ((code & offset) !== offset) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * Returns true if the ethereum users address is part of the given bloom note: false positives are possible.\n */\nexport const isUserEthereumAddressInBloom = (bloom, ethereumAddress) => {\n    if (!isBloom(bloom)) {\n        return false;\n    }\n    if (!isAddress(ethereumAddress)) {\n        return false;\n    }\n    // you have to pad the ethereum address to 32 bytes\n    // else the bloom filter does not work\n    // this is only if your matching the USERS\n    // ethereum address. Contract address do not need this\n    // hence why we have 2 methods\n    // (0x is not in the 2nd parameter of padleft so 64 chars is fine)\n    const address = padLeft(ethereumAddress, 64);\n    return isInBloom(bloom, address);\n};\n/**\n * Returns true if the contract address is part of the given bloom.\n * note: false positives are possible.\n */\nexport const isContractAddressInBloom = (bloom, contractAddress) => {\n    if (!isBloom(bloom)) {\n        return false;\n    }\n    if (!isAddress(contractAddress)) {\n        return false;\n    }\n    return isInBloom(bloom, contractAddress);\n};\n//# sourceMappingURL=bloom.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { isHexStrict } from './string.js';\nexport const isBoolean = (value) => {\n    if (!['number', 'string', 'boolean'].includes(typeof value)) {\n        return false;\n    }\n    if (typeof value === 'boolean') {\n        return true;\n    }\n    if (typeof value === 'string' && !isHexStrict(value)) {\n        return value === '1' || value === '0';\n    }\n    if (typeof value === 'string' && isHexStrict(value)) {\n        return value === '0x1' || value === '0x0';\n    }\n    // type === number\n    return value === 1 || value === 0;\n};\n//# sourceMappingURL=boolean.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { TypedArray } from 'web3-types';\n// Explicitly check for the\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isNullish = (item) => \n// Using \"null\" value intentionally for validation\n// eslint-disable-next-line no-null/no-null\nitem === undefined || item === null;\nexport const isObject = (item) => typeof item === 'object' &&\n    !isNullish(item) &&\n    !Array.isArray(item) &&\n    !(item instanceof TypedArray);\n//# sourceMappingURL=object.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { isBloom, isInBloom } from './bloom.js';\n/**\n * Checks if its a valid topic\n */\nexport const isTopic = (topic) => {\n    if (typeof topic !== 'string') {\n        return false;\n    }\n    if (!/^(0x)?[0-9a-f]{64}$/i.test(topic)) {\n        return false;\n    }\n    if (/^(0x)?[0-9a-f]{64}$/.test(topic) || /^(0x)?[0-9A-F]{64}$/.test(topic)) {\n        return true;\n    }\n    return false;\n};\n/**\n * Returns true if the topic is part of the given bloom.\n * note: false positives are possible.\n */\nexport const isTopicInBloom = (bloom, topic) => {\n    if (!isBloom(bloom)) {\n        return false;\n    }\n    if (!isTopic(topic)) {\n        return false;\n    }\n    return isInBloom(bloom, topic);\n};\n//# sourceMappingURL=topic.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { isAddress } from './address.js';\nimport { isBlockNumberOrTag } from './block.js';\nimport { isNullish } from './object.js';\nimport { isTopic } from './topic.js';\n/**\n * First we check if all properties in the provided value are expected,\n * then because all Filter properties are optional, we check if the expected properties\n * are defined. If defined and they're not the expected type, we immediately return false,\n * otherwise we return true after all checks pass.\n */\nexport const isFilterObject = (value) => {\n    const expectedFilterProperties = [\n        'fromBlock',\n        'toBlock',\n        'address',\n        'topics',\n        'blockHash',\n    ];\n    if (isNullish(value) || typeof value !== 'object')\n        return false;\n    if (!Object.keys(value).every(property => expectedFilterProperties.includes(property)))\n        return false;\n    if ((!isNullish(value.fromBlock) && !isBlockNumberOrTag(value.fromBlock)) ||\n        (!isNullish(value.toBlock) && !isBlockNumberOrTag(value.toBlock)))\n        return false;\n    if (!isNullish(value.address)) {\n        if (Array.isArray(value.address)) {\n            if (!value.address.every(address => isAddress(address)))\n                return false;\n        }\n        else if (!isAddress(value.address))\n            return false;\n    }\n    if (!isNullish(value.topics)) {\n        if (!value.topics.every(topic => {\n            if (isNullish(topic))\n                return true;\n            if (Array.isArray(topic)) {\n                return topic.every(nestedTopic => isTopic(nestedTopic));\n            }\n            if (isTopic(topic))\n                return true;\n            return false;\n        }))\n            return false;\n    }\n    return true;\n};\n//# sourceMappingURL=filter.js.map","import { isAddress } from './validation/address.js';\nimport { isBlockNumber, isBlockNumberOrTag, isBlockTag } from './validation/block.js';\nimport { isBloom } from './validation/bloom.js';\nimport { isBoolean } from './validation/boolean.js';\nimport { isBytes } from './validation/bytes.js';\nimport { isFilterObject } from './validation/filter.js';\nimport { isHexStrict, isString } from './validation/string.js';\nimport { isNumber, isInt, isUInt } from './validation/numbers.js';\nconst formats = {\n    address: (data) => isAddress(data),\n    bloom: (data) => isBloom(data),\n    blockNumber: (data) => isBlockNumber(data),\n    blockTag: (data) => isBlockTag(data),\n    blockNumberOrTag: (data) => isBlockNumberOrTag(data),\n    bool: (data) => isBoolean(data),\n    bytes: (data) => isBytes(data),\n    filter: (data) => isFilterObject(data),\n    hex: (data) => isHexStrict(data),\n    uint: (data) => isUInt(data),\n    int: (data) => isInt(data),\n    number: (data) => isNumber(data),\n    string: (data) => isString(data),\n};\n// generate formats for all numbers types\nfor (let bitSize = 8; bitSize <= 256; bitSize += 8) {\n    formats[`int${bitSize}`] = data => isInt(data, { bitSize });\n    formats[`uint${bitSize}`] = data => isUInt(data, { bitSize });\n}\n// generate bytes\nfor (let size = 1; size <= 32; size += 1) {\n    formats[`bytes${size}`] = data => isBytes(data, { size });\n}\nformats.bytes256 = formats.bytes;\nexport default formats;\n//# sourceMappingURL=formats.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { SchemaFormatError } from 'web3-errors';\nimport { z, ZodIssueCode } from 'zod';\nimport { Web3ValidatorError } from './errors.js';\nimport formats from './formats.js';\nconst convertToZod = (schema) => {\n    if ((!(schema === null || schema === void 0 ? void 0 : schema.type) || (schema === null || schema === void 0 ? void 0 : schema.type) === 'object') && (schema === null || schema === void 0 ? void 0 : schema.properties)) {\n        const obj = {};\n        for (const name of Object.keys(schema.properties)) {\n            const zItem = convertToZod(schema.properties[name]);\n            if (zItem) {\n                obj[name] = zItem;\n            }\n        }\n        if (Array.isArray(schema.required)) {\n            return z\n                .object(obj)\n                .partial()\n                .required(schema.required.reduce((acc, v) => (Object.assign(Object.assign({}, acc), { [v]: true })), {}));\n        }\n        return z.object(obj).partial();\n    }\n    if ((schema === null || schema === void 0 ? void 0 : schema.type) === 'array' && (schema === null || schema === void 0 ? void 0 : schema.items)) {\n        if (Array.isArray(schema.items) && schema.items.length > 1\n            && schema.maxItems !== undefined\n            && new Set(schema.items.map((item) => item.$id)).size === schema.items.length) {\n            const arr = [];\n            for (const item of schema.items) {\n                const zItem = convertToZod(item);\n                if (zItem) {\n                    arr.push(zItem);\n                }\n            }\n            return z.tuple(arr);\n        }\n        const nextSchema = Array.isArray(schema.items) ? schema.items[0] : schema.items;\n        let zodArraySchema = z.array(convertToZod(nextSchema));\n        zodArraySchema = schema.minItems !== undefined ? zodArraySchema.min(schema.minItems) : zodArraySchema;\n        zodArraySchema = schema.maxItems !== undefined ? zodArraySchema.max(schema.maxItems) : zodArraySchema;\n        return zodArraySchema;\n    }\n    if (schema.oneOf && Array.isArray(schema.oneOf)) {\n        return z.union(schema.oneOf.map(oneOfSchema => convertToZod(oneOfSchema)));\n    }\n    if (schema === null || schema === void 0 ? void 0 : schema.format) {\n        if (!formats[schema.format]) {\n            throw new SchemaFormatError(schema.format);\n        }\n        return z.any().refine(formats[schema.format], (value) => ({\n            params: { value, format: schema.format },\n        }));\n    }\n    if ((schema === null || schema === void 0 ? void 0 : schema.type) &&\n        (schema === null || schema === void 0 ? void 0 : schema.type) !== 'object' &&\n        typeof z[String(schema.type)] === 'function') {\n        return z[String(schema.type)]();\n    }\n    return z.object({ data: z.any() }).partial();\n};\nexport class Validator {\n    // eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n    static factory() {\n        if (!Validator.validatorInstance) {\n            Validator.validatorInstance = new Validator();\n        }\n        return Validator.validatorInstance;\n    }\n    validate(schema, data, options) {\n        var _a, _b;\n        const zod = convertToZod(schema);\n        const result = zod.safeParse(data);\n        if (!result.success) {\n            const errors = this.convertErrors((_b = (_a = result.error) === null || _a === void 0 ? void 0 : _a.issues) !== null && _b !== void 0 ? _b : []);\n            if (errors) {\n                if (options === null || options === void 0 ? void 0 : options.silent) {\n                    return errors;\n                }\n                throw new Web3ValidatorError(errors);\n            }\n        }\n        return undefined;\n    }\n    // eslint-disable-next-line class-methods-use-this\n    convertErrors(errors) {\n        if (errors && Array.isArray(errors) && errors.length > 0) {\n            return errors.map((error) => {\n                var _a;\n                let message;\n                let keyword;\n                let params;\n                let schemaPath;\n                schemaPath = error.path.join('/');\n                const field = String(error.path[error.path.length - 1]);\n                const instancePath = error.path.join('/');\n                if (error.code === ZodIssueCode.too_big) {\n                    keyword = 'maxItems';\n                    schemaPath = `${instancePath}/maxItems`;\n                    params = { limit: error.maximum };\n                    message = `must NOT have more than ${error.maximum} items`;\n                }\n                else if (error.code === ZodIssueCode.too_small) {\n                    keyword = 'minItems';\n                    schemaPath = `${instancePath}/minItems`;\n                    params = { limit: error.minimum };\n                    message = `must NOT have fewer than ${error.minimum} items`;\n                }\n                else if (error.code === ZodIssueCode.custom) {\n                    const { value, format } = ((_a = error.params) !== null && _a !== void 0 ? _a : {});\n                    if (typeof value === 'undefined') {\n                        message = `value at \"/${schemaPath}\" is required`;\n                    }\n                    else {\n                        message = `value \"${\n                        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                        typeof value === 'object' ? JSON.stringify(value) : value}\" at \"/${schemaPath}\" must pass \"${format}\" validation`;\n                    }\n                    params = { value };\n                }\n                return {\n                    keyword: keyword !== null && keyword !== void 0 ? keyword : field,\n                    instancePath: instancePath ? `/${instancePath}` : '',\n                    schemaPath: schemaPath ? `#${schemaPath}` : '#',\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    params: params !== null && params !== void 0 ? params : { value: error.message },\n                    message: message !== null && message !== void 0 ? message : error.message,\n                };\n            });\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=validator.js.map","import { Validator } from './validator.js';\nimport { ethAbiToJsonSchema } from './utils.js';\nimport { Web3ValidatorError } from './errors.js';\nexport class Web3Validator {\n    constructor() {\n        this._validator = Validator.factory();\n    }\n    validateJSONSchema(schema, data, options) {\n        return this._validator.validate(schema, data, options);\n    }\n    validate(schema, data, options = { silent: false }) {\n        var _a, _b;\n        const jsonSchema = ethAbiToJsonSchema(schema);\n        if (Array.isArray(jsonSchema.items) &&\n            ((_a = jsonSchema.items) === null || _a === void 0 ? void 0 : _a.length) === 0 &&\n            data.length === 0) {\n            return undefined;\n        }\n        if (Array.isArray(jsonSchema.items) &&\n            ((_b = jsonSchema.items) === null || _b === void 0 ? void 0 : _b.length) === 0 &&\n            data.length !== 0) {\n            throw new Web3ValidatorError([\n                {\n                    instancePath: '/0',\n                    schemaPath: '/',\n                    keyword: 'required',\n                    message: 'empty schema against data can not be validated',\n                    params: data,\n                },\n            ]);\n        }\n        return this._validator.validate(jsonSchema, data, options);\n    }\n}\n//# sourceMappingURL=web3_validator.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3Validator } from './web3_validator.js';\nexport const validator = new Web3Validator();\n//# sourceMappingURL=default_validator.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport function isUint8Array(data) {\n    var _a, _b;\n    return (data instanceof Uint8Array ||\n        ((_a = data === null || data === void 0 ? void 0 : data.constructor) === null || _a === void 0 ? void 0 : _a.name) === 'Uint8Array' ||\n        ((_b = data === null || data === void 0 ? void 0 : data.constructor) === null || _b === void 0 ? void 0 : _b.name) === 'Buffer');\n}\nexport function uint8ArrayConcat(...parts) {\n    const length = parts.reduce((prev, part) => {\n        const agg = prev + part.length;\n        return agg;\n    }, 0);\n    const result = new Uint8Array(length);\n    let offset = 0;\n    for (const part of parts) {\n        result.set(part, offset);\n        offset += part.length;\n    }\n    return result;\n}\n/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nexport function uint8ArrayEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for (let i = 0; i < a.byteLength; i += 1) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=uint8array.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @module Utils\n */\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { bytesToUtf8, utf8ToBytes as ecUtf8ToBytes } from 'ethereum-cryptography/utils.js';\nimport { isAddress, isHex, isHexStrict, isInt, isUInt, isNullish, utils, utils as validatorUtils, validator, bigintPower, } from 'web3-validator';\nimport { HexProcessingError, InvalidAddressError, InvalidBooleanError, InvalidBytesError, InvalidNumberError, InvalidUnitError, InvalidIntegerError, } from 'web3-errors';\nimport { isUint8Array } from './uint8array.js';\n// Ref: https://ethdocs.org/en/latest/ether.html\n// Note: this could be simplified using ** operator, but babel does not handle it well (https://github.com/babel/babel/issues/13109)\n/** @internal */\nexport const ethUnitMap = {\n    noether: BigInt(0),\n    wei: BigInt(1),\n    kwei: BigInt(1000),\n    Kwei: BigInt(1000),\n    babbage: BigInt(1000),\n    femtoether: BigInt(1000),\n    mwei: BigInt(1000000),\n    Mwei: BigInt(1000000),\n    lovelace: BigInt(1000000),\n    picoether: BigInt(1000000),\n    gwei: BigInt(1000000000),\n    Gwei: BigInt(1000000000),\n    shannon: BigInt(1000000000),\n    nanoether: BigInt(1000000000),\n    nano: BigInt(1000000000),\n    szabo: BigInt(1000000000000),\n    microether: BigInt(1000000000000),\n    micro: BigInt(1000000000000),\n    finney: BigInt(1000000000000000),\n    milliether: BigInt(1000000000000000),\n    milli: BigInt(1000000000000000),\n    ether: BigInt('1000000000000000000'),\n    kether: BigInt('1000000000000000000000'),\n    grand: BigInt('1000000000000000000000'),\n    mether: BigInt('1000000000000000000000000'),\n    gether: BigInt('1000000000000000000000000000'),\n    tether: BigInt('1000000000000000000000000000000'),\n};\nconst PrecisionLossWarning = 'Warning: Using type `number` with values that are large or contain many decimals may cause loss of precision, it is recommended to use type `string` or `BigInt` when using conversion methods';\n/**\n * Convert a value from bytes to Uint8Array\n * @param data - Data to be converted\n * @returns - The Uint8Array representation of the input data\n *\n * @example\n * ```ts\n * console.log(web3.utils.bytesToUint8Array(\"0xab\")));\n * > Uint8Array(1) [ 171 ]\n * ```\n */\nexport const bytesToUint8Array = (data) => {\n    validator.validate(['bytes'], [data]);\n    if (isUint8Array(data)) {\n        return data;\n    }\n    if (Array.isArray(data)) {\n        return new Uint8Array(data);\n    }\n    if (typeof data === 'string') {\n        return validatorUtils.hexToUint8Array(data);\n    }\n    throw new InvalidBytesError(data);\n};\n/**\n * @internal\n */\nconst { uint8ArrayToHexString } = validatorUtils;\n/**\n * Convert a byte array to a hex string\n * @param bytes - Byte array to be converted\n * @returns - The hex string representation of the input byte array\n *\n * @example\n * ```ts\n * console.log(web3.utils.bytesToHex(new Uint8Array([72, 12])));\n * > \"0x480c\"\n *\n */\nexport const bytesToHex = (bytes) => uint8ArrayToHexString(bytesToUint8Array(bytes));\n/**\n * Convert a hex string to a byte array\n * @param hex - Hex string to be converted\n * @returns - The byte array representation of the input hex string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToBytes('0x74657374'));\n * > Uint8Array(4) [ 116, 101, 115, 116 ]\n * ```\n */\nexport const hexToBytes = (bytes) => {\n    if (typeof bytes === 'string' && bytes.slice(0, 2).toLowerCase() !== '0x') {\n        return bytesToUint8Array(`0x${bytes}`);\n    }\n    return bytesToUint8Array(bytes);\n};\n/**\n * Converts value to it's number representation\n * @param value - Hex string to be converted\n * @returns - The number representation of the input value\n *\n * @example\n * ```ts\n * conoslle.log(web3.utils.hexToNumber('0xa'));\n * > 10\n * ```\n */\nexport const hexToNumber = (value) => {\n    validator.validate(['hex'], [value]);\n    // To avoid duplicate code and circular dependency we will\n    // use `hexToNumber` implementation from `web3-validator`\n    return validatorUtils.hexToNumber(value);\n};\n/**\n * Converts value to it's number representation @alias `hexToNumber`\n */\nexport const toDecimal = hexToNumber;\n/**\n * Converts value to it's hex representation\n * @param value - Value to be converted\n * @param hexstrict - Add padding to converted value if odd, to make it hexstrict\n * @returns - The hex representation of the input value\n *\n * @example\n * ```ts\n * console.log(web3.utils.numberToHex(10));\n * > \"0xa\"\n * ```\n */\nexport const numberToHex = (value, hexstrict) => {\n    if (typeof value !== 'bigint')\n        validator.validate(['int'], [value]);\n    // To avoid duplicate code and circular dependency we will\n    // use `numberToHex` implementation from `web3-validator`\n    let updatedValue = validatorUtils.numberToHex(value);\n    if (hexstrict) {\n        if (!updatedValue.startsWith('-') && updatedValue.length % 2 === 1) {\n            // To avoid duplicate a circular dependency we will not be using the padLeft method\n            updatedValue = '0x0'.concat(updatedValue.slice(2));\n        }\n        else if (updatedValue.length % 2 === 0 && updatedValue.startsWith('-'))\n            updatedValue = '-0x0'.concat(updatedValue.slice(3));\n    }\n    return updatedValue;\n};\n/**\n * Converts value to it's hex representation @alias `numberToHex`\n *\n */\nexport const fromDecimal = numberToHex;\n/**\n * Converts value to it's decimal representation in string\n * @param value - Hex string to be converted\n * @returns - The decimal representation of the input value\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToNumberString('0xa'));\n * > \"10\"\n * ```\n */\nexport const hexToNumberString = (data) => hexToNumber(data).toString();\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n * @param str - Utf8 string to be converted\n * @returns - The hex representation of the input string\n *\n * @example\n * ```ts\n * console.log(utf8ToHex('web3.js'));\n * > \"0x776562332e6a73\"\n * ```\n *\n */\nexport const utf8ToHex = (str) => {\n    validator.validate(['string'], [str]);\n    // To be compatible with 1.x trim null character\n    // eslint-disable-next-line no-control-regex\n    let strWithoutNullCharacter = str.replace(/^(?:\\u0000)/, '');\n    // eslint-disable-next-line no-control-regex\n    strWithoutNullCharacter = strWithoutNullCharacter.replace(/(?:\\u0000)$/, '');\n    return bytesToHex(new TextEncoder().encode(strWithoutNullCharacter));\n};\n/**\n * @alias utf8ToHex\n */\nexport const fromUtf8 = utf8ToHex;\n/**\n * @alias utf8ToHex\n */\nexport const stringToHex = utf8ToHex;\n/**\n * Should be called to get utf8 from it's hex representation\n * @param str - Hex string to be converted\n * @returns - Utf8 string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToUtf8('0x48656c6c6f20576f726c64'));\n * > Hello World\n * ```\n */\nexport const hexToUtf8 = (str) => bytesToUtf8(hexToBytes(str));\n/**\n * @alias hexToUtf8\n */\nexport const toUtf8 = (input) => {\n    if (typeof input === 'string') {\n        return hexToUtf8(input);\n    }\n    validator.validate(['bytes'], [input]);\n    return bytesToUtf8(input);\n};\nexport const utf8ToBytes = ecUtf8ToBytes;\n/**\n * @alias hexToUtf8\n */\nexport const hexToString = hexToUtf8;\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n * @param str - String to be converted to hex\n * @returns - Hex string\n *\n * @example\n * ```ts\n * console.log(web3.utils.asciiToHex('Hello World'));\n * > 0x48656c6c6f20576f726c64\n * ```\n */\nexport const asciiToHex = (str) => {\n    validator.validate(['string'], [str]);\n    let hexString = '';\n    for (let i = 0; i < str.length; i += 1) {\n        const hexCharCode = str.charCodeAt(i).toString(16);\n        // might need a leading 0\n        hexString += hexCharCode.length % 2 !== 0 ? `0${hexCharCode}` : hexCharCode;\n    }\n    return `0x${hexString}`;\n};\n/**\n * @alias asciiToHex\n */\nexport const fromAscii = asciiToHex;\n/**\n * Should be called to get ascii from it's hex representation\n * @param str - Hex string to be converted to ascii\n * @returns - Ascii string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToAscii('0x48656c6c6f20576f726c64'));\n * > Hello World\n * ```\n */\nexport const hexToAscii = (str) => {\n    const decoder = new TextDecoder('ascii');\n    return decoder.decode(hexToBytes(str));\n};\n/**\n * @alias hexToAscii\n */\nexport const toAscii = hexToAscii;\n/**\n * Auto converts any given value into it's hex representation.\n * @param value - Value to be converted to hex\n * @param returnType - If true, it will return the type of the value\n *\n * @example\n * ```ts\n * console.log(web3.utils.toHex(10));\n * > 0xa\n *\n * console.log(web3.utils.toHex('0x123', true));\n * > bytes\n *```\n */\nexport const toHex = (value, returnType) => {\n    if (typeof value === 'string' && isAddress(value)) {\n        return returnType ? 'address' : `0x${value.toLowerCase().replace(/^0x/i, '')}`;\n    }\n    if (typeof value === 'boolean') {\n        // eslint-disable-next-line no-nested-ternary\n        return returnType ? 'bool' : value ? '0x01' : '0x00';\n    }\n    if (typeof value === 'number') {\n        // eslint-disable-next-line no-nested-ternary\n        return returnType ? (value < 0 ? 'int256' : 'uint256') : numberToHex(value);\n    }\n    if (typeof value === 'bigint') {\n        return returnType ? 'bigint' : numberToHex(value);\n    }\n    if (isUint8Array(value)) {\n        return returnType ? 'bytes' : bytesToHex(value);\n    }\n    if (typeof value === 'object' && !!value) {\n        return returnType ? 'string' : utf8ToHex(JSON.stringify(value));\n    }\n    if (typeof value === 'string') {\n        if (value.startsWith('-0x') || value.startsWith('-0X')) {\n            return returnType ? 'int256' : numberToHex(value);\n        }\n        if (isHexStrict(value)) {\n            return returnType ? 'bytes' : value;\n        }\n        if (isHex(value) && !isInt(value) && !isUInt(value)) {\n            return returnType ? 'bytes' : `0x${value}`;\n        }\n        if (isHex(value) && !isInt(value) && isUInt(value)) {\n            // This condition seems problematic because meeting\n            // both conditions `!isInt(value) && isUInt(value)` should be impossible.\n            // But a value pass for those conditions: \"101611154195520776335741463917853444671577865378275924493376429267637792638729\"\n            // Note that according to the docs: it is supposed to be treated as a string (https://docs.web3js.org/guides/web3_upgrade_guide/x/web3_utils_migration_guide#conversion-to-hex)\n            // In short, the strange is that isInt(value) is false but isUInt(value) is true for the value above.\n            // TODO: isUInt(value) should be investigated.\n            // However, if `toHex('101611154195520776335741463917853444671577865378275924493376429267637792638729', true)` is called, it will return `true`.\n            // But, if `toHex('101611154195520776335741463917853444671577865378275924493376429267637792638729')` is called, it will throw inside `numberToHex`.\n            return returnType ? 'uint' : numberToHex(value);\n        }\n        if (!Number.isFinite(value)) {\n            return returnType ? 'string' : utf8ToHex(value);\n        }\n    }\n    throw new HexProcessingError(value);\n};\n/**\n * Converts any given value into it's number representation, if possible, else into it's bigint representation.\n * @param value - The value to convert\n * @returns - Returns the value in number or bigint representation\n *\n * @example\n * ```ts\n * console.log(web3.utils.toNumber(1));\n * > 1\n * console.log(web3.utils.toNumber(Number.MAX_SAFE_INTEGER));\n * > 9007199254740991\n *\n * console.log(web3.utils.toNumber(BigInt(Number.MAX_SAFE_INTEGER)));\n * > 9007199254740991\n *\n * console.log(web3.utils.toNumber(BigInt(Number.MAX_SAFE_INTEGER) + BigInt(1)));\n * > 9007199254740992n\n *\n * ```\n */\nexport const toNumber = (value) => {\n    if (typeof value === 'number') {\n        if (value > 1e20) {\n            console.warn(PrecisionLossWarning);\n            // JavaScript converts numbers >= 10^21 to scientific notation when coerced to strings,\n            // leading to potential parsing errors and incorrect representations.\n            // For instance, String(10000000000000000000000) yields '1e+22'.\n            // Using BigInt prevents this\n            return BigInt(value);\n        }\n        return value;\n    }\n    if (typeof value === 'bigint') {\n        return value >= Number.MIN_SAFE_INTEGER && value <= Number.MAX_SAFE_INTEGER\n            ? Number(value)\n            : value;\n    }\n    if (typeof value === 'string' && isHexStrict(value)) {\n        return hexToNumber(value);\n    }\n    try {\n        return toNumber(BigInt(value));\n    }\n    catch (_a) {\n        throw new InvalidNumberError(value);\n    }\n};\n/**\n * Auto converts any given value into it's bigint representation\n *\n * @param value - The value to convert\n * @returns - Returns the value in bigint representation\n\n * @example\n * ```ts\n * console.log(web3.utils.toBigInt(1));\n * > 1n\n * ```\n */\nexport const toBigInt = (value) => {\n    if (typeof value === 'number') {\n        return BigInt(value);\n    }\n    if (typeof value === 'bigint') {\n        return value;\n    }\n    // isHex passes for dec, too\n    if (typeof value === 'string' && isHex(value)) {\n        if (value.startsWith('-')) {\n            return -BigInt(value.substring(1));\n        }\n        return BigInt(value);\n    }\n    throw new InvalidNumberError(value);\n};\n/**\n * Takes a number of wei and converts it to any other ether unit.\n * @param number - The value in wei\n * @param unit - The unit to convert to\n * @returns - Returns the converted value in the given unit\n *\n * @example\n * ```ts\n * console.log(web3.utils.fromWei(\"1\", \"ether\"));\n * > 0.000000000000000001\n *\n * console.log(web3.utils.fromWei(\"1\", \"shannon\"));\n * > 0.000000001\n * ```\n */\nexport const fromWei = (number, unit) => {\n    let denomination;\n    if (typeof unit === 'string') {\n        denomination = ethUnitMap[unit];\n        if (!denomination) {\n            throw new InvalidUnitError(unit);\n        }\n    }\n    else {\n        if (unit < 0 || !Number.isInteger(unit)) {\n            throw new InvalidIntegerError(unit);\n        }\n        denomination = bigintPower(BigInt(10), BigInt(unit));\n    }\n    // value in wei would always be integer\n    // 13456789, 1234\n    const value = String(toNumber(number));\n    // count number of zeros in denomination\n    // 1000000 -> 6\n    const numberOfZerosInDenomination = denomination.toString().length - 1;\n    if (numberOfZerosInDenomination <= 0) {\n        return value.toString();\n    }\n    // pad the value with required zeros\n    // 13456789 -> 13456789, 1234 -> 001234\n    const zeroPaddedValue = value.padStart(numberOfZerosInDenomination, '0');\n    // get the integer part of value by counting number of zeros from start\n    // 13456789 -> '13'\n    // 001234 -> ''\n    const integer = zeroPaddedValue.slice(0, -numberOfZerosInDenomination);\n    // get the fraction part of value by counting number of zeros backward\n    // 13456789 -> '456789'\n    // 001234 -> '001234'\n    const fraction = zeroPaddedValue.slice(-numberOfZerosInDenomination).replace(/\\.?0+$/, '');\n    if (integer === '') {\n        return fraction ? `0.${fraction}` : '0';\n    }\n    if (fraction === '') {\n        return integer;\n    }\n    const updatedValue = `${integer}.${fraction}`;\n    return updatedValue.slice(0, integer.length + numberOfZerosInDenomination + 1);\n};\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * @param number - The number to convert.\n * @param unit - {@link EtherUnits} The unit of the number passed.\n * @returns The number converted to wei.\n *\n * @example\n * ```ts\n * console.log(web3.utils.toWei(\"0.001\", \"ether\"));\n * > 1000000000000000 //(wei)\n * ```\n */\n// todo in 1.x unit defaults to 'ether'\nexport const toWei = (number, unit) => {\n    validator.validate(['number'], [number]);\n    let denomination;\n    if (typeof unit === 'string') {\n        denomination = ethUnitMap[unit];\n        if (!denomination) {\n            throw new InvalidUnitError(unit);\n        }\n    }\n    else {\n        if (unit < 0 || !Number.isInteger(unit)) {\n            throw new InvalidIntegerError(unit);\n        }\n        denomination = bigintPower(BigInt(10), BigInt(unit));\n    }\n    let parsedNumber = number;\n    if (typeof parsedNumber === 'number') {\n        if (parsedNumber < 1e-15) {\n            console.warn(PrecisionLossWarning);\n        }\n        if (parsedNumber > 1e20) {\n            console.warn(PrecisionLossWarning);\n            parsedNumber = BigInt(parsedNumber);\n        }\n        else {\n            // in case there is a decimal point, we need to convert it to string\n            parsedNumber = parsedNumber.toLocaleString('fullwide', {\n                useGrouping: false,\n                maximumFractionDigits: 20,\n            });\n        }\n    }\n    // if value is decimal e.g. 24.56 extract `integer` and `fraction` part\n    // to avoid `fraction` to be null use `concat` with empty string\n    const [integer, fraction] = String(typeof parsedNumber === 'string' && !isHexStrict(parsedNumber)\n        ? parsedNumber\n        : toNumber(parsedNumber))\n        .split('.')\n        .concat('');\n    // join the value removing `.` from\n    // 24.56 -> 2456\n    const value = BigInt(`${integer}${fraction}`);\n    // multiply value with denomination\n    // 2456 * 1000000 -> 2456000000\n    const updatedValue = value * denomination;\n    // check if whole number was passed in\n    const decimals = fraction.length;\n    if (decimals === 0) {\n        return updatedValue.toString();\n    }\n    // trim the value to remove extra zeros\n    return updatedValue.toString().slice(0, -decimals);\n};\n/**\n * Will convert an upper or lowercase Ethereum address to a checksum address.\n * @param address - An address string\n * @returns\tThe checksum address\n * @example\n * ```ts\n * web3.utils.toChecksumAddress('0xc1912fee45d61c87cc5ea59dae31190fffff232d');\n * > \"0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d\"\n * ```\n */\nexport const toChecksumAddress = (address) => {\n    if (!isAddress(address, false)) {\n        throw new InvalidAddressError(address);\n    }\n    const lowerCaseAddress = address.toLowerCase().replace(/^0x/i, '');\n    // calling `Uint8Array.from` because `noble-hashes` checks with `instanceof Uint8Array` that fails in some edge cases:\n    // \thttps://github.com/paulmillr/noble-hashes/issues/25#issuecomment-1750106284\n    const hash = utils.uint8ArrayToHexString(keccak256(validatorUtils.ensureIfUint8Array(utf8ToBytes(lowerCaseAddress))));\n    if (isNullish(hash) ||\n        hash === '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470')\n        return ''; // // EIP-1052 if hash is equal to c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470, keccak was given empty data\n    let checksumAddress = '0x';\n    const addressHash = hash.replace(/^0x/i, '');\n    for (let i = 0; i < lowerCaseAddress.length; i += 1) {\n        // If ith character is 8 to f then make it uppercase\n        if (parseInt(addressHash[i], 16) > 7) {\n            checksumAddress += lowerCaseAddress[i].toUpperCase();\n        }\n        else {\n            checksumAddress += lowerCaseAddress[i];\n        }\n    }\n    return checksumAddress;\n};\nexport const toBool = (value) => {\n    if (typeof value === 'boolean') {\n        return value;\n    }\n    if (typeof value === 'number' && (value === 0 || value === 1)) {\n        return Boolean(value);\n    }\n    if (typeof value === 'bigint' && (value === BigInt(0) || value === BigInt(1))) {\n        return Boolean(value);\n    }\n    if (typeof value === 'string' &&\n        !isHexStrict(value) &&\n        (value === '1' || value === '0' || value === 'false' || value === 'true')) {\n        if (value === 'true') {\n            return true;\n        }\n        if (value === 'false') {\n            return false;\n        }\n        return Boolean(Number(value));\n    }\n    if (typeof value === 'string' && isHexStrict(value) && (value === '0x1' || value === '0x0')) {\n        return Boolean(toNumber(value));\n    }\n    throw new InvalidBooleanError(value);\n};\n//# sourceMappingURL=converters.js.map","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import EventEmitter from './index.js'\n\nexport { EventEmitter }\nexport default EventEmitter\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/* eslint-disable max-classes-per-file */\nimport EventEmitter3 from 'eventemitter3';\n/**\n * This class copy the behavior of Node.js EventEmitter class.\n * It is used to provide the same interface for the browser environment.\n */\nexport class EventEmitter extends EventEmitter3 {\n    constructor() {\n        super(...arguments);\n        // must be defined for backwards compatibility\n        this.maxListeners = Number.MAX_SAFE_INTEGER;\n    }\n    setMaxListeners(maxListeners) {\n        this.maxListeners = maxListeners;\n        return this;\n    }\n    getMaxListeners() {\n        return this.maxListeners;\n    }\n}\n//# sourceMappingURL=event_emitter.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @module Utils\n */\nimport { InvalidBlockError } from 'web3-errors';\nimport { checkAddressCheckSum as checkAddressCheckSumValidator, isAddress as isAddressValidator, isBlockTag, isBloom as isBloomValidator, isContractAddressInBloom as isContractAddressInBloomValidator, isHex as isHexValidator, isHexStrict as isHexStrictValidator, isInBloom as isInBloomValidator, isNullish as isNullishValidator, isTopic as isTopicValidator, isTopicInBloom as isTopicInBloomValidator, isUserEthereumAddressInBloom as isUserEthereumAddressInBloomValidator, } from 'web3-validator';\nimport { BlockTags } from 'web3-types';\n/**\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isHexStrict = isHexStrictValidator;\n/**\n * returns true if input is a hexstring, number or bigint\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isHex = isHexValidator;\n/**\n * Checks the checksum of a given address. Will also return false on non-checksum addresses.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const checkAddressCheckSum = checkAddressCheckSumValidator;\n/**\n * Checks if a given string is a valid Ethereum address. It will also check the checksum, if the address has upper and lowercase letters.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isAddress = isAddressValidator;\n/**\n * Returns true if the bloom is a valid bloom\n * https://github.com/joshstevens19/ethereum-bloom-filters/blob/fbeb47b70b46243c3963fe1c2988d7461ef17236/src/index.ts#L7\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isBloom = isBloomValidator;\n/**\n * Returns true if the value is part of the given bloom\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isInBloom = isInBloomValidator;\n/**\n * Returns true if the ethereum users address is part of the given bloom note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isUserEthereumAddressInBloom = isUserEthereumAddressInBloomValidator;\n/**\n * Returns true if the contract address is part of the given bloom.\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isContractAddressInBloom = isContractAddressInBloomValidator;\n/**\n * Checks if its a valid topic\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isTopic = isTopicValidator;\n/**\n * Returns true if the topic is part of the given bloom.\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isTopicInBloom = isTopicInBloomValidator;\n/**\n * Compares between block A and block B\n * @param blockA - Block number or string\n * @param blockB - Block number or string\n *\n * @returns - Returns -1 if a \\< b, returns 1 if a \\> b and returns 0 if a == b\n *\n * @example\n * ```ts\n * console.log(web3.utils.compareBlockNumbers('latest', 'pending'));\n * > -1\n *\n * console.log(web3.utils.compareBlockNumbers(12, 11));\n * > 1\n * ```\n */\nexport const compareBlockNumbers = (blockA, blockB) => {\n    const isABlockTag = typeof blockA === 'string' && isBlockTag(blockA);\n    const isBBlockTag = typeof blockB === 'string' && isBlockTag(blockB);\n    if (blockA === blockB ||\n        ((blockA === 'earliest' || blockA === 0) && (blockB === 'earliest' || blockB === 0)) // only exception compare blocktag with number\n    ) {\n        return 0;\n    }\n    if (blockA === 'earliest') {\n        return -1;\n    }\n    if (blockB === 'earliest') {\n        return 1;\n    }\n    if (isABlockTag && isBBlockTag) {\n        // Increasing order:  earliest, finalized , safe, latest, pending\n        const tagsOrder = {\n            [BlockTags.EARLIEST]: 1,\n            [BlockTags.FINALIZED]: 2,\n            [BlockTags.SAFE]: 3,\n            [BlockTags.LATEST]: 4,\n            [BlockTags.PENDING]: 5,\n        };\n        if (tagsOrder[blockA] < tagsOrder[blockB]) {\n            return -1;\n        }\n        return 1;\n    }\n    if ((isABlockTag && !isBBlockTag) || (!isABlockTag && isBBlockTag)) {\n        throw new InvalidBlockError('Cannot compare blocktag with provided non-blocktag input.');\n    }\n    const bigIntA = BigInt(blockA);\n    const bigIntB = BigInt(blockB);\n    if (bigIntA < bigIntB) {\n        return -1;\n    }\n    if (bigIntA === bigIntB) {\n        return 0;\n    }\n    return 1;\n};\nexport const isContractInitOptions = (options) => typeof options === 'object' &&\n    !isNullishValidator(options) &&\n    Object.keys(options).length !== 0 &&\n    [\n        'input',\n        'data',\n        'from',\n        'gas',\n        'gasPrice',\n        'gasLimit',\n        'address',\n        'jsonInterface',\n        'syncWithContext',\n        'dataInputFill',\n    ].some(key => key in options);\nexport const isNullish = isNullishValidator;\n//# sourceMappingURL=validation.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { TypedArray } from 'web3-types';\nimport { isNullish } from 'web3-validator';\nconst isIterable = (item) => typeof item === 'object' &&\n    !isNullish(item) &&\n    !Array.isArray(item) &&\n    !(item instanceof TypedArray);\n// The following code is a derivative work of the code from the \"LiskHQ/lisk-sdk\" project,\n// which is licensed under Apache version 2.\n/**\n * Deep merge two objects.\n * @param destination - The destination object.\n * @param sources - An array of source objects.\n * @returns - The merged object.\n */\nexport const mergeDeep = (destination, ...sources) => {\n    if (!isIterable(destination)) {\n        return destination;\n    }\n    const result = Object.assign({}, destination); // clone deep here\n    for (const src of sources) {\n        // const src = { ..._src };\n        // eslint-disable-next-line no-restricted-syntax\n        for (const key in src) {\n            if (isIterable(src[key])) {\n                if (!result[key]) {\n                    result[key] = {};\n                }\n                result[key] = mergeDeep(result[key], src[key]);\n            }\n            else if (!isNullish(src[key]) && Object.hasOwnProperty.call(src, key)) {\n                if (Array.isArray(src[key]) || src[key] instanceof TypedArray) {\n                    result[key] = src[key].slice(0);\n                }\n                else {\n                    result[key] = src[key];\n                }\n            }\n        }\n    }\n    return result;\n};\n//# sourceMappingURL=objects.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { NibbleWidthError } from 'web3-errors';\nimport { isHexStrict, validator, utils as validatorUtils, bigintPower } from 'web3-validator';\nimport { numberToHex, toHex, toNumber } from './converters.js';\n/**\n * Adds a padding on the left of a string, if value is a integer or bigInt will be converted to a hex string.\n * @param value - The value to be padded.\n * @param characterAmount - The amount of characters the string should have.\n * @param sign - The sign to be added (default is 0).\n * @returns The padded string.\n *\n * @example\n * ```ts\n *\n * console.log(web3.utils.padLeft('0x123', 10));\n * >0x0000000123\n * ```\n */\nexport const padLeft = (value, characterAmount, sign = '0') => {\n    // To avoid duplicate code and circular dependency we will\n    // use `padLeft` implementation from `web3-validator`\n    if (typeof value === 'string') {\n        if (!isHexStrict(value)) {\n            return value.padStart(characterAmount, sign);\n        }\n        return validatorUtils.padLeft(value, characterAmount, sign);\n    }\n    validator.validate(['int'], [value]);\n    return validatorUtils.padLeft(value, characterAmount, sign);\n};\n/**\n * Adds a padding on the right of a string, if value is a integer or bigInt will be converted to a hex string.\n * @param value - The value to be padded.\n * @param characterAmount - The amount of characters the string should have.\n * @param sign - The sign to be added (default is 0).\n * @returns The padded string.\n *\n * @example\n * ```ts\n * console.log(web3.utils.padRight('0x123', 10));\n * > 0x1230000000\n *\n * console.log(web3.utils.padRight('0x123', 10, '1'));\n * > 0x1231111111\n * ```\n */\nexport const padRight = (value, characterAmount, sign = '0') => {\n    if (typeof value === 'string' && !isHexStrict(value)) {\n        return value.padEnd(characterAmount, sign);\n    }\n    const hexString = typeof value === 'string' && isHexStrict(value) ? value : numberToHex(value);\n    const prefixLength = hexString.startsWith('-') ? 3 : 2;\n    validator.validate([hexString.startsWith('-') ? 'int' : 'uint'], [value]);\n    return hexString.padEnd(characterAmount + prefixLength, sign);\n};\n/**\n * Adds a padding on the right of a string, if value is a integer or bigInt will be converted to a hex string. @alias `padRight`\n */\nexport const rightPad = padRight;\n/**\n * Adds a padding on the left of a string, if value is a integer or bigInt will be converted to a hex string. @alias `padLeft`\n */\nexport const leftPad = padLeft;\n/**\n * Converts a negative number into the two’s complement and return a hexstring of 64 nibbles.\n * @param value - The value to be converted.\n * @param nibbleWidth - The nibble width of the hex string (default is 64).\n *\n * @returns The hex string of the two’s complement.\n *\n * @example\n * ```ts\n * console.log(web3.utils.toTwosComplement(13, 32));\n * > 0x0000000000000000000000000000000d\n *\n * console.log(web3.utils.toTwosComplement('-0x1', 32));\n * > 0xffffffffffffffffffffffffffffffff\n *\n * console.log(web3.utils.toTwosComplement(BigInt('9007199254740992'), 32));\n * > 0x00000000000000000020000000000000\n * ```\n */\nexport const toTwosComplement = (value, nibbleWidth = 64) => {\n    validator.validate(['int'], [value]);\n    const val = toNumber(value);\n    if (val >= 0)\n        return padLeft(toHex(val), nibbleWidth);\n    const largestBit = bigintPower(BigInt(2), BigInt(nibbleWidth * 4));\n    if (-val >= largestBit) {\n        throw new NibbleWidthError(`value: ${value}, nibbleWidth: ${nibbleWidth}`);\n    }\n    const updatedVal = BigInt(val);\n    const complement = updatedVal + largestBit;\n    return padLeft(numberToHex(complement), nibbleWidth);\n};\n/**\n * Converts the twos complement into a decimal number or big int.\n * @param value - The value to be converted.\n * @param nibbleWidth - The nibble width of the hex string (default is 64).\n * @returns The decimal number or big int.\n *\n * @example\n * ```ts\n * console.log(web3.utils.fromTwosComplement('0x0000000000000000000000000000000d', 32'));\n * > 13\n *\n * console.log(web3.utils.fromTwosComplement('0x00000000000000000020000000000000', 32));\n * > 9007199254740992n\n * ```\n */\nexport const fromTwosComplement = (value, nibbleWidth = 64) => {\n    validator.validate(['int'], [value]);\n    const val = toNumber(value);\n    if (val < 0)\n        return val;\n    const largestBit = Math.ceil(Math.log(Number(val)) / Math.log(2));\n    if (largestBit > nibbleWidth * 4)\n        throw new NibbleWidthError(`value: \"${value}\", nibbleWidth: \"${nibbleWidth}\"`);\n    // check the largest bit to see if negative\n    if (nibbleWidth * 4 !== largestBit)\n        return val;\n    const complement = bigintPower(BigInt(2), BigInt(nibbleWidth) * BigInt(4));\n    return toNumber(BigInt(val) - complement);\n};\n//# sourceMappingURL=string_manipulation.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { FormatterError } from 'web3-errors';\nimport { FMT_BYTES, FMT_NUMBER, DEFAULT_RETURN_FORMAT, } from 'web3-types';\nimport { isNullish, isObject, utils } from 'web3-validator';\nimport { bytesToUint8Array, bytesToHex, numberToHex, toBigInt } from './converters.js';\nimport { mergeDeep } from './objects.js';\nimport { padLeft } from './string_manipulation.js';\nimport { isUint8Array, uint8ArrayConcat } from './uint8array.js';\nconst { parseBaseType } = utils;\nexport const isDataFormat = (dataFormat) => typeof dataFormat === 'object' &&\n    !isNullish(dataFormat) &&\n    'number' in dataFormat &&\n    'bytes' in dataFormat;\n/**\n * Finds the schema that corresponds to a specific data path within a larger JSON schema.\n * It works by iterating over the dataPath array and traversing the JSON schema one step at a time until it reaches the end of the path.\n *\n * @param schema - represents a JSON schema, which is an object that describes the structure of JSON data\n * @param dataPath - represents an array of strings that specifies the path to the data within the JSON schema\n * @param oneOfPath - represents an optional array of two-element tuples that specifies the \"oneOf\" option to choose, if the schema has oneOf and the data path can match multiple subschemas\n * @returns the JSON schema that matches the data path\n *\n */\nconst findSchemaByDataPath = (schema, dataPath, oneOfPath = []) => {\n    let result = Object.assign({}, schema);\n    let previousDataPath;\n    for (const dataPart of dataPath) {\n        if (result.oneOf && previousDataPath) {\n            const currentDataPath = previousDataPath;\n            const path = oneOfPath.find(([key]) => key === currentDataPath);\n            if (path && path[0] === previousDataPath) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                result = result.oneOf[path[1]];\n            }\n        }\n        if (!result.properties && !result.items) {\n            return undefined;\n        }\n        if (result.properties) {\n            result = result.properties[dataPart];\n        }\n        else if (result.items && result.items.properties) {\n            const node = result.items.properties;\n            result = node[dataPart];\n        }\n        else if (result.items && isObject(result.items)) {\n            result = result.items;\n        }\n        else if (result.items && Array.isArray(result.items)) {\n            result = result.items[parseInt(dataPart, 10)];\n        }\n        if (result && dataPart)\n            previousDataPath = dataPart;\n    }\n    return result;\n};\n/**\n * Converts a value depending on the format\n * @param value - value to convert\n * @param ethType - The type of the value to be parsed\n * @param format - The format to be converted to\n * @returns - The value converted to the specified format\n */\nexport const convertScalarValue = (value, ethType, format) => {\n    try {\n        const { baseType, baseTypeSize } = parseBaseType(ethType);\n        if (baseType === 'int' || baseType === 'uint') {\n            switch (format.number) {\n                case FMT_NUMBER.NUMBER:\n                    return Number(toBigInt(value));\n                case FMT_NUMBER.HEX:\n                    return numberToHex(toBigInt(value));\n                case FMT_NUMBER.STR:\n                    return toBigInt(value).toString();\n                case FMT_NUMBER.BIGINT:\n                    return toBigInt(value);\n                default:\n                    throw new FormatterError(`Invalid format: ${String(format.number)}`);\n            }\n        }\n        if (baseType === 'bytes') {\n            let paddedValue;\n            if (baseTypeSize) {\n                if (typeof value === 'string')\n                    paddedValue = padLeft(value, baseTypeSize * 2);\n                else if (isUint8Array(value)) {\n                    paddedValue = uint8ArrayConcat(new Uint8Array(baseTypeSize - value.length), value);\n                }\n            }\n            else {\n                paddedValue = value;\n            }\n            switch (format.bytes) {\n                case FMT_BYTES.HEX:\n                    return bytesToHex(bytesToUint8Array(paddedValue));\n                case FMT_BYTES.UINT8ARRAY:\n                    return bytesToUint8Array(paddedValue);\n                default:\n                    throw new FormatterError(`Invalid format: ${String(format.bytes)}`);\n            }\n        }\n        if (baseType === 'string') {\n            return String(value);\n        }\n    }\n    catch (error) {\n        // If someone didn't use `eth` keyword we can return original value\n        // as the scope of this code is formatting not validation\n        return value;\n    }\n    return value;\n};\nconst convertArray = ({ value, schemaProp, schema, object, key, dataPath, format, oneOfPath = [], }) => {\n    var _a, _b;\n    // If value is an array\n    if (Array.isArray(value)) {\n        let _schemaProp = schemaProp;\n        // TODO This is a naive approach to solving the issue of\n        // a schema using oneOf. This chunk of code was intended to handle\n        // BlockSchema.transactions\n        // TODO BlockSchema.transactions are not being formatted\n        if ((schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.oneOf) !== undefined) {\n            // The following code is basically saying:\n            // if the schema specifies oneOf, then we are to loop\n            // over each possible schema and check if they type of the schema\n            // matches the type of value[0], and if so we use the oneOfSchemaProp\n            // as the schema for formatting\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n            schemaProp.oneOf.forEach((oneOfSchemaProp, index) => {\n                var _a, _b;\n                if (!Array.isArray(schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.items) &&\n                    ((typeof value[0] === 'object' &&\n                        ((_a = oneOfSchemaProp === null || oneOfSchemaProp === void 0 ? void 0 : oneOfSchemaProp.items) === null || _a === void 0 ? void 0 : _a.type) === 'object') ||\n                        (typeof value[0] === 'string' &&\n                            ((_b = oneOfSchemaProp === null || oneOfSchemaProp === void 0 ? void 0 : oneOfSchemaProp.items) === null || _b === void 0 ? void 0 : _b.type) !== 'object'))) {\n                    _schemaProp = oneOfSchemaProp;\n                    oneOfPath.push([key, index]);\n                }\n            });\n        }\n        if (isNullish(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items)) {\n            // Can not find schema for array item, delete that item\n            // eslint-disable-next-line no-param-reassign\n            delete object[key];\n            dataPath.pop();\n            return true;\n        }\n        // If schema for array items is a single type\n        if (isObject(_schemaProp.items) && !isNullish(_schemaProp.items.format)) {\n            for (let i = 0; i < value.length; i += 1) {\n                // eslint-disable-next-line no-param-reassign\n                object[key][i] = convertScalarValue(value[i], \n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                (_a = _schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) === null || _a === void 0 ? void 0 : _a.format, format);\n            }\n            dataPath.pop();\n            return true;\n        }\n        // If schema for array items is an object\n        if (!Array.isArray(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) && ((_b = _schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) === null || _b === void 0 ? void 0 : _b.type) === 'object') {\n            for (const arrObject of value) {\n                // eslint-disable-next-line no-use-before-define\n                convert(arrObject, schema, dataPath, format, oneOfPath);\n            }\n            dataPath.pop();\n            return true;\n        }\n        // If schema for array is a tuple\n        if (Array.isArray(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items)) {\n            for (let i = 0; i < value.length; i += 1) {\n                // eslint-disable-next-line no-param-reassign\n                object[key][i] = convertScalarValue(value[i], _schemaProp.items[i].format, format);\n            }\n            dataPath.pop();\n            return true;\n        }\n    }\n    return false;\n};\n/**\n * Converts the data to the specified format\n * @param data - data to convert\n * @param schema - The JSON schema that describes the structure of the data\n * @param dataPath - A string array that specifies the path to the data within the JSON schema\n * @param format  - The format to be converted to\n * @param oneOfPath - An optional array of two-element tuples that specifies the \"oneOf\" option to choose, if the schema has oneOf and the data path can match multiple subschemas\n * @returns - The data converted to the specified format\n */\nexport const convert = (data, schema, dataPath, format, oneOfPath = []) => {\n    var _a;\n    // If it's a scalar value\n    if (!isObject(data) && !Array.isArray(data)) {\n        return convertScalarValue(data, schema === null || schema === void 0 ? void 0 : schema.format, format);\n    }\n    const object = data;\n    // case when schema is array and `items` is object\n    if (Array.isArray(object) &&\n        (schema === null || schema === void 0 ? void 0 : schema.type) === 'array' &&\n        ((_a = schema === null || schema === void 0 ? void 0 : schema.items) === null || _a === void 0 ? void 0 : _a.type) === 'object') {\n        convertArray({\n            value: object,\n            schemaProp: schema,\n            schema,\n            object,\n            key: '',\n            dataPath,\n            format,\n            oneOfPath,\n        });\n    }\n    else {\n        for (const [key, value] of Object.entries(object)) {\n            dataPath.push(key);\n            let schemaProp = findSchemaByDataPath(schema, dataPath, oneOfPath);\n            // If value is a scaler value\n            if (isNullish(schemaProp)) {\n                delete object[key];\n                dataPath.pop();\n                continue;\n            }\n            // If value is an object, recurse into it\n            if (isObject(value)) {\n                convert(value, schema, dataPath, format, oneOfPath);\n                dataPath.pop();\n                continue;\n            }\n            // If value is an array\n            if (convertArray({\n                value,\n                schemaProp,\n                schema,\n                object,\n                key,\n                dataPath,\n                format,\n                oneOfPath,\n            })) {\n                continue;\n            }\n            // The following code is basically saying:\n            // if the schema specifies oneOf, then we are to loop\n            // over each possible schema and check if they type of the schema specifies format\n            // and if so we use the oneOfSchemaProp as the schema for formatting\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n            if ((schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.format) === undefined && (schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.oneOf) !== undefined) {\n                for (const [_index, oneOfSchemaProp] of schemaProp.oneOf.entries()) {\n                    if ((oneOfSchemaProp === null || oneOfSchemaProp === void 0 ? void 0 : oneOfSchemaProp.format) !== undefined) {\n                        schemaProp = oneOfSchemaProp;\n                        break;\n                    }\n                }\n            }\n            object[key] = convertScalarValue(value, schemaProp.format, format);\n            dataPath.pop();\n        }\n    }\n    return object;\n};\n/**\n * Given data that can be interpreted according to the provided schema, returns equivalent data that has been formatted\n * according to the provided return format.\n *\n * @param schema - how to interpret the data\n * @param data - data to be formatted\n * @param returnFormat - how to format the data\n * @returns - formatted data\n *\n * @example\n *\n * ```js\n * import { FMT_NUMBER, utils } from \"web3\";\n *\n * console.log(\n *   utils.format({ format: \"uint\" }, \"221\", { number: FMT_NUMBER.HEX }),\n * );\n * // 0xdd\n * ```\n *\n */\nexport const format = (schema, data, returnFormat = DEFAULT_RETURN_FORMAT) => {\n    let dataToParse;\n    if (isObject(data)) {\n        dataToParse = mergeDeep({}, data);\n    }\n    else if (Array.isArray(data)) {\n        dataToParse = [...data];\n    }\n    else {\n        dataToParse = data;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const jsonSchema = isObject(schema) ? schema : utils.ethAbiToJsonSchema(schema);\n    if (!jsonSchema.properties && !jsonSchema.items && !jsonSchema.format) {\n        throw new FormatterError('Invalid json schema for formatting');\n    }\n    return convert(dataToParse, jsonSchema, [], returnFormat);\n};\n//# sourceMappingURL=formatter.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * This package provides utility functions for Ethereum dapps and other web3.js packages.\n *\n * For using Utils functions, first install Web3 package using `npm i web3` or `yarn add web3`.\n * After that, Web3 Utils functions will be available as mentioned below.\n * ```ts\n * import { Web3 } from 'web3';\n * const web3 = new Web3();\n *\n * const value = web3.utils.fromWei(\"1\", \"ether\")\n *\n * ```\n *\n * For using individual package install `web3-utils` package using `npm i web3-utils` or `yarn add web3-utils` and only import required functions.\n * This is more efficient approach for building lightweight applications.\n * ```ts\n * import { fromWei, soliditySha3Raw } from 'web3-utils';\n *\n * console.log(fromWei(\"1\", \"ether\"));\n * console.log(soliditySha3Raw({ type: \"string\", value: \"helloworld\" }))\n *\n * ```\n * @module Utils\n */\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { utf8ToBytes } from 'ethereum-cryptography/utils.js';\nimport { InvalidAddressError, InvalidBooleanError, InvalidBytesError, InvalidLargeValueError, InvalidSizeError, InvalidStringError, InvalidUnsignedIntegerError, } from 'web3-errors';\nimport { utils as validatorUtils, isAddress, isNullish, isHexStrict } from 'web3-validator';\nimport { bytesToUint8Array, bytesToHex, hexToBytes, toBigInt, toHex, toNumber, utf8ToHex, } from './converters.js';\nimport { leftPad, rightPad, toTwosComplement } from './string_manipulation.js';\nconst SHA3_EMPTY_BYTES = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * A wrapper for ethereum-cryptography/keccak256 to allow hashing a `string` and a `bigint` in addition to `UInt8Array`\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * console.log(web3.utils.keccak256Wrapper('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.keccak256Wrapper(1));\n * > 0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n *\n * console.log(web3.utils.keccak256Wrapper(0xaf12fd));\n * > 0x358640fd4719fa923525d74ab5ae80a594301aba5543e3492b052bf4598b794c\n * ```\n */\nexport const keccak256Wrapper = (data) => {\n    let processedData;\n    if (typeof data === 'bigint' || typeof data === 'number') {\n        processedData = utf8ToBytes(data.toString());\n    }\n    else if (Array.isArray(data)) {\n        processedData = new Uint8Array(data);\n    }\n    else if (typeof data === 'string' && !isHexStrict(data)) {\n        processedData = utf8ToBytes(data);\n    }\n    else {\n        processedData = bytesToUint8Array(data);\n    }\n    return bytesToHex(keccak256(validatorUtils.ensureIfUint8Array(processedData)));\n};\nexport { keccak256Wrapper as keccak256 };\n/**\n * computes the Keccak-256 hash of the input and returns a hexstring\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * console.log(web3.utils.sha3('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.sha3(''));\n * > undefined\n * ```\n */\nexport const sha3 = (data) => {\n    let updatedData;\n    if (typeof data === 'string') {\n        if (data.startsWith('0x') && isHexStrict(data)) {\n            updatedData = hexToBytes(data);\n        }\n        else {\n            updatedData = utf8ToBytes(data);\n        }\n    }\n    else {\n        updatedData = data;\n    }\n    const hash = keccak256Wrapper(updatedData);\n    // EIP-1052 if hash is equal to c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470, keccak was given empty data\n    return hash === SHA3_EMPTY_BYTES ? undefined : hash;\n};\n/**\n * Will calculate the sha3 of the input but does return the hash value instead of null if for example a empty string is passed.\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * conosle.log(web3.utils.sha3Raw('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.sha3Raw(''));\n * > 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n * ```\n */\nexport const sha3Raw = (data) => {\n    const hash = sha3(data);\n    if (isNullish(hash)) {\n        return SHA3_EMPTY_BYTES;\n    }\n    return hash;\n};\n/**\n * returns type and value\n * @param arg - the input to return the type and value\n * @returns - the type and value of the input\n */\nconst getType = (arg) => {\n    if (Array.isArray(arg)) {\n        throw new Error('Autodetection of array types is not supported.');\n    }\n    let type;\n    let value;\n    // if type is given\n    if (typeof arg === 'object' &&\n        ('t' in arg || 'type' in arg) &&\n        ('v' in arg || 'value' in arg)) {\n        type = 't' in arg ? arg.t : arg.type;\n        value = 'v' in arg ? arg.v : arg.value;\n        type = type.toLowerCase() === 'bigint' ? 'int' : type;\n    }\n    else if (typeof arg === 'bigint') {\n        return ['int', arg];\n    }\n    // otherwise try to guess the type\n    else {\n        type = toHex(arg, true);\n        value = toHex(arg);\n        if (!type.startsWith('int') && !type.startsWith('uint')) {\n            type = 'bytes';\n        }\n    }\n    if ((type.startsWith('int') || type.startsWith('uint')) &&\n        typeof value === 'string' &&\n        !/^(-)?0x/i.test(value)) {\n        value = toBigInt(value);\n    }\n    return [type, value];\n};\n/**\n * returns the type with size if uint or int\n * @param name - the input to return the type with size\n * @returns - the type with size of the input\n */\nconst elementaryName = (name) => {\n    if (name.startsWith('int[')) {\n        return `int256${name.slice(3)}`;\n    }\n    if (name === 'int') {\n        return 'int256';\n    }\n    if (name.startsWith('uint[')) {\n        return `uint256'${name.slice(4)}`;\n    }\n    if (name === 'uint') {\n        return 'uint256';\n    }\n    return name;\n};\n/**\n * returns the size of the value of type 'byte'\n */\nconst parseTypeN = (value, typeLength) => {\n    const typesize = /^(\\d+).*$/.exec(value.slice(typeLength));\n    return typesize ? parseInt(typesize[1], 10) : 0;\n};\n/**\n * returns the bit length of the value\n * @param value - the input to return the bit length\n * @returns - the bit length of the input\n */\nconst bitLength = (value) => {\n    const updatedVal = value.toString(2);\n    return updatedVal.length;\n};\n/**\n * Pads the value based on size and type\n * returns a string of the padded value\n * @param type - the input to pad\n * @returns = the padded value\n */\nconst solidityPack = (type, val) => {\n    const value = val.toString();\n    if (type === 'string') {\n        if (typeof val === 'string')\n            return utf8ToHex(val);\n        throw new InvalidStringError(val);\n    }\n    if (type === 'bool' || type === 'boolean') {\n        if (typeof val === 'boolean')\n            return val ? '01' : '00';\n        throw new InvalidBooleanError(val);\n    }\n    if (type === 'address') {\n        if (!isAddress(value)) {\n            throw new InvalidAddressError(value);\n        }\n        return value;\n    }\n    const name = elementaryName(type);\n    if (type.startsWith('uint')) {\n        const size = parseTypeN(name, 'uint'.length);\n        if (size % 8 || size < 8 || size > 256) {\n            throw new InvalidSizeError(value);\n        }\n        const num = toNumber(value);\n        if (bitLength(num) > size) {\n            throw new InvalidLargeValueError(value);\n        }\n        if (num < BigInt(0)) {\n            throw new InvalidUnsignedIntegerError(value);\n        }\n        return size ? leftPad(num.toString(16), (size / 8) * 2) : num.toString(16);\n    }\n    if (type.startsWith('int')) {\n        const size = parseTypeN(name, 'int'.length);\n        if (size % 8 || size < 8 || size > 256) {\n            throw new InvalidSizeError(type);\n        }\n        const num = toNumber(value);\n        if (bitLength(num) > size) {\n            throw new InvalidLargeValueError(value);\n        }\n        if (num < BigInt(0)) {\n            return toTwosComplement(num.toString(), (size / 8) * 2);\n        }\n        return size ? leftPad(num.toString(16), size / 4) : num.toString(16);\n    }\n    if (name === 'bytes') {\n        if (value.replace(/^0x/i, '').length % 2 !== 0) {\n            throw new InvalidBytesError(value);\n        }\n        return value;\n    }\n    if (type.startsWith('bytes')) {\n        if (value.replace(/^0x/i, '').length % 2 !== 0) {\n            throw new InvalidBytesError(value);\n        }\n        const size = parseTypeN(type, 'bytes'.length);\n        if (!size || size < 1 || size > 64 || size < value.replace(/^0x/i, '').length / 2) {\n            throw new InvalidBytesError(value);\n        }\n        return rightPad(value, size * 2);\n    }\n    return '';\n};\n/**\n * returns a string of the tightly packed value given based on the type\n * @param arg - the input to return the tightly packed value\n * @returns - the tightly packed value\n */\nexport const processSolidityEncodePackedArgs = (arg) => {\n    const [type, val] = getType(arg);\n    // array case\n    if (Array.isArray(val)) {\n        // go through each element of the array and use map function to create new hexarg list\n        const hexArg = val.map((v) => solidityPack(type, v).replace('0x', ''));\n        return hexArg.join('');\n    }\n    const hexArg = solidityPack(type, val);\n    return hexArg.replace('0x', '');\n};\n/**\n * Encode packed arguments to a hexstring\n */\nexport const encodePacked = (...values) => {\n    const hexArgs = values.map(processSolidityEncodePackedArgs);\n    return `0x${hexArgs.join('').toLowerCase()}`;\n};\n/**\n * Will tightly pack values given in the same way solidity would then hash.\n * returns a hash string, or null if input is empty\n * @param values - the input to return the tightly packed values\n * @returns - the keccack246 of the tightly packed values\n *\n * @example\n * ```ts\n * console.log(web3.utils.soliditySha3({ type: \"string\", value: \"31323334\" }));\n * > 0xf15f8da2ad27e486d632dc37d24912f634398918d6f9913a0a0ff84e388be62b\n * ```\n */\nexport const soliditySha3 = (...values) => sha3(encodePacked(...values));\n/**\n * Will tightly pack values given in the same way solidity would then hash.\n * returns a hash string, if input is empty will return `0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470`\n * @param values - the input to return the tightly packed values\n * @returns - the keccack246 of the tightly packed values\n *\n * @example\n * ```ts\n * console.log(web3.utils.soliditySha3Raw({ type: \"string\", value: \"helloworld\" }))\n * > 0xfa26db7ca85ead399216e7c6316bc50ed24393c3122b582735e7f3b0f91b93f0\n * ```\n */\nexport const soliditySha3Raw = (...values) => sha3Raw(encodePacked(...values));\n/**\n * Get slot number for storage long string in contract. Basically for getStorage method\n * returns slotNumber where will data placed\n * @param mainSlotNumber - the slot number where will be stored hash of long string\n * @returns - the slot number where will be stored long string\n */\nexport const getStorageSlotNumForLongString = (mainSlotNumber) => sha3(`0x${(typeof mainSlotNumber === 'number'\n    ? mainSlotNumber.toString()\n    : mainSlotNumber).padStart(64, '0')}`);\n//# sourceMappingURL=hash.js.map","import { randomBytes } from \"@noble/hashes/utils\";\nexport function getRandomBytesSync(bytes) {\n    return randomBytes(bytes);\n}\nexport async function getRandomBytes(bytes) {\n    return randomBytes(bytes);\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @module Utils\n */\nimport { getRandomBytesSync } from 'ethereum-cryptography/random.js';\nimport { bytesToHex } from './converters.js';\n/**\n * Returns a random byte array by the given bytes size\n * @param size - The size of the random byte array returned\n * @returns - random byte array\n *\n * @example\n * ```ts\n * console.log(web3.utils.randomBytes(32));\n * > Uint8Array(32) [\n *       93, 172, 226,  32,  33, 176, 156, 156,\n *       182,  30, 240,   2,  69,  96, 174, 197,\n *       33, 136, 194, 241, 197, 156, 110, 111,\n *       66,  87,  17,  88,  67,  48, 245, 183\n *    ]\n * ```\n */\nexport const randomBytes = (size) => getRandomBytesSync(size);\n/**\n * Returns a random hex string by the given bytes size\n * @param byteSize - The size of the random hex string returned\n * @returns - random hex string\n *\n * ```ts\n * console.log(web3.utils.randomHex(32));\n * > 0x139f5b88b72a25eab053d3b57fe1f8a9dbc62a526b1cb1774d0d7db1c3e7ce9e\n * ```\n */\nexport const randomHex = (byteSize) => bytesToHex(randomBytes(byteSize));\n//# sourceMappingURL=random.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isNullish } from 'web3-validator';\n/**\n * An alternative to the node function `isPromise` that exists in `util/types` because it is not available on the browser.\n * @param object - to check if it is a `Promise`\n * @returns `true` if it is an `object` or a `function` that has a `then` function. And returns `false` otherwise.\n */\nexport function isPromise(object) {\n    return ((typeof object === 'object' || typeof object === 'function') &&\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        typeof object.then === 'function');\n}\n/**\n * Wait for a promise but interrupt it if it did not resolve within a given timeout.\n * If the timeout reached, before the promise code resolve, either throw an error if an error object was provided, or return `undefined`.\n * @param awaitable - The promise or function to wait for.\n * @param timeout - The timeout in milliseconds.\n * @param error - (Optional) The error to throw if the timeout reached.\n */\nexport function waitWithTimeout(awaitable, timeout, error) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let timeoutId;\n        const result = yield Promise.race([\n            awaitable instanceof Promise ? awaitable : awaitable(),\n            new Promise((resolve, reject) => {\n                timeoutId = setTimeout(() => (error ? reject(error) : resolve(undefined)), timeout);\n            }),\n        ]);\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (result instanceof Error) {\n            throw result;\n        }\n        return result;\n    });\n}\n/**\n * Repeatedly calls an async function with a given interval until the result of the function is defined (not undefined or null),\n * or until a timeout is reached. It returns promise and intervalId.\n * @param func - The function to call.\n * @param interval - The interval in milliseconds.\n */\nexport function pollTillDefinedAndReturnIntervalId(func, interval) {\n    let intervalId;\n    const polledRes = new Promise((resolve, reject) => {\n        intervalId = setInterval((function intervalCallbackFunc() {\n            (() => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const res = yield waitWithTimeout(func, interval);\n                    if (!isNullish(res)) {\n                        clearInterval(intervalId);\n                        resolve(res);\n                    }\n                }\n                catch (error) {\n                    clearInterval(intervalId);\n                    reject(error);\n                }\n            }))();\n            return intervalCallbackFunc;\n        })(), // this will immediate invoke first call\n        interval);\n    });\n    return [polledRes, intervalId];\n}\n/**\n * Repeatedly calls an async function with a given interval until the result of the function is defined (not undefined or null),\n * or until a timeout is reached.\n * pollTillDefinedAndReturnIntervalId() function should be used instead of pollTillDefined if you need IntervalId in result.\n * This function will be deprecated in next major release so use pollTillDefinedAndReturnIntervalId().\n * @param func - The function to call.\n * @param interval - The interval in milliseconds.\n */\nexport function pollTillDefined(func, interval) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return pollTillDefinedAndReturnIntervalId(func, interval)[0];\n    });\n}\n/**\n * Enforce a timeout on a promise, so that it can be rejected if it takes too long to complete\n * @param timeout - The timeout to enforced in milliseconds.\n * @param error - The error to throw if the timeout is reached.\n * @returns A tuple of the timeout id and the promise that will be rejected if the timeout is reached.\n *\n * @example\n * ```ts\n * const [timerId, promise] = web3.utils.rejectIfTimeout(100, new Error('time out'));\n * ```\n */\nexport function rejectIfTimeout(timeout, error) {\n    let timeoutId;\n    const rejectOnTimeout = new Promise((_, reject) => {\n        timeoutId = setTimeout(() => {\n            reject(error);\n        }, timeout);\n    });\n    return [timeoutId, rejectOnTimeout];\n}\n/**\n * Sets an interval that repeatedly executes the given cond function with the specified interval between each call.\n * If the condition is met, the interval is cleared and a Promise that rejects with the returned value is returned.\n * @param cond - The function/condition to call.\n * @param interval - The interval in milliseconds.\n * @returns - an array with the interval ID and the Promise.\n */\nexport function rejectIfConditionAtInterval(cond, interval) {\n    let intervalId;\n    const rejectIfCondition = new Promise((_, reject) => {\n        intervalId = setInterval(() => {\n            (() => __awaiter(this, void 0, void 0, function* () {\n                const error = yield cond();\n                if (error) {\n                    clearInterval(intervalId);\n                    reject(error);\n                }\n            }))();\n        }, interval);\n    });\n    return [intervalId, rejectIfCondition];\n}\n//# sourceMappingURL=promise_helpers.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @module Utils\n */\nimport { bytesToHex } from './converters.js';\nimport { randomBytes } from './random.js';\n/**\n * Generate a version 4 (random) uuid\n * https://github.com/uuidjs/uuid/blob/main/src/v4.js#L5\n * @returns - A version 4 uuid of the form xxxxxxxx-xxxx-4xxx-xxxx-xxxxxxxxxxxx\n * @example\n * ```ts\n * console.log(web3.utils.uuidV4());\n * > \"1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed\"\n * ```\n */\nexport const uuidV4 = () => {\n    const bytes = randomBytes(16);\n    // https://github.com/ethers-io/ethers.js/blob/ce8f1e4015c0f27bf178238770b1325136e3351a/packages/json-wallets/src.ts/utils.ts#L54\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    /* eslint-disable-next-line */\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    /* eslint-disable-next-line */\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const hexString = bytesToHex(bytes);\n    return [\n        hexString.substring(2, 10),\n        hexString.substring(10, 14),\n        hexString.substring(14, 18),\n        hexString.substring(18, 22),\n        hexString.substring(22, 34),\n    ].join('-');\n};\n//# sourceMappingURL=uuid.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { isNullish } from 'web3-validator';\nimport { rpcErrorsMap } from 'web3-errors';\nimport { uuidV4 } from './uuid.js';\n// check if code is a valid rpc server error code\nexport const isResponseRpcError = (rpcError) => {\n    const errorCode = rpcError.error.code;\n    return rpcErrorsMap.has(errorCode) || (errorCode >= -32099 && errorCode <= -32000);\n};\nexport const isResponseWithResult = (response) => !Array.isArray(response) &&\n    !!response &&\n    response.jsonrpc === '2.0' &&\n    // JSON RPC consider \"null\" as valid response\n    'result' in response &&\n    isNullish(response.error) &&\n    (typeof response.id === 'number' || typeof response.id === 'string');\n// To avoid circular package dependency, copied to code here. If you update this please update same function in `response_errors.ts`\nexport const isResponseWithError = (response) => !Array.isArray(response) &&\n    response.jsonrpc === '2.0' &&\n    !!response &&\n    isNullish(response.result) &&\n    // JSON RPC consider \"null\" as valid response\n    'error' in response &&\n    (typeof response.id === 'number' || typeof response.id === 'string');\nexport const isResponseWithNotification = (response) => !Array.isArray(response) &&\n    !!response &&\n    response.jsonrpc === '2.0' &&\n    !isNullish(response.params) &&\n    !isNullish(response.method);\nexport const isSubscriptionResult = (response) => !Array.isArray(response) &&\n    !!response &&\n    response.jsonrpc === '2.0' &&\n    'id' in response &&\n    // JSON RPC consider \"null\" as valid response\n    'result' in response;\nexport const validateResponse = (response) => isResponseWithResult(response) || isResponseWithError(response);\nexport const isValidResponse = (response) => Array.isArray(response) ? response.every(validateResponse) : validateResponse(response);\nexport const isBatchResponse = (response) => Array.isArray(response) && response.length > 0 && isValidResponse(response);\n// internal optional variable to increment and use for the jsonrpc `id`\nlet requestIdSeed;\n/**\n * Optionally use to make the jsonrpc `id` start from a specific number.\n * Without calling this function, the `id` will be filled with a Uuid.\n * But after this being called with a number, the `id` will be a number starting from the provided `start` variable.\n * However, if `undefined` was passed to this function, the `id` will be a Uuid again.\n * @param start - a number to start incrementing from.\n * \tOr `undefined` to use a new Uuid (this is the default behavior)\n */\nexport const setRequestIdStart = (start) => {\n    requestIdSeed = start;\n};\nexport const toPayload = (request) => {\n    var _a, _b, _c, _d;\n    if (typeof requestIdSeed !== 'undefined') {\n        requestIdSeed += 1;\n    }\n    return {\n        jsonrpc: (_a = request.jsonrpc) !== null && _a !== void 0 ? _a : '2.0',\n        id: (_c = (_b = request.id) !== null && _b !== void 0 ? _b : requestIdSeed) !== null && _c !== void 0 ? _c : uuidV4(),\n        method: request.method,\n        params: (_d = request.params) !== null && _d !== void 0 ? _d : undefined,\n    };\n};\nexport const toBatchPayload = (requests) => requests.map(request => toPayload(request));\nexport const isBatchRequest = (request) => Array.isArray(request) && request.length > 0;\n//# sourceMappingURL=json_rpc.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\nimport { OperationTimeoutError } from 'web3-errors';\n/**\n * The class is a simple implementation of a deferred promise with optional timeout functionality,\n * which can be useful when dealing with asynchronous tasks.\n *\n */\nexport class Web3DeferredPromise {\n    /**\n     *\n     * @param timeout - (optional) The timeout in milliseconds.\n     * @param eagerStart - (optional) If true, the timer starts as soon as the promise is created.\n     * @param timeoutMessage - (optional) The message to include in the timeout erro that is thrown when the promise times out.\n     */\n    constructor({ timeout, eagerStart, timeoutMessage, } = {\n        timeout: 0,\n        eagerStart: false,\n        timeoutMessage: 'DeferredPromise timed out',\n    }) {\n        // public tag to treat object as promise by different libs\n        // eslint-disable-next-line @typescript-eslint/prefer-as-const\n        this[_a] = 'Promise';\n        this._state = 'pending';\n        this._promise = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this._timeoutMessage = timeoutMessage;\n        this._timeoutInterval = timeout;\n        if (eagerStart) {\n            this.startTimer();\n        }\n    }\n    /**\n     * Returns the current state of the promise.\n     * @returns 'pending' | 'fulfilled' | 'rejected'\n     */\n    get state() {\n        return this._state;\n    }\n    /**\n     *\n     * @param onfulfilled - (optional) The callback to execute when the promise is fulfilled.\n     * @param onrejected  - (optional) The callback to execute when the promise is rejected.\n     * @returns\n     */\n    then(onfulfilled, onrejected) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._promise.then(onfulfilled, onrejected);\n        });\n    }\n    /**\n     *\n     * @param onrejected - (optional) The callback to execute when the promise is rejected.\n     * @returns\n     */\n    catch(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onrejected) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._promise.catch(onrejected);\n        });\n    }\n    /**\n     *\n     * @param onfinally - (optional) The callback to execute when the promise is settled (fulfilled or rejected).\n     * @returns\n     */\n    finally(onfinally) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._promise.finally(onfinally);\n        });\n    }\n    /**\n     * Resolves the current promise.\n     * @param value - The value to resolve the promise with.\n     */\n    resolve(value) {\n        this._resolve(value);\n        this._state = 'fulfilled';\n        this._clearTimeout();\n    }\n    /**\n     * Rejects the current promise.\n     * @param reason - The reason to reject the promise with.\n     */\n    reject(reason) {\n        this._reject(reason);\n        this._state = 'rejected';\n        this._clearTimeout();\n    }\n    /**\n     * Starts the timeout timer for the promise.\n     */\n    startTimer() {\n        if (this._timeoutInterval && this._timeoutInterval > 0) {\n            this._timeoutId = setTimeout(this._checkTimeout.bind(this), this._timeoutInterval);\n        }\n    }\n    _checkTimeout() {\n        if (this._state === 'pending' && this._timeoutId) {\n            this.reject(new OperationTimeoutError(this._timeoutMessage));\n        }\n    }\n    _clearTimeout() {\n        if (this._timeoutId) {\n            clearTimeout(this._timeoutId);\n        }\n    }\n}\n_a = Symbol.toStringTag;\n//# sourceMappingURL=web3_deferred_promise.js.map","import { InvalidResponseError } from 'web3-errors';\nexport class ChunkResponseParser {\n    constructor(eventEmitter, autoReconnect) {\n        this.eventEmitter = eventEmitter;\n        this.autoReconnect = autoReconnect;\n        this.chunkTimeout = 1000 * 15;\n    }\n    clearQueues() {\n        if (typeof this._clearQueues === 'function') {\n            this._clearQueues();\n        }\n    }\n    onError(clearQueues) {\n        this._clearQueues = clearQueues;\n    }\n    parseResponse(data) {\n        const returnValues = [];\n        // DE-CHUNKER\n        const dechunkedData = data\n            .replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n            .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n            .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n            .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n            .split('|--|');\n        dechunkedData.forEach(_chunkData => {\n            // prepend the last chunk\n            let chunkData = _chunkData;\n            if (this.lastChunk) {\n                chunkData = this.lastChunk + chunkData;\n            }\n            let result;\n            try {\n                result = JSON.parse(chunkData);\n            }\n            catch (e) {\n                this.lastChunk = chunkData;\n                // start timeout to cancel all requests\n                if (this.lastChunkTimeout) {\n                    clearTimeout(this.lastChunkTimeout);\n                }\n                this.lastChunkTimeout = setTimeout(() => {\n                    if (this.autoReconnect)\n                        return;\n                    this.clearQueues();\n                    this.eventEmitter.emit('error', new InvalidResponseError({\n                        id: 1,\n                        jsonrpc: '2.0',\n                        error: { code: 2, message: 'Chunk timeout' },\n                    }));\n                }, this.chunkTimeout);\n                return;\n            }\n            // cancel timeout and set chunk to null\n            clearTimeout(this.lastChunkTimeout);\n            this.lastChunk = undefined;\n            if (result)\n                returnValues.push(result);\n        });\n        return returnValues;\n    }\n}\n//# sourceMappingURL=chunk_response_parser.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3BaseProvider, } from 'web3-types';\nimport { EventEmitter } from 'eventemitter3';\nimport { EIP1193ProviderRpcError } from 'web3-errors';\nimport { toPayload } from './json_rpc.js';\n/**\n * This is an abstract class, which extends {@link Web3BaseProvider} class. This class is used to implement a provider that adheres to the EIP-1193 standard for Ethereum providers.\n */\nexport class Eip1193Provider extends Web3BaseProvider {\n    constructor() {\n        super(...arguments);\n        this._eventEmitter = new EventEmitter();\n        this._chainId = '';\n        this._accounts = [];\n    }\n    _getChainId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const data = yield this.request(toPayload({\n                method: 'eth_chainId',\n                params: [],\n            }));\n            return (_a = data === null || data === void 0 ? void 0 : data.result) !== null && _a !== void 0 ? _a : '';\n        });\n    }\n    _getAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const data = yield this.request(toPayload({\n                method: 'eth_accounts',\n                params: [],\n            }));\n            return (_a = data === null || data === void 0 ? void 0 : data.result) !== null && _a !== void 0 ? _a : [];\n        });\n    }\n    _onConnect() {\n        Promise.all([\n            this._getChainId()\n                .then(chainId => {\n                if (chainId !== this._chainId) {\n                    this._chainId = chainId;\n                    this._eventEmitter.emit('chainChanged', this._chainId);\n                }\n            })\n                .catch(err => {\n                // todo: add error handler\n                console.error(err);\n            }),\n            this._getAccounts()\n                .then(accounts => {\n                if (!(this._accounts.length === accounts.length &&\n                    accounts.every(v => accounts.includes(v)))) {\n                    this._accounts = accounts;\n                    this._onAccountsChanged();\n                }\n            })\n                .catch(err => {\n                // todo: add error handler\n                // eslint-disable-next-line no-console\n                console.error(err);\n            }),\n        ])\n            .then(() => this._eventEmitter.emit('connect', {\n            chainId: this._chainId,\n        }))\n            .catch(err => {\n            // todo: add error handler\n            // eslint-disable-next-line no-console\n            console.error(err);\n        });\n    }\n    // todo this must be ProvideRpcError with a message too\n    _onDisconnect(code, data) {\n        this._eventEmitter.emit('disconnect', new EIP1193ProviderRpcError(code, data));\n    }\n    _onAccountsChanged() {\n        // get chainId and safe to local\n        this._eventEmitter.emit('accountsChanged', this._accounts);\n    }\n}\n//# sourceMappingURL=web3_eip1193_provider.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ConnectionError, ConnectionNotOpenError, InvalidClientError, MaxAttemptsReachedOnReconnectingError, PendingRequestsOnReconnectingError, RequestAlreadySentError, Web3WSProviderError, } from 'web3-errors';\nimport { Eip1193Provider } from './web3_eip1193_provider.js';\nimport { ChunkResponseParser } from './chunk_response_parser.js';\nimport { isNullish } from './validation.js';\nimport { Web3DeferredPromise } from './web3_deferred_promise.js';\nimport * as jsonRpc from './json_rpc.js';\nconst DEFAULT_RECONNECTION_OPTIONS = {\n    autoReconnect: true,\n    delay: 5000,\n    maxAttempts: 5,\n};\nconst NORMAL_CLOSE_CODE = 1000; // https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/close\nexport class SocketProvider extends Eip1193Provider {\n    get SocketConnection() {\n        return this._socketConnection;\n    }\n    /**\n     * This is an abstract class for implementing a socket provider (e.g. WebSocket, IPC). It extends the EIP-1193 provider {@link EIP1193Provider}.\n     * @param socketPath - The path to the socket (e.g. /ipc/path or ws://localhost:8546)\n     * @param socketOptions - The options for the socket connection. Its type is supposed to be specified in the inherited classes.\n     * @param reconnectOptions - The options for the socket reconnection {@link ReconnectOptions}\n     */\n    constructor(socketPath, socketOptions, reconnectOptions) {\n        super();\n        this._connectionStatus = 'connecting';\n        // Message handlers. Due to bounding of `this` and removing the listeners we have to keep it's reference.\n        this._onMessageHandler = this._onMessage.bind(this);\n        this._onOpenHandler = this._onConnect.bind(this);\n        this._onCloseHandler = this._onCloseEvent.bind(this);\n        this._onErrorHandler = this._onError.bind(this);\n        if (!this._validateProviderPath(socketPath))\n            throw new InvalidClientError(socketPath);\n        this._socketPath = socketPath;\n        this._socketOptions = socketOptions;\n        this._reconnectOptions = Object.assign(Object.assign({}, DEFAULT_RECONNECTION_OPTIONS), (reconnectOptions !== null && reconnectOptions !== void 0 ? reconnectOptions : {}));\n        this._pendingRequestsQueue = new Map();\n        this._sentRequestsQueue = new Map();\n        this._init();\n        this.connect();\n        this.chunkResponseParser = new ChunkResponseParser(this._eventEmitter, this._reconnectOptions.autoReconnect);\n        this.chunkResponseParser.onError(() => {\n            this._clearQueues();\n        });\n        this.isReconnecting = false;\n    }\n    _init() {\n        this._reconnectAttempts = 0;\n    }\n    /**\n     * Try to establish a connection to the socket\n     */\n    connect() {\n        try {\n            this._openSocketConnection();\n            this._connectionStatus = 'connecting';\n            this._addSocketListeners();\n        }\n        catch (e) {\n            if (!this.isReconnecting) {\n                this._connectionStatus = 'disconnected';\n                if (e && e.message) {\n                    throw new ConnectionError(`Error while connecting to ${this._socketPath}. Reason: ${e.message}`);\n                }\n                else {\n                    throw new InvalidClientError(this._socketPath);\n                }\n            }\n            else {\n                setImmediate(() => {\n                    this._reconnect();\n                });\n            }\n        }\n    }\n    // eslint-disable-next-line class-methods-use-this\n    _validateProviderPath(path) {\n        return !!path;\n    }\n    /**\n     *\n     * @returns the pendingRequestQueue size\n     */\n    // eslint-disable-next-line class-methods-use-this\n    getPendingRequestQueueSize() {\n        return this._pendingRequestsQueue.size;\n    }\n    /**\n     *\n     * @returns the sendPendingRequests size\n     */\n    // eslint-disable-next-line class-methods-use-this\n    getSentRequestsQueueSize() {\n        return this._sentRequestsQueue.size;\n    }\n    /**\n     *\n     * @returns `true` if the socket supports subscriptions\n     */\n    // eslint-disable-next-line class-methods-use-this\n    supportsSubscriptions() {\n        return true;\n    }\n    on(type, listener) {\n        this._eventEmitter.on(type, listener);\n    }\n    once(type, listener) {\n        this._eventEmitter.once(type, listener);\n    }\n    removeListener(type, listener) {\n        this._eventEmitter.removeListener(type, listener);\n    }\n    _onDisconnect(code, data) {\n        this._connectionStatus = 'disconnected';\n        super._onDisconnect(code, data);\n    }\n    /**\n     * Disconnects the socket\n     * @param code - The code to be sent to the server\n     * @param data - The data to be sent to the server\n     */\n    disconnect(code, data) {\n        const disconnectCode = code !== null && code !== void 0 ? code : NORMAL_CLOSE_CODE;\n        this._removeSocketListeners();\n        if (this.getStatus() !== 'disconnected') {\n            this._closeSocketConnection(disconnectCode, data);\n        }\n        this._onDisconnect(disconnectCode, data);\n    }\n    /**\n     * Safely disconnects the socket, async and waits for request size to be 0 before disconnecting\n     * @param forceDisconnect - If true, will clear queue after 5 attempts of waiting for both pending and sent queue to be 0\n     * @param ms - Determines the ms of setInterval\n     * @param code - The code to be sent to the server\n     * @param data - The data to be sent to the server\n     */\n    safeDisconnect(code_1, data_1) {\n        return __awaiter(this, arguments, void 0, function* (code, data, forceDisconnect = false, ms = 1000) {\n            let retryAttempt = 0;\n            const checkQueue = () => __awaiter(this, void 0, void 0, function* () {\n                return new Promise(resolve => {\n                    const interval = setInterval(() => {\n                        if (forceDisconnect && retryAttempt >= 5) {\n                            this.clearQueues();\n                        }\n                        if (this.getPendingRequestQueueSize() === 0 &&\n                            this.getSentRequestsQueueSize() === 0) {\n                            clearInterval(interval);\n                            resolve(true);\n                        }\n                        retryAttempt += 1;\n                    }, ms);\n                });\n            });\n            yield checkQueue();\n            this.disconnect(code, data);\n        });\n    }\n    /**\n     * Removes all listeners for the specified event type.\n     * @param type - The event type to remove the listeners for\n     */\n    removeAllListeners(type) {\n        this._eventEmitter.removeAllListeners(type);\n    }\n    _onError(event) {\n        // do not emit error while trying to reconnect\n        if (this.isReconnecting) {\n            this._reconnect();\n        }\n        else {\n            this._eventEmitter.emit('error', event);\n        }\n    }\n    /**\n     * Resets the socket, removing all listeners and pending requests\n     */\n    reset() {\n        this._sentRequestsQueue.clear();\n        this._pendingRequestsQueue.clear();\n        this._init();\n        this._removeSocketListeners();\n        this._addSocketListeners();\n    }\n    _reconnect() {\n        if (this.isReconnecting) {\n            return;\n        }\n        this.isReconnecting = true;\n        if (this._sentRequestsQueue.size > 0) {\n            this._sentRequestsQueue.forEach((request, key) => {\n                request.deferredPromise.reject(new PendingRequestsOnReconnectingError());\n                this._sentRequestsQueue.delete(key);\n            });\n        }\n        if (this._reconnectAttempts < this._reconnectOptions.maxAttempts) {\n            this._reconnectAttempts += 1;\n            setTimeout(() => {\n                this._removeSocketListeners();\n                this.connect(); // this can error out\n                this.isReconnecting = false;\n            }, this._reconnectOptions.delay);\n        }\n        else {\n            this.isReconnecting = false;\n            this._clearQueues();\n            this._removeSocketListeners();\n            this._eventEmitter.emit('error', new MaxAttemptsReachedOnReconnectingError(this._reconnectOptions.maxAttempts));\n        }\n    }\n    /**\n     *  Creates a request object to be sent to the server\n     */\n    request(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isNullish(this._socketConnection)) {\n                throw new Error('Connection is undefined');\n            }\n            // if socket disconnected - open connection\n            if (this.getStatus() === 'disconnected') {\n                this.connect();\n            }\n            const requestId = jsonRpc.isBatchRequest(request)\n                ? request[0].id\n                : request.id;\n            if (!requestId) {\n                throw new Web3WSProviderError('Request Id not defined');\n            }\n            if (this._sentRequestsQueue.has(requestId)) {\n                throw new RequestAlreadySentError(requestId);\n            }\n            const deferredPromise = new Web3DeferredPromise();\n            deferredPromise.catch(error => {\n                this._eventEmitter.emit('error', error);\n            });\n            const reqItem = {\n                payload: request,\n                deferredPromise,\n            };\n            if (this.getStatus() === 'connecting') {\n                this._pendingRequestsQueue.set(requestId, reqItem);\n                return reqItem.deferredPromise;\n            }\n            this._sentRequestsQueue.set(requestId, reqItem);\n            try {\n                this._sendToSocket(reqItem.payload);\n            }\n            catch (error) {\n                this._sentRequestsQueue.delete(requestId);\n                this._eventEmitter.emit('error', error);\n            }\n            return deferredPromise;\n        });\n    }\n    _onConnect() {\n        this._connectionStatus = 'connected';\n        this._reconnectAttempts = 0;\n        super._onConnect();\n        this._sendPendingRequests();\n    }\n    _sendPendingRequests() {\n        for (const [id, value] of this._pendingRequestsQueue.entries()) {\n            try {\n                this._sendToSocket(value.payload);\n                this._pendingRequestsQueue.delete(id);\n                this._sentRequestsQueue.set(id, value);\n            }\n            catch (error) {\n                // catches if sendTosocket fails\n                this._pendingRequestsQueue.delete(id);\n                this._eventEmitter.emit('error', error);\n            }\n        }\n    }\n    _onMessage(event) {\n        const responses = this._parseResponses(event);\n        if (isNullish(responses) || responses.length === 0) {\n            return;\n        }\n        for (const response of responses) {\n            if (jsonRpc.isResponseWithNotification(response) &&\n                response.method.endsWith('_subscription')) {\n                this._eventEmitter.emit('message', response);\n                return;\n            }\n            const requestId = jsonRpc.isBatchResponse(response)\n                ? response[0].id\n                : response.id;\n            const requestItem = this._sentRequestsQueue.get(requestId);\n            if (!requestItem) {\n                return;\n            }\n            if (jsonRpc.isBatchResponse(response) ||\n                jsonRpc.isResponseWithResult(response) ||\n                jsonRpc.isResponseWithError(response)) {\n                this._eventEmitter.emit('message', response);\n                requestItem.deferredPromise.resolve(response);\n            }\n            this._sentRequestsQueue.delete(requestId);\n        }\n    }\n    clearQueues(event) {\n        this._clearQueues(event);\n    }\n    _clearQueues(event) {\n        if (this._pendingRequestsQueue.size > 0) {\n            this._pendingRequestsQueue.forEach((request, key) => {\n                request.deferredPromise.reject(new ConnectionNotOpenError(event));\n                this._pendingRequestsQueue.delete(key);\n            });\n        }\n        if (this._sentRequestsQueue.size > 0) {\n            this._sentRequestsQueue.forEach((request, key) => {\n                request.deferredPromise.reject(new ConnectionNotOpenError(event));\n                this._sentRequestsQueue.delete(key);\n            });\n        }\n        this._removeSocketListeners();\n    }\n}\n//# sourceMappingURL=socket_provider.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport * from './converters.js';\nexport * from './event_emitter.js';\nexport * from './validation.js';\nexport * from './formatter.js';\nexport * from './hash.js';\nexport * from './random.js';\nexport * from './string_manipulation.js';\nexport * from './objects.js';\nexport * from './promise_helpers.js';\nexport * from './json_rpc.js';\nexport * as jsonRpc from './json_rpc.js';\nexport * from './web3_deferred_promise.js';\nexport * from './chunk_response_parser.js';\nexport * from './uuid.js';\nexport * from './web3_eip1193_provider.js';\nexport * from './socket_provider.js';\nexport * from './uint8array.js';\n//# sourceMappingURL=index.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { EventEmitter } from 'web3-utils';\nexport class Web3EventEmitter {\n    constructor() {\n        this._emitter = new EventEmitter();\n    }\n    on(eventName, fn) {\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        this._emitter.on(eventName, fn);\n    }\n    once(eventName, fn) {\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        this._emitter.once(eventName, fn);\n    }\n    off(eventName, fn) {\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        this._emitter.off(eventName, fn);\n    }\n    emit(eventName, params) {\n        this._emitter.emit(eventName, params);\n    }\n    listenerCount(eventName) {\n        return this._emitter.listenerCount(eventName);\n    }\n    listeners(eventName) {\n        return this._emitter.listeners(eventName);\n    }\n    eventNames() {\n        return this._emitter.eventNames();\n    }\n    removeAllListeners() {\n        return this._emitter.removeAllListeners();\n    }\n    setMaxListenerWarningThreshold(maxListenersWarningThreshold) {\n        this._emitter.setMaxListeners(maxListenersWarningThreshold);\n    }\n    getMaxListeners() {\n        return this._emitter.getMaxListeners();\n    }\n}\n//# sourceMappingURL=web3_event_emitter.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { DEFAULT_RETURN_FORMAT, } from 'web3-types';\nimport { ConfigHardforkMismatchError, ConfigChainMismatchError } from 'web3-errors';\nimport { isNullish, toHex } from 'web3-utils';\nimport { Web3EventEmitter } from './web3_event_emitter.js';\nexport var Web3ConfigEvent;\n(function (Web3ConfigEvent) {\n    Web3ConfigEvent[\"CONFIG_CHANGE\"] = \"CONFIG_CHANGE\";\n})(Web3ConfigEvent || (Web3ConfigEvent = {}));\nexport class Web3Config extends Web3EventEmitter {\n    constructor(options) {\n        super();\n        this.config = {\n            handleRevert: false,\n            defaultAccount: undefined,\n            defaultBlock: 'latest',\n            transactionBlockTimeout: 50,\n            transactionConfirmationBlocks: 24,\n            transactionPollingInterval: 1000,\n            transactionPollingTimeout: 750 * 1000,\n            transactionReceiptPollingInterval: undefined,\n            transactionSendTimeout: 750 * 1000,\n            transactionConfirmationPollingInterval: undefined,\n            blockHeaderTimeout: 10,\n            maxListenersWarningThreshold: 100,\n            contractDataInputFill: 'data',\n            defaultNetworkId: undefined,\n            defaultChain: 'mainnet',\n            defaultHardfork: 'london',\n            // TODO - Check if there is a default Common\n            defaultCommon: undefined,\n            defaultTransactionType: '0x2',\n            defaultMaxPriorityFeePerGas: toHex(2500000000),\n            enableExperimentalFeatures: {\n                useSubscriptionWhenCheckingBlockTimeout: false,\n                useRpcCallSpecification: false,\n            },\n            transactionBuilder: undefined,\n            transactionTypeParser: undefined,\n            customTransactionSchema: undefined,\n            defaultReturnFormat: DEFAULT_RETURN_FORMAT,\n            ignoreGasPricing: false,\n        };\n        this.setConfig(options !== null && options !== void 0 ? options : {});\n    }\n    setConfig(options) {\n        // TODO: Improve and add key check\n        const keys = Object.keys(options);\n        for (const key of keys) {\n            this._triggerConfigChange(key, options[key]);\n            if (!isNullish(options[key]) &&\n                typeof options[key] === 'number' &&\n                key === 'maxListenersWarningThreshold') {\n                // additionally set in event emitter\n                this.setMaxListenerWarningThreshold(Number(options[key]));\n            }\n        }\n        Object.assign(this.config, options);\n    }\n    /**\n     * The `handleRevert` options property returns the revert reason string if enabled for the following methods:\n     * - web3.eth.sendTransaction()\n     * - web3.eth.call()\n     * - myContract.methods.myMethod().call()\n     * - myContract.methods.myMethod().send()\n     * Default is `false`.\n     *\n     * `Note`: At the moment `handleRevert` is only supported for `sendTransaction` and not for `sendSignedTransaction`\n     */\n    get handleRevert() {\n        return this.config.handleRevert;\n    }\n    /**\n     * Will set the handleRevert\n     */\n    set handleRevert(val) {\n        this._triggerConfigChange('handleRevert', val);\n        this.config.handleRevert = val;\n    }\n    /**\n     * The `contractDataInputFill` options property will allow you to set the hash of the method signature and encoded parameters to the property\n     * either `data`, `input` or both within your contract.\n     * This will affect the contracts send, call and estimateGas methods\n     * Default is `data`.\n     */\n    get contractDataInputFill() {\n        return this.config.contractDataInputFill;\n    }\n    /**\n     * Will set the contractDataInputFill\n     */\n    set contractDataInputFill(val) {\n        this._triggerConfigChange('contractDataInputFill', val);\n        this.config.contractDataInputFill = val;\n    }\n    /**\n     * This default address is used as the default `from` property, if no `from` property is specified in for the following methods:\n     * - web3.eth.sendTransaction()\n     * - web3.eth.call()\n     * - myContract.methods.myMethod().call()\n     * - myContract.methods.myMethod().send()\n     */\n    get defaultAccount() {\n        return this.config.defaultAccount;\n    }\n    /**\n     * Will set the default account.\n     */\n    set defaultAccount(val) {\n        this._triggerConfigChange('defaultAccount', val);\n        this.config.defaultAccount = val;\n    }\n    /**\n     * The default block is used for certain methods. You can override it by passing in the defaultBlock as last parameter. The default value is `\"latest\"`.\n     * - web3.eth.getBalance()\n     * - web3.eth.getCode()\n     * - web3.eth.getTransactionCount()\n     * - web3.eth.getStorageAt()\n     * - web3.eth.call()\n     * - myContract.methods.myMethod().call()\n     */\n    get defaultBlock() {\n        return this.config.defaultBlock;\n    }\n    /**\n     * Will set the default block.\n     *\n     * - A block number\n     * - `\"earliest\"` - String: The genesis block\n     * - `\"latest\"` - String: The latest block (current head of the blockchain)\n     * - `\"pending\"` - String: The currently mined block (including pending transactions)\n     * - `\"finalized\"` - String: (For POS networks) The finalized block is one which has been accepted as canonical by greater than 2/3 of validators\n     * - `\"safe\"` - String: (For POS networks) The safe head block is one which under normal network conditions, is expected to be included in the canonical chain. Under normal network conditions the safe head and the actual tip of the chain will be equivalent (with safe head trailing only by a few seconds). Safe heads will be less likely to be reorged than the proof of work network's latest blocks.\n     */\n    set defaultBlock(val) {\n        this._triggerConfigChange('defaultBlock', val);\n        this.config.defaultBlock = val;\n    }\n    /**\n     * The time used to wait for Ethereum Node to return the sent transaction result.\n     * Note: If the RPC call stuck at the Node and therefor timed-out, the transaction may still be pending or even mined by the Network. We recommend checking the pending transactions in such a case.\n     * Default is `750` seconds (12.5 minutes).\n     */\n    get transactionSendTimeout() {\n        return this.config.transactionSendTimeout;\n    }\n    /**\n     * Will set the transactionSendTimeout.\n     */\n    set transactionSendTimeout(val) {\n        this._triggerConfigChange('transactionSendTimeout', val);\n        this.config.transactionSendTimeout = val;\n    }\n    /**\n     * The `transactionBlockTimeout` is used over socket-based connections. This option defines the amount of new blocks it should wait until the first confirmation happens, otherwise the PromiEvent rejects with a timeout error.\n     * Default is `50`.\n     */\n    get transactionBlockTimeout() {\n        return this.config.transactionBlockTimeout;\n    }\n    /**\n     * Will set the transactionBlockTimeout.\n     */\n    set transactionBlockTimeout(val) {\n        this._triggerConfigChange('transactionBlockTimeout', val);\n        this.config.transactionBlockTimeout = val;\n    }\n    /**\n     * This defines the number of blocks it requires until a transaction is considered confirmed.\n     * Default is `24`.\n     */\n    get transactionConfirmationBlocks() {\n        return this.config.transactionConfirmationBlocks;\n    }\n    /**\n     * Will set the transactionConfirmationBlocks.\n     */\n    set transactionConfirmationBlocks(val) {\n        this._triggerConfigChange('transactionConfirmationBlocks', val);\n        this.config.transactionConfirmationBlocks = val;\n    }\n    /**\n     * Used over HTTP connections. This option defines the number of seconds between Web3 calls for a receipt which confirms that a transaction was mined by the network.\n     * Default is `1000` ms.\n     */\n    get transactionPollingInterval() {\n        return this.config.transactionPollingInterval;\n    }\n    /**\n     * Will set the transactionPollingInterval.\n     */\n    set transactionPollingInterval(val) {\n        this._triggerConfigChange('transactionPollingInterval', val);\n        this.config.transactionPollingInterval = val;\n        this.transactionReceiptPollingInterval = val;\n        this.transactionConfirmationPollingInterval = val;\n    }\n    /**\n     * Used over HTTP connections. This option defines the number of seconds Web3 will wait for a receipt which confirms that a transaction was mined by the network. Note: If this method times out, the transaction may still be pending.\n     * Default is `750` seconds (12.5 minutes).\n     */\n    get transactionPollingTimeout() {\n        return this.config.transactionPollingTimeout;\n    }\n    /**\n     * Will set the transactionPollingTimeout.\n     */\n    set transactionPollingTimeout(val) {\n        this._triggerConfigChange('transactionPollingTimeout', val);\n        this.config.transactionPollingTimeout = val;\n    }\n    /**\n     * The `transactionPollingInterval` is used over HTTP connections. This option defines the number of seconds between Web3 calls for a receipt which confirms that a transaction was mined by the network.\n     * Default is `undefined`\n     */\n    get transactionReceiptPollingInterval() {\n        return this.config.transactionReceiptPollingInterval;\n    }\n    /**\n     * Will set the transactionReceiptPollingInterval\n     */\n    set transactionReceiptPollingInterval(val) {\n        this._triggerConfigChange('transactionReceiptPollingInterval', val);\n        this.config.transactionReceiptPollingInterval = val;\n    }\n    get transactionConfirmationPollingInterval() {\n        return this.config.transactionConfirmationPollingInterval;\n    }\n    set transactionConfirmationPollingInterval(val) {\n        this._triggerConfigChange('transactionConfirmationPollingInterval', val);\n        this.config.transactionConfirmationPollingInterval = val;\n    }\n    /**\n     * The blockHeaderTimeout is used over socket-based connections. This option defines the amount seconds it should wait for `'newBlockHeaders'` event before falling back to polling to fetch transaction receipt.\n     * Default is `10` seconds.\n     */\n    get blockHeaderTimeout() {\n        return this.config.blockHeaderTimeout;\n    }\n    /**\n     * Will set the blockHeaderTimeout\n     */\n    set blockHeaderTimeout(val) {\n        this._triggerConfigChange('blockHeaderTimeout', val);\n        this.config.blockHeaderTimeout = val;\n    }\n    /**\n     * The enableExperimentalFeatures is used to enable trying new experimental features that are still not fully implemented or not fully tested or still have some related issues.\n     * Default is `false` for every feature.\n     */\n    get enableExperimentalFeatures() {\n        return this.config.enableExperimentalFeatures;\n    }\n    /**\n     * Will set the enableExperimentalFeatures\n     */\n    set enableExperimentalFeatures(val) {\n        this._triggerConfigChange('enableExperimentalFeatures', val);\n        this.config.enableExperimentalFeatures = val;\n    }\n    get maxListenersWarningThreshold() {\n        return this.config.maxListenersWarningThreshold;\n    }\n    set maxListenersWarningThreshold(val) {\n        this._triggerConfigChange('maxListenersWarningThreshold', val);\n        this.setMaxListenerWarningThreshold(val);\n        this.config.maxListenersWarningThreshold = val;\n    }\n    get defaultReturnFormat() {\n        return this.config.defaultReturnFormat;\n    }\n    set defaultReturnFormat(val) {\n        this._triggerConfigChange('defaultReturnFormat', val);\n        this.config.defaultReturnFormat = val;\n    }\n    get defaultNetworkId() {\n        return this.config.defaultNetworkId;\n    }\n    set defaultNetworkId(val) {\n        this._triggerConfigChange('defaultNetworkId', val);\n        this.config.defaultNetworkId = val;\n    }\n    get defaultChain() {\n        return this.config.defaultChain;\n    }\n    set defaultChain(val) {\n        if (!isNullish(this.config.defaultCommon) &&\n            !isNullish(this.config.defaultCommon.baseChain) &&\n            val !== this.config.defaultCommon.baseChain)\n            throw new ConfigChainMismatchError(this.config.defaultChain, val);\n        this._triggerConfigChange('defaultChain', val);\n        this.config.defaultChain = val;\n    }\n    /**\n     * Will return the default hardfork. Default is `london`\n     * The default hardfork property can be one of the following:\n     * - `chainstart`\n     * - `homestead`\n     * - `dao`\n     * - `tangerineWhistle`\n     * - `spuriousDragon`\n     * - `byzantium`\n     * - `constantinople`\n     * - `petersburg`\n     * - `istanbul`\n     * - `berlin`\n     * - `london`\n     * - 'arrowGlacier',\n     * - 'tangerineWhistle',\n     * - 'muirGlacier'\n     *\n     */\n    get defaultHardfork() {\n        return this.config.defaultHardfork;\n    }\n    /**\n     * Will set the default hardfork.\n     *\n     */\n    set defaultHardfork(val) {\n        if (!isNullish(this.config.defaultCommon) &&\n            !isNullish(this.config.defaultCommon.hardfork) &&\n            val !== this.config.defaultCommon.hardfork)\n            throw new ConfigHardforkMismatchError(this.config.defaultCommon.hardfork, val);\n        this._triggerConfigChange('defaultHardfork', val);\n        this.config.defaultHardfork = val;\n    }\n    /**\n     *\n     * Will get the default common property\n     * The default common property does contain the following Common object:\n     * - `customChain` - `Object`: The custom chain properties\n     * \t- `name` - `string`: (optional) The name of the chain\n     * \t- `networkId` - `number`: Network ID of the custom chain\n     * \t- `chainId` - `number`: Chain ID of the custom chain\n     * - `baseChain` - `string`: (optional) mainnet, goerli, kovan, rinkeby, or ropsten\n     * - `hardfork` - `string`: (optional) chainstart, homestead, dao, tangerineWhistle, spuriousDragon, byzantium, constantinople, petersburg, istanbul, berlin, or london\n     * Default is `undefined`.\n     *\n     */\n    get defaultCommon() {\n        return this.config.defaultCommon;\n    }\n    /**\n     * Will set the default common property\n     *\n     */\n    set defaultCommon(val) {\n        // validation check if default hardfork is set and matches defaultCommon hardfork\n        if (!isNullish(this.config.defaultHardfork) &&\n            !isNullish(val) &&\n            !isNullish(val.hardfork) &&\n            this.config.defaultHardfork !== val.hardfork)\n            throw new ConfigHardforkMismatchError(this.config.defaultHardfork, val.hardfork);\n        if (!isNullish(this.config.defaultChain) &&\n            !isNullish(val) &&\n            !isNullish(val.baseChain) &&\n            this.config.defaultChain !== val.baseChain)\n            throw new ConfigChainMismatchError(this.config.defaultChain, val.baseChain);\n        this._triggerConfigChange('defaultCommon', val);\n        this.config.defaultCommon = val;\n    }\n    /**\n     *  Will get the ignoreGasPricing property. When true, the gasPrice, maxPriorityFeePerGas, and maxFeePerGas will not be autofilled in the transaction object.\n     *  Useful when you want wallets to handle gas pricing.\n     */\n    get ignoreGasPricing() {\n        return this.config.ignoreGasPricing;\n    }\n    set ignoreGasPricing(val) {\n        this._triggerConfigChange('ignoreGasPricing', val);\n        this.config.ignoreGasPricing = val;\n    }\n    get defaultTransactionType() {\n        return this.config.defaultTransactionType;\n    }\n    set defaultTransactionType(val) {\n        this._triggerConfigChange('defaultTransactionType', val);\n        this.config.defaultTransactionType = val;\n    }\n    get defaultMaxPriorityFeePerGas() {\n        return this.config.defaultMaxPriorityFeePerGas;\n    }\n    set defaultMaxPriorityFeePerGas(val) {\n        this._triggerConfigChange('defaultMaxPriorityFeePerGas', val);\n        this.config.defaultMaxPriorityFeePerGas = val;\n    }\n    get transactionBuilder() {\n        return this.config.transactionBuilder;\n    }\n    set transactionBuilder(val) {\n        this._triggerConfigChange('transactionBuilder', val);\n        this.config.transactionBuilder = val;\n    }\n    get transactionTypeParser() {\n        return this.config.transactionTypeParser;\n    }\n    set transactionTypeParser(val) {\n        this._triggerConfigChange('transactionTypeParser', val);\n        this.config.transactionTypeParser = val;\n    }\n    get customTransactionSchema() {\n        return this.config.customTransactionSchema;\n    }\n    set customTransactionSchema(schema) {\n        this._triggerConfigChange('customTransactionSchema', schema);\n        this.config.customTransactionSchema = schema;\n    }\n    _triggerConfigChange(config, newValue) {\n        this.emit(Web3ConfigEvent.CONFIG_CHANGE, {\n            name: config,\n            oldValue: this.config[config],\n            newValue,\n        });\n    }\n}\n//# sourceMappingURL=web3_config.js.map","// Save global object in a variable\nvar __global__ =\n(typeof globalThis !== 'undefined' && globalThis) ||\n(typeof self !== 'undefined' && self) ||\n(typeof global !== 'undefined' && global);\n// Create an object that extends from __global__ without the fetch function\nvar __globalThis__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = __global__.DOMException\n}\nF.prototype = __global__; // Needed for feature detection on whatwg-fetch's code\nreturn new F();\n})();\n// Wraps whatwg-fetch with a function scope to hijack the global object\n// \"globalThis\" that's going to be patched\n(function(globalThis) {\n\nvar irrelevant = (function (exports) {\n\n  /* eslint-disable no-prototype-builtins */\n  var g =\n    (typeof globalThis !== 'undefined' && globalThis) ||\n    (typeof self !== 'undefined' && self) ||\n    // eslint-disable-next-line no-undef\n    (typeof global !== 'undefined' && global) ||\n    {};\n\n  var support = {\n    searchParams: 'URLSearchParams' in g,\n    iterable: 'Symbol' in g && 'iterator' in Symbol,\n    blob:\n      'FileReader' in g &&\n      'Blob' in g &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in g,\n    arrayBuffer: 'ArrayBuffer' in g\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {\n      throw new TypeError('Invalid character in header field name: \"' + name + '\"')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        if (header.length != 2) {\n          throw new TypeError('Headers constructor: expected name/value pair to be length 2, found' + header.length)\n        }\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body._noBody) return\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    var match = /charset=([A-Za-z0-9_-]+)/.exec(blob.type);\n    var encoding = match ? match[1] : 'utf-8';\n    reader.readAsText(blob, encoding);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      /*\n        fetch-mock wraps the Response object in an ES6 Proxy to\n        provide useful test harness features such as flush. However, on\n        ES5 browsers without fetch or Proxy support pollyfills must be used;\n        the proxy-pollyfill is unable to proxy an attribute unless it exists\n        on the object before the Proxy is created. This change ensures\n        Response.bodyUsed exists on the instance, while maintaining the\n        semantic of setting Request.bodyUsed in the constructor before\n        _initBody is called.\n      */\n      // eslint-disable-next-line no-self-assign\n      this.bodyUsed = this.bodyUsed;\n      this._bodyInit = body;\n      if (!body) {\n        this._noBody = true;\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        var isConsumed = consumed(this);\n        if (isConsumed) {\n          return isConsumed\n        } else if (ArrayBuffer.isView(this._bodyArrayBuffer)) {\n          return Promise.resolve(\n            this._bodyArrayBuffer.buffer.slice(\n              this._bodyArrayBuffer.byteOffset,\n              this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength\n            )\n          )\n        } else {\n          return Promise.resolve(this._bodyArrayBuffer)\n        }\n      } else if (support.blob) {\n        return this.blob().then(readBlobAsArrayBuffer)\n      } else {\n        throw new Error('could not read as ArrayBuffer')\n      }\n    };\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['CONNECT', 'DELETE', 'GET', 'HEAD', 'OPTIONS', 'PATCH', 'POST', 'PUT', 'TRACE'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    if (!(this instanceof Request)) {\n      throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n    }\n\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal || (function () {\n      if ('AbortController' in g) {\n        var ctrl = new AbortController();\n        return ctrl.signal;\n      }\n    }());\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n\n    if (this.method === 'GET' || this.method === 'HEAD') {\n      if (options.cache === 'no-store' || options.cache === 'no-cache') {\n        // Search for a '_' parameter in the query string\n        var reParamSearch = /([?&])_=[^&]*/;\n        if (reParamSearch.test(this.url)) {\n          // If it already exists then set the value with the current time\n          this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime());\n        } else {\n          // Otherwise add a new '_' parameter to the end with the current time\n          var reQueryString = /\\?/;\n          this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime();\n        }\n      }\n    }\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill\n    // https://github.com/github/fetch/issues/748\n    // https://github.com/zloirock/core-js/issues/751\n    preProcessedHeaders\n      .split('\\r')\n      .map(function(header) {\n        return header.indexOf('\\n') === 0 ? header.substr(1, header.length) : header\n      })\n      .forEach(function(line) {\n        var parts = line.split(':');\n        var key = parts.shift().trim();\n        if (key) {\n          var value = parts.join(':').trim();\n          try {\n            headers.append(key, value);\n          } catch (error) {\n            console.warn('Response ' + error.message);\n          }\n        }\n      });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!(this instanceof Response)) {\n      throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n    }\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    if (this.status < 200 || this.status > 599) {\n      throw new RangeError(\"Failed to construct 'Response': The status provided (0) is outside the range [200, 599].\")\n    }\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = options.statusText === undefined ? '' : '' + options.statusText;\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 200, statusText: ''});\n    response.ok = false;\n    response.status = 0;\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = g.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        // This check if specifically for when a user fetches a file locally from the file system\n        // Only if the status is out of a normal range\n        if (request.url.indexOf('file://') === 0 && (xhr.status < 200 || xhr.status > 599)) {\n          options.status = 200;\n        } else {\n          options.status = xhr.status;\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        setTimeout(function() {\n          resolve(new Response(body, options));\n        }, 0);\n      };\n\n      xhr.onerror = function() {\n        setTimeout(function() {\n          reject(new TypeError('Network request failed'));\n        }, 0);\n      };\n\n      xhr.ontimeout = function() {\n        setTimeout(function() {\n          reject(new TypeError('Network request timed out'));\n        }, 0);\n      };\n\n      xhr.onabort = function() {\n        setTimeout(function() {\n          reject(new exports.DOMException('Aborted', 'AbortError'));\n        }, 0);\n      };\n\n      function fixUrl(url) {\n        try {\n          return url === '' && g.location.href ? g.location.href : url\n        } catch (e) {\n          return url\n        }\n      }\n\n      xhr.open(request.method, fixUrl(request.url), true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr) {\n        if (support.blob) {\n          xhr.responseType = 'blob';\n        } else if (\n          support.arrayBuffer\n        ) {\n          xhr.responseType = 'arraybuffer';\n        }\n      }\n\n      if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers || (g.Headers && init.headers instanceof g.Headers))) {\n        var names = [];\n        Object.getOwnPropertyNames(init.headers).forEach(function(name) {\n          names.push(normalizeName(name));\n          xhr.setRequestHeader(name, normalizeValue(init.headers[name]));\n        });\n        request.headers.forEach(function(value, name) {\n          if (names.indexOf(name) === -1) {\n            xhr.setRequestHeader(name, value);\n          }\n        });\n      } else {\n        request.headers.forEach(function(value, name) {\n          xhr.setRequestHeader(name, value);\n        });\n      }\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!g.fetch) {\n    g.fetch = fetch;\n    g.Headers = Headers;\n    g.Request = Request;\n    g.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  return exports;\n\n})({});\n})(__globalThis__);\n// This is a ponyfill, so...\n__globalThis__.fetch.ponyfill = true;\ndelete __globalThis__.fetch.polyfill;\n// Choose between native implementation (__global__) or custom implementation (__globalThis__)\nvar ctx = __global__.fetch ? __global__ : __globalThis__;\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport fetch from 'cross-fetch';\nimport { Web3BaseProvider, } from 'web3-types';\nimport { InvalidClientError, MethodNotImplementedError, ResponseError } from 'web3-errors';\nexport default class HttpProvider extends Web3BaseProvider {\n    constructor(clientUrl, httpProviderOptions) {\n        super();\n        if (!HttpProvider.validateClientUrl(clientUrl))\n            throw new InvalidClientError(clientUrl);\n        this.clientUrl = clientUrl;\n        this.httpProviderOptions = httpProviderOptions;\n    }\n    static validateClientUrl(clientUrl) {\n        return typeof clientUrl === 'string' ? /^http(s)?:\\/\\//i.test(clientUrl) : false;\n    }\n    /* eslint-disable class-methods-use-this */\n    getStatus() {\n        throw new MethodNotImplementedError();\n    }\n    /* eslint-disable class-methods-use-this */\n    supportsSubscriptions() {\n        return false;\n    }\n    request(payload, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const providerOptionsCombined = Object.assign(Object.assign({}, (_a = this.httpProviderOptions) === null || _a === void 0 ? void 0 : _a.providerOptions), requestOptions);\n            const response = yield fetch(this.clientUrl, Object.assign(Object.assign({}, providerOptionsCombined), { method: 'POST', headers: Object.assign(Object.assign({}, providerOptionsCombined.headers), { 'Content-Type': 'application/json' }), body: JSON.stringify(payload) }));\n            if (!response.ok) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                throw new ResponseError(yield response.json(), undefined, undefined, response.status);\n            }\n            ;\n            return (yield response.json());\n        });\n    }\n    /* eslint-disable class-methods-use-this */\n    on() {\n        throw new MethodNotImplementedError();\n    }\n    /* eslint-disable class-methods-use-this */\n    removeListener() {\n        throw new MethodNotImplementedError();\n    }\n    /* eslint-disable class-methods-use-this */\n    once() {\n        throw new MethodNotImplementedError();\n    }\n    /* eslint-disable class-methods-use-this */\n    removeAllListeners() {\n        throw new MethodNotImplementedError();\n    }\n    /* eslint-disable class-methods-use-this */\n    connect() {\n        throw new MethodNotImplementedError();\n    }\n    /* eslint-disable class-methods-use-this */\n    disconnect() {\n        throw new MethodNotImplementedError();\n    }\n    /* eslint-disable class-methods-use-this */\n    reset() {\n        throw new MethodNotImplementedError();\n    }\n    /* eslint-disable class-methods-use-this */\n    reconnect() {\n        throw new MethodNotImplementedError();\n    }\n}\nexport { HttpProvider };\n//# sourceMappingURL=index.js.map","// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\n\nvar ws = null\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket\n} else if (typeof global !== 'undefined') {\n  ws = global.WebSocket || global.MozWebSocket\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket\n}\n\nexport default ws\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport WebSocket from 'isomorphic-ws';\nimport { isNullish, SocketProvider } from 'web3-utils';\nimport { ConnectionNotOpenError } from 'web3-errors';\n/**\n * Use WebSocketProvider to connect to a Node using a WebSocket connection, i.e. over the `ws` or `wss` protocol.\n *\n * @example\n * ```ts\n * const provider = new WebSocketProvider(\n * \t\t`ws://localhost:8545`,\n * \t\t{\n * \t\t\theaders: {\n * \t\t\t\t// to provide the API key if the Node requires the key to be inside the `headers` for example:\n * \t\t\t\t'x-api-key': '<Api key>',\n * \t\t\t},\n * \t\t},\n * \t\t{\n * \t\t\tdelay: 500,\n * \t\t\tautoReconnect: true,\n * \t\t\tmaxAttempts: 10,\n * \t\t},\n * \t);\n * ```\n *\n * The second and the third parameters are both optional. And you can for example, the second parameter could be an empty object or undefined.\n *  * @example\n * ```ts\n * const provider = new WebSocketProvider(\n * \t\t`ws://localhost:8545`,\n * \t\t{},\n * \t\t{\n * \t\t\tdelay: 500,\n * \t\t\tautoReconnect: true,\n * \t\t\tmaxAttempts: 10,\n * \t\t},\n * \t);\n * ```\n */\nexport default class WebSocketProvider extends SocketProvider {\n    /**\n     * This is a class used for Web Socket connections. It extends the abstract class SocketProvider {@link SocketProvider} that extends the EIP-1193 provider {@link EIP1193Provider}.\n     * @param socketPath - The path to the Web Socket.\n     * @param socketOptions - The options for the Web Socket client.\n     * @param reconnectOptions - The options for the socket reconnection {@link ReconnectOptions}\n     */\n    // this constructor is to specify the type for `socketOptions` for a better intellisense.\n    // eslint-disable-next-line no-useless-constructor\n    constructor(socketPath, socketOptions, reconnectOptions) {\n        super(socketPath, socketOptions, reconnectOptions);\n    }\n    // eslint-disable-next-line class-methods-use-this\n    _validateProviderPath(providerUrl) {\n        return typeof providerUrl === 'string' ? /^ws(s)?:\\/\\//i.test(providerUrl) : false;\n    }\n    getStatus() {\n        if (this._socketConnection && !isNullish(this._socketConnection)) {\n            switch (this._socketConnection.readyState) {\n                case this._socketConnection.CONNECTING: {\n                    return 'connecting';\n                }\n                case this._socketConnection.OPEN: {\n                    return 'connected';\n                }\n                default: {\n                    return 'disconnected';\n                }\n            }\n        }\n        return 'disconnected';\n    }\n    _openSocketConnection() {\n        this._socketConnection = new WebSocket(this._socketPath, undefined, this._socketOptions && Object.keys(this._socketOptions).length === 0\n            ? undefined\n            : this._socketOptions);\n    }\n    _closeSocketConnection(code, data) {\n        var _a;\n        (_a = this._socketConnection) === null || _a === void 0 ? void 0 : _a.close(code, data);\n    }\n    _sendToSocket(payload) {\n        var _a;\n        if (this.getStatus() === 'disconnected') {\n            throw new ConnectionNotOpenError();\n        }\n        (_a = this._socketConnection) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(payload));\n    }\n    _parseResponses(event) {\n        return this.chunkResponseParser.parseResponse(event.data);\n    }\n    _addSocketListeners() {\n        var _a, _b, _c, _d;\n        (_a = this._socketConnection) === null || _a === void 0 ? void 0 : _a.addEventListener('open', this._onOpenHandler);\n        (_b = this._socketConnection) === null || _b === void 0 ? void 0 : _b.addEventListener('message', this._onMessageHandler);\n        (_c = this._socketConnection) === null || _c === void 0 ? void 0 : _c.addEventListener('close', e => this._onCloseHandler(e));\n        (_d = this._socketConnection) === null || _d === void 0 ? void 0 : _d.addEventListener('error', this._onErrorHandler);\n    }\n    _removeSocketListeners() {\n        var _a, _b, _c;\n        (_a = this._socketConnection) === null || _a === void 0 ? void 0 : _a.removeEventListener('message', this._onMessageHandler);\n        (_b = this._socketConnection) === null || _b === void 0 ? void 0 : _b.removeEventListener('open', this._onOpenHandler);\n        (_c = this._socketConnection) === null || _c === void 0 ? void 0 : _c.removeEventListener('close', this._onCloseHandler);\n        // note: we intentionally keep the error event listener to be able to emit it in case an error happens when closing the connection\n    }\n    _onCloseEvent(event) {\n        var _a;\n        if (this._reconnectOptions.autoReconnect &&\n            (![1000, 1001].includes(event.code) || !event.wasClean)) {\n            this._reconnect();\n            return;\n        }\n        this._clearQueues(event);\n        this._removeSocketListeners();\n        this._onDisconnect(event.code, event.reason);\n        // disconnect was successful and can safely remove error listener\n        (_a = this._socketConnection) === null || _a === void 0 ? void 0 : _a.removeEventListener('error', this._onErrorHandler);\n    }\n}\nexport { WebSocketProvider };\n//# sourceMappingURL=index.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3BaseProvider, } from 'web3-types';\nexport const isWeb3Provider = (provider) => Web3BaseProvider.isWeb3Provider(provider);\nexport const isMetaMaskProvider = (provider) => typeof provider !== 'string' &&\n    'request' in provider &&\n    provider.request.constructor.name === 'AsyncFunction' &&\n    'isMetaMask' in provider &&\n    provider.isMetaMask;\nexport const isLegacyRequestProvider = (provider) => typeof provider !== 'string' &&\n    'request' in provider &&\n    provider.request.constructor.name === 'Function';\nexport const isEIP1193Provider = (provider) => typeof provider !== 'string' &&\n    'request' in provider &&\n    provider.request.constructor.name === 'AsyncFunction';\nexport const isLegacySendProvider = (provider) => typeof provider !== 'string' && 'send' in provider;\nexport const isLegacySendAsyncProvider = (provider) => typeof provider !== 'string' && 'sendAsync' in provider;\nexport const isSupportedProvider = (provider) => provider &&\n    (isWeb3Provider(provider) ||\n        isEIP1193Provider(provider) ||\n        isLegacyRequestProvider(provider) ||\n        isLegacySendAsyncProvider(provider) ||\n        isLegacySendProvider(provider));\nexport const isSupportSubscriptions = (provider) => {\n    if (provider && 'supportsSubscriptions' in provider) {\n        return provider.supportsSubscriptions();\n    }\n    if (provider && typeof provider !== 'string' && 'on' in provider) {\n        return true;\n    }\n    return false;\n};\n//# sourceMappingURL=utils.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ContractExecutionError, InvalidResponseError, ProviderError, ResponseError, rpcErrorsMap, RpcError, } from 'web3-errors';\nimport HttpProvider from 'web3-providers-http';\nimport WSProvider from 'web3-providers-ws';\nimport { isNullish, isPromise, jsonRpc, isResponseRpcError } from 'web3-utils';\nimport { isEIP1193Provider, isLegacyRequestProvider, isLegacySendAsyncProvider, isLegacySendProvider, isWeb3Provider, } from './utils.js';\nimport { Web3EventEmitter } from './web3_event_emitter.js';\nexport var Web3RequestManagerEvent;\n(function (Web3RequestManagerEvent) {\n    Web3RequestManagerEvent[\"PROVIDER_CHANGED\"] = \"PROVIDER_CHANGED\";\n    Web3RequestManagerEvent[\"BEFORE_PROVIDER_CHANGE\"] = \"BEFORE_PROVIDER_CHANGE\";\n})(Web3RequestManagerEvent || (Web3RequestManagerEvent = {}));\nconst availableProviders = {\n    HttpProvider: HttpProvider,\n    WebsocketProvider: WSProvider,\n};\nexport class Web3RequestManager extends Web3EventEmitter {\n    constructor(provider, useRpcCallSpecification, requestManagerMiddleware) {\n        super();\n        if (!isNullish(provider)) {\n            this.setProvider(provider);\n        }\n        this.useRpcCallSpecification = useRpcCallSpecification;\n        if (!isNullish(requestManagerMiddleware))\n            this.middleware = requestManagerMiddleware;\n    }\n    /**\n     * Will return all available providers\n     */\n    static get providers() {\n        return availableProviders;\n    }\n    /**\n     * Will return the current provider.\n     *\n     * @returns Returns the current provider\n     */\n    get provider() {\n        return this._provider;\n    }\n    /**\n     * Will return all available providers\n     */\n    // eslint-disable-next-line class-methods-use-this\n    get providers() {\n        return availableProviders;\n    }\n    /**\n     * Use to set provider. Provider can be a provider instance or a string.\n     *\n     * @param provider - The provider to set\n     */\n    setProvider(provider) {\n        let newProvider;\n        // autodetect provider\n        if (provider && typeof provider === 'string' && this.providers) {\n            // HTTP\n            if (/^http(s)?:\\/\\//i.test(provider)) {\n                newProvider = new this.providers.HttpProvider(provider);\n                // WS\n            }\n            else if (/^ws(s)?:\\/\\//i.test(provider)) {\n                newProvider = new this.providers.WebsocketProvider(provider);\n            }\n            else {\n                throw new ProviderError(`Can't autodetect provider for \"${provider}\"`);\n            }\n        }\n        else if (isNullish(provider)) {\n            // In case want to unset the provider\n            newProvider = undefined;\n        }\n        else {\n            newProvider = provider;\n        }\n        this.emit(Web3RequestManagerEvent.BEFORE_PROVIDER_CHANGE, this._provider);\n        this._provider = newProvider;\n        this.emit(Web3RequestManagerEvent.PROVIDER_CHANGED, this._provider);\n        return true;\n    }\n    setMiddleware(requestManagerMiddleware) {\n        this.middleware = requestManagerMiddleware;\n    }\n    /**\n     *\n     * Will execute a request\n     *\n     * @param request - {@link Web3APIRequest} The request to send\n     *\n     * @returns The response of the request {@link ResponseType}. If there is error\n     * in the response, will throw an error\n     */\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const requestObj = Object.assign({}, request);\n            let response = yield this._sendRequest(requestObj);\n            if (!isNullish(this.middleware))\n                response = yield this.middleware.processResponse(response);\n            if (jsonRpc.isResponseWithResult(response)) {\n                return response.result;\n            }\n            throw new ResponseError(response);\n        });\n    }\n    /**\n     * Same as send, but, will execute a batch of requests\n     *\n     * @param request {@link JsonRpcBatchRequest} The batch request to send\n     */\n    sendBatch(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this._sendRequest(request);\n            return response;\n        });\n    }\n    _sendRequest(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { provider } = this;\n            if (isNullish(provider)) {\n                throw new ProviderError('Provider not available. Use `.setProvider` or `.provider=` to initialize the provider.');\n            }\n            let payload = (jsonRpc.isBatchRequest(request)\n                ? jsonRpc.toBatchPayload(request)\n                : jsonRpc.toPayload(request));\n            if (!isNullish(this.middleware)) {\n                payload = yield this.middleware.processRequest(payload);\n            }\n            if (isWeb3Provider(provider)) {\n                let response;\n                try {\n                    response = yield provider.request(payload);\n                }\n                catch (error) {\n                    // Check if the provider throw an error instead of reject with error\n                    response = error;\n                }\n                return this._processJsonRpcResponse(payload, response, { legacy: false, error: false });\n            }\n            if (isEIP1193Provider(provider)) {\n                return provider\n                    .request(payload)\n                    .then(res => this._processJsonRpcResponse(payload, res, {\n                    legacy: true,\n                    error: false,\n                }))\n                    .catch(error => this._processJsonRpcResponse(payload, error, { legacy: true, error: true }));\n            }\n            // TODO: This could be deprecated and removed.\n            if (isLegacyRequestProvider(provider)) {\n                return new Promise((resolve, reject) => {\n                    const rejectWithError = (err) => {\n                        reject(this._processJsonRpcResponse(payload, err, {\n                            legacy: true,\n                            error: true,\n                        }));\n                    };\n                    const resolveWithResponse = (response) => resolve(this._processJsonRpcResponse(payload, response, {\n                        legacy: true,\n                        error: false,\n                    }));\n                    const result = provider.request(payload, \n                    // a callback that is expected to be called after getting the response:\n                    (err, response) => {\n                        if (err) {\n                            return rejectWithError(err);\n                        }\n                        return resolveWithResponse(response);\n                    });\n                    // Some providers, that follow a previous drafted version of EIP1193, has a `request` function\n                    //\tthat is not defined as `async`, but it returns a promise.\n                    // Such providers would not be picked with if(isEIP1193Provider(provider)) above\n                    //\tbecause the `request` function was not defined with `async` and so the function definition is not `AsyncFunction`.\n                    // Like this provider: https://github.dev/NomicFoundation/hardhat/blob/62bea2600785595ba36f2105564076cf5cdf0fd8/packages/hardhat-core/src/internal/core/providers/backwards-compatibility.ts#L19\n                    // So check if the returned result is a Promise, and resolve with it accordingly.\n                    // Note: in this case we expect the callback provided above to never be called.\n                    if (isPromise(result)) {\n                        const responsePromise = result;\n                        responsePromise.then(resolveWithResponse).catch(error => {\n                            try {\n                                // Attempt to process the error response\n                                const processedError = this._processJsonRpcResponse(payload, error, { legacy: true, error: true });\n                                reject(processedError);\n                            }\n                            catch (processingError) {\n                                // Catch any errors that occur during the error processing\n                                reject(processingError);\n                            }\n                        });\n                    }\n                });\n            }\n            // TODO: This could be deprecated and removed.\n            if (isLegacySendProvider(provider)) {\n                return new Promise((resolve, reject) => {\n                    provider.send(payload, (err, response) => {\n                        if (err) {\n                            return reject(this._processJsonRpcResponse(payload, err, {\n                                legacy: true,\n                                error: true,\n                            }));\n                        }\n                        if (isNullish(response)) {\n                            throw new ResponseError({}, 'Got a \"nullish\" response from provider.');\n                        }\n                        return resolve(this._processJsonRpcResponse(payload, response, {\n                            legacy: true,\n                            error: false,\n                        }));\n                    });\n                });\n            }\n            // TODO: This could be deprecated and removed.\n            if (isLegacySendAsyncProvider(provider)) {\n                return provider\n                    .sendAsync(payload)\n                    .then(response => this._processJsonRpcResponse(payload, response, { legacy: true, error: false }))\n                    .catch(error => this._processJsonRpcResponse(payload, error, {\n                    legacy: true,\n                    error: true,\n                }));\n            }\n            throw new ProviderError('Provider does not have a request or send method to use.');\n        });\n    }\n    // eslint-disable-next-line class-methods-use-this\n    _processJsonRpcResponse(payload, response, { legacy, error }) {\n        if (isNullish(response)) {\n            return this._buildResponse(payload, \n            // Some providers uses \"null\" as valid empty response\n            // eslint-disable-next-line no-null/no-null\n            null, error);\n        }\n        // This is the majority of the cases so check these first\n        // A valid JSON-RPC response with error object\n        if (jsonRpc.isResponseWithError(response)) {\n            // check if its an rpc error\n            if (this.useRpcCallSpecification &&\n                isResponseRpcError(response)) {\n                const rpcErrorResponse = response;\n                // check if rpc error flag is on and response error code match an EIP-1474 or a standard rpc error code\n                if (rpcErrorsMap.get(rpcErrorResponse.error.code)) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    const Err = rpcErrorsMap.get(rpcErrorResponse.error.code).error;\n                    throw new Err(rpcErrorResponse);\n                }\n                else {\n                    throw new RpcError(rpcErrorResponse);\n                }\n            }\n            else if (!Web3RequestManager._isReverted(response)) {\n                throw new InvalidResponseError(response, payload);\n            }\n        }\n        // This is the majority of the cases so check these first\n        // A valid JSON-RPC response with result object\n        if (jsonRpc.isResponseWithResult(response)) {\n            return response;\n        }\n        if (response instanceof Error) {\n            Web3RequestManager._isReverted(response);\n            throw response;\n        }\n        if (!legacy && jsonRpc.isBatchRequest(payload) && jsonRpc.isBatchResponse(response)) {\n            return response;\n        }\n        if (legacy && !error && jsonRpc.isBatchRequest(payload)) {\n            return response;\n        }\n        if (legacy && error && jsonRpc.isBatchRequest(payload)) {\n            // In case of error batch response we don't want to throw Invalid response\n            throw response;\n        }\n        if (legacy &&\n            !jsonRpc.isResponseWithError(response) &&\n            !jsonRpc.isResponseWithResult(response)) {\n            return this._buildResponse(payload, response, error);\n        }\n        if (jsonRpc.isBatchRequest(payload) && !Array.isArray(response)) {\n            throw new ResponseError(response, 'Got normal response for a batch request.');\n        }\n        if (!jsonRpc.isBatchRequest(payload) && Array.isArray(response)) {\n            throw new ResponseError(response, 'Got batch response for a normal request.');\n        }\n        throw new ResponseError(response, 'Invalid response');\n    }\n    static _isReverted(response) {\n        let error;\n        if (jsonRpc.isResponseWithError(response)) {\n            error = response.error;\n        }\n        else if (response instanceof Error) {\n            error = response;\n        }\n        // This message means that there was an error while executing the code of the smart contract\n        // However, more processing will happen at a higher level to decode the error data,\n        //\taccording to the Error ABI, if it was available as of EIP-838.\n        if (error === null || error === void 0 ? void 0 : error.message.includes('revert'))\n            throw new ContractExecutionError(error);\n        return false;\n    }\n    // Need to use same types as _processJsonRpcResponse so have to declare as instance method\n    // eslint-disable-next-line class-methods-use-this\n    _buildResponse(payload, response, error) {\n        const res = {\n            jsonrpc: '2.0',\n            // eslint-disable-next-line no-nested-ternary\n            id: jsonRpc.isBatchRequest(payload)\n                ? payload[0].id\n                : 'id' in payload\n                    ? payload.id\n                    : // Have to use the null here explicitly\n                        // eslint-disable-next-line no-null/no-null\n                        null,\n        };\n        if (error) {\n            return Object.assign(Object.assign({}, res), { error: response });\n        }\n        return Object.assign(Object.assign({}, res), { result: response });\n    }\n}\n//# sourceMappingURL=web3_request_manager.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_RETURN_FORMAT, } from 'web3-types';\nimport { ProviderError, SubscriptionError } from 'web3-errors';\nimport { isNullish } from 'web3-utils';\nimport { isSupportSubscriptions } from './utils.js';\nimport { Web3RequestManagerEvent } from './web3_request_manager.js';\nexport class Web3SubscriptionManager {\n    constructor(requestManager, registeredSubscriptions, tolerateUnlinkedSubscription = false) {\n        this.requestManager = requestManager;\n        this.registeredSubscriptions = registeredSubscriptions;\n        this.tolerateUnlinkedSubscription = tolerateUnlinkedSubscription;\n        this._subscriptions = new Map();\n        this.requestManager.on(Web3RequestManagerEvent.BEFORE_PROVIDER_CHANGE, () => __awaiter(this, void 0, void 0, function* () {\n            yield this.unsubscribe();\n        }));\n        this.requestManager.on(Web3RequestManagerEvent.PROVIDER_CHANGED, () => {\n            this.clear();\n            this.listenToProviderEvents();\n        });\n        this.listenToProviderEvents();\n    }\n    listenToProviderEvents() {\n        const providerAsWebProvider = this.requestManager.provider;\n        if (!this.requestManager.provider ||\n            (typeof (providerAsWebProvider === null || providerAsWebProvider === void 0 ? void 0 : providerAsWebProvider.supportsSubscriptions) === 'function' &&\n                !(providerAsWebProvider === null || providerAsWebProvider === void 0 ? void 0 : providerAsWebProvider.supportsSubscriptions()))) {\n            return;\n        }\n        if (typeof this.requestManager.provider.on === 'function') {\n            if (typeof this.requestManager.provider.request === 'function') {\n                // Listen to provider messages and data\n                this.requestManager.provider.on('message', \n                // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-argument\n                (message) => this.messageListener(message));\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-argument\n                providerAsWebProvider.on('data', (data) => this.messageListener(data));\n            }\n        }\n    }\n    messageListener(data) {\n        var _a, _b, _c;\n        if (!data) {\n            throw new SubscriptionError('Should not call messageListener with no data. Type was');\n        }\n        const subscriptionId = ((_a = data.params) === null || _a === void 0 ? void 0 : _a.subscription) ||\n            ((_b = data.data) === null || _b === void 0 ? void 0 : _b.subscription) ||\n            ((_c = data.id) === null || _c === void 0 ? void 0 : _c.toString(16));\n        // Process if the received data is related to a subscription\n        if (subscriptionId) {\n            const sub = this._subscriptions.get(subscriptionId);\n            sub === null || sub === void 0 ? void 0 : sub.processSubscriptionData(data);\n        }\n    }\n    /**\n     * Will create a new subscription\n     *\n     * @param name - The subscription you want to subscribe to\n     * @param args - Optional additional parameters, depending on the subscription type\n     * @param returnFormat- ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     *\n     * Will subscribe to a specific topic (note: name)\n     * @returns The subscription object\n     */\n    subscribe(name_1, args_1) {\n        return __awaiter(this, arguments, void 0, function* (name, args, returnFormat = DEFAULT_RETURN_FORMAT) {\n            const Klass = this.registeredSubscriptions[name];\n            if (!Klass) {\n                throw new SubscriptionError('Invalid subscription type');\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            const subscription = new Klass(args !== null && args !== void 0 ? args : undefined, {\n                subscriptionManager: this,\n                returnFormat,\n                // eslint.disable-next-line @typescript-eslint/no-unsafe-any\n            });\n            yield this.addSubscription(subscription);\n            return subscription;\n        });\n    }\n    /**\n     * Will returns all subscriptions.\n     */\n    get subscriptions() {\n        return this._subscriptions;\n    }\n    /**\n     *\n     * Adds an instance of {@link Web3Subscription} and subscribes to it\n     *\n     * @param sub - A {@link Web3Subscription} object\n     */\n    addSubscription(sub) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.requestManager.provider) {\n                throw new ProviderError('Provider not available');\n            }\n            if (!this.supportsSubscriptions()) {\n                throw new SubscriptionError('The current provider does not support subscriptions');\n            }\n            if (sub.id && this._subscriptions.has(sub.id)) {\n                throw new SubscriptionError(`Subscription with id \"${sub.id}\" already exists`);\n            }\n            yield sub.sendSubscriptionRequest();\n            if (isNullish(sub.id)) {\n                throw new SubscriptionError('Subscription is not subscribed yet.');\n            }\n            this._subscriptions.set(sub.id, sub);\n            return sub.id;\n        });\n    }\n    /**\n     * Will clear a subscription\n     *\n     * @param id - The subscription of type {@link Web3Subscription}  to remove\n     */\n    removeSubscription(sub) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { id } = sub;\n            if (isNullish(id)) {\n                throw new SubscriptionError('Subscription is not subscribed yet. Or, had already been unsubscribed but not through the Subscription Manager.');\n            }\n            if (!this._subscriptions.has(id) && !this.tolerateUnlinkedSubscription) {\n                throw new SubscriptionError(`Subscription with id \"${id.toString()}\" does not exists`);\n            }\n            yield sub.sendUnsubscribeRequest();\n            this._subscriptions.delete(id);\n            return id;\n        });\n    }\n    /**\n     * Will unsubscribe all subscriptions that fulfill the condition\n     *\n     * @param condition - A function that access and `id` and a `subscription` and return `true` or `false`\n     * @returns An array of all the un-subscribed subscriptions\n     */\n    unsubscribe(condition) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = [];\n            for (const [id, sub] of this.subscriptions.entries()) {\n                if (!condition || (typeof condition === 'function' && condition({ id, sub }))) {\n                    result.push(this.removeSubscription(sub));\n                }\n            }\n            return Promise.all(result);\n        });\n    }\n    /**\n     * Clears all subscriptions\n     */\n    clear() {\n        this._subscriptions.clear();\n    }\n    /**\n     * Check whether the current provider supports subscriptions.\n     *\n     * @returns `true` or `false` depending on if the current provider supports subscriptions\n     */\n    supportsSubscriptions() {\n        return isNullish(this.requestManager.provider)\n            ? false\n            : isSupportSubscriptions(this.requestManager.provider);\n    }\n}\n//# sourceMappingURL=web3_subscription_manager.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// eslint-disable-next-line max-classes-per-file\nimport { DEFAULT_RETURN_FORMAT, } from 'web3-types';\nimport { jsonRpc } from 'web3-utils';\n// eslint-disable-next-line import/no-cycle\nimport { Web3SubscriptionManager } from './web3_subscription_manager.js';\nimport { Web3EventEmitter } from './web3_event_emitter.js';\nexport class Web3Subscription extends Web3EventEmitter {\n    constructor(args, options) {\n        var _a;\n        super();\n        this.args = args;\n        const { requestManager } = options;\n        const { subscriptionManager } = options;\n        if (requestManager) {\n            // eslint-disable-next-line deprecation/deprecation\n            this._subscriptionManager = new Web3SubscriptionManager(requestManager, {}, true);\n        }\n        else {\n            this._subscriptionManager = subscriptionManager;\n        }\n        this._returnFormat = (_a = options === null || options === void 0 ? void 0 : options.returnFormat) !== null && _a !== void 0 ? _a : DEFAULT_RETURN_FORMAT;\n    }\n    get id() {\n        return this._id;\n    }\n    get lastBlock() {\n        return this._lastBlock;\n    }\n    subscribe() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._subscriptionManager.addSubscription(this);\n        });\n    }\n    processSubscriptionData(data) {\n        var _a, _b;\n        if (data === null || data === void 0 ? void 0 : data.data) {\n            // for EIP-1193 provider\n            this._processSubscriptionResult((_b = (_a = data === null || data === void 0 ? void 0 : data.data) === null || _a === void 0 ? void 0 : _a.result) !== null && _b !== void 0 ? _b : data === null || data === void 0 ? void 0 : data.data);\n        }\n        else if (data &&\n            jsonRpc.isResponseWithNotification(data)) {\n            this._processSubscriptionResult(data === null || data === void 0 ? void 0 : data.params.result);\n        }\n    }\n    sendSubscriptionRequest() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._id = yield this._subscriptionManager.requestManager.send({\n                method: 'eth_subscribe',\n                params: this._buildSubscriptionParams(),\n            });\n            this.emit('connected', this._id);\n            return this._id;\n        });\n    }\n    get returnFormat() {\n        return this._returnFormat;\n    }\n    get subscriptionManager() {\n        return this._subscriptionManager;\n    }\n    resubscribe() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.unsubscribe();\n            yield this.subscribe();\n        });\n    }\n    unsubscribe() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.id) {\n                return;\n            }\n            yield this._subscriptionManager.removeSubscription(this);\n        });\n    }\n    sendUnsubscribeRequest() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._subscriptionManager.requestManager.send({\n                method: 'eth_unsubscribe',\n                params: [this.id],\n            });\n            this._id = undefined;\n        });\n    }\n    // eslint-disable-next-line class-methods-use-this\n    formatSubscriptionResult(data) {\n        return data;\n    }\n    _processSubscriptionResult(data) {\n        this.emit('data', this.formatSubscriptionResult(data));\n    }\n    _processSubscriptionError(error) {\n        this.emit('error', error);\n    }\n    // eslint-disable-next-line class-methods-use-this\n    _buildSubscriptionParams() {\n        // This should be overridden in the subclass\n        throw new Error('Implement in the child class');\n    }\n}\n//# sourceMappingURL=web3_subscriptions.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Web3BaseWallet } from 'web3-types';\nimport { isNullish } from 'web3-validator';\n/**\n * Wallet is an in memory `wallet` that can hold multiple accounts.\n * These accounts can be used when using web3.eth.sendTransaction() or web3.eth.contract.methods.contractfunction().send();\n *\n * For using Wallet functionality, install Web3 package using `npm i web3` or `yarn add web3`.\n * After that, Wallet functionality will be available as mentioned below.\n *\n * ```ts\n * import { Web3 } from 'web3';\n * const web3 = new Web3('http://127.0.0.1:7545');\n *\n * const wallet = await web3.eth.accounts.wallet.create(2);\n *\n * const signature = wallet.at(0).sign(\"Test Data\"); // use wallet\n *\n * // fund account before sending following transaction ...\n *\n * const receipt = await web3.eth.sendTransaction({ // internally sign transaction using wallet\n *    from: wallet.at(0).address,\n *    to: \"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\n *    value: 1\n *    //....\n * });\n * ```\n */\nexport class Wallet extends Web3BaseWallet {\n    constructor() {\n        super(...arguments);\n        this._addressMap = new Map();\n        this._defaultKeyName = 'web3js_wallet';\n    }\n    /**\n     * Get the storage object of the browser\n     *\n     * @returns the storage\n     */\n    static getStorage() {\n        let storage;\n        try {\n            storage = window.localStorage;\n            const x = '__storage_test__';\n            storage.setItem(x, x);\n            storage.removeItem(x);\n            return storage;\n        }\n        catch (e) {\n            return e &&\n                // everything except Firefox\n                (e.code === 22 ||\n                    // Firefox\n                    e.code === 1014 ||\n                    // test name field too, because code might not be present\n                    // everything except Firefox\n                    e.name === 'QuotaExceededError' ||\n                    // Firefox\n                    e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n                // acknowledge QuotaExceededError only if there's something already stored\n                !isNullish(storage) &&\n                storage.length !== 0\n                ? storage\n                : undefined;\n        }\n    }\n    /**\n     * Generates one or more accounts in the wallet. If wallets already exist they will not be overridden.\n     *\n     * @param numberOfAccounts - Number of accounts to create. Leave empty to create an empty wallet.\n     * @returns The wallet\n     * ```ts\n     * web3.eth.accounts.wallet.create(2)\n     * > Wallet(2) [\n     *   {\n     *     address: '0xde38310a42B751AE57d30cFFF4a0A3c52A442fCE',\n     *     privateKey: '0x6422c9d28efdcbee93c1d32a5fc6fd6fa081b985487885296cf8c9bbb5872600',\n     *     signTransaction: [Function: signTransaction],\n     *     sign: [Function: sign],\n     *     encrypt: [Function: encrypt]\n     *   },\n     *   {\n     *     address: '0x766BF755246d924B1d017Fdb5390f38a60166691',\n     *     privateKey: '0x756530f13c0eb636ebdda655335f5dea9921e3362e2e588b0ad59e556f7751f0',\n     *     signTransaction: [Function: signTransaction],\n     *     sign: [Function: sign],\n     *     encrypt: [Function: encrypt]\n     *   },\n     *   _accountProvider: {\n     *     create: [Function: create],\n     *     privateKeyToAccount: [Function: privateKeyToAccount],\n     *     decrypt: [Function: decrypt]\n     *   },\n     *   _addressMap: Map(2) {\n     *     '0xde38310a42b751ae57d30cfff4a0a3c52a442fce' => 0,\n     *     '0x766bf755246d924b1d017fdb5390f38a60166691' => 1\n     *   },\n     *   _defaultKeyName: 'web3js_wallet'\n     * ]\n     *\n     * ```\n     */\n    create(numberOfAccounts) {\n        for (let i = 0; i < numberOfAccounts; i += 1) {\n            this.add(this._accountProvider.create());\n        }\n        return this;\n    }\n    /**\n     * Adds an account using a private key or account object to the wallet.\n     *\n     * @param account - A private key or account object\n     * @returns The wallet\n     *\n     * ```ts\n     * web3.eth.accounts.wallet.add('0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387');\n     * > Wallet(1) [\n     *   {\n     *     address: '0x85D70633b90e03e0276B98880286D0D055685ed7',\n     *     privateKey: '0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387',\n     *     signTransaction: [Function: signTransaction],\n     *     sign: [Function: sign],\n     *     encrypt: [Function: encrypt]\n     *   },\n     *   _accountProvider: {\n     *     create: [Function: create],\n     *     privateKeyToAccount: [Function: privateKeyToAccount],\n     *     decrypt: [Function: decrypt]\n     *   },\n     *   _addressMap: Map(1) { '0x85d70633b90e03e0276b98880286d0d055685ed7' => 0 },\n     *   _defaultKeyName: 'web3js_wallet'\n     * ]\n     * ```\n     */\n    add(account) {\n        var _a;\n        if (typeof account === 'string') {\n            return this.add(this._accountProvider.privateKeyToAccount(account));\n        }\n        let index = this.length;\n        const existAccount = this.get(account.address);\n        if (existAccount) {\n            console.warn(`Account ${account.address.toLowerCase()} already exists.`);\n            index = (_a = this._addressMap.get(account.address.toLowerCase())) !== null && _a !== void 0 ? _a : index;\n        }\n        this._addressMap.set(account.address.toLowerCase(), index);\n        this[index] = account;\n        return this;\n    }\n    /**\n     * Get the account of the wallet with either the index or public address.\n     *\n     * @param addressOrIndex - A string of the address or number index within the wallet.\n     * @returns The account object or undefined if the account doesn't exist\n     */\n    get(addressOrIndex) {\n        if (typeof addressOrIndex === 'string') {\n            const index = this._addressMap.get(addressOrIndex.toLowerCase());\n            if (!isNullish(index)) {\n                return this[index];\n            }\n            return undefined;\n        }\n        return this[addressOrIndex];\n    }\n    /**\n     * Removes an account from the wallet.\n     *\n     * @param addressOrIndex - The account address, or index in the wallet.\n     * @returns true if the wallet was removed. false if it couldn't be found.\n     * ```ts\n     * web3.eth.accounts.wallet.add('0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387');\n     *\n     * web3.eth.accounts.wallet.remove('0x85D70633b90e03e0276B98880286D0D055685ed7');\n     * > true\n     * web3.eth.accounts.wallet\n     * > Wallet(0) [\n     * _accountProvider: {\n     *   create: [Function: create],\n     *   privateKeyToAccount: [Function: privateKeyToAccount],\n     *   decrypt: [Function: decrypt]\n     * },\n     * _addressMap: Map(0) {},\n     * _defaultKeyName: 'web3js_wallet'\n     * ]\n     * ```\n     */\n    remove(addressOrIndex) {\n        if (typeof addressOrIndex === 'string') {\n            const index = this._addressMap.get(addressOrIndex.toLowerCase());\n            if (isNullish(index)) {\n                return false;\n            }\n            this._addressMap.delete(addressOrIndex.toLowerCase());\n            this.splice(index, 1);\n            return true;\n        }\n        if (this[addressOrIndex]) {\n            this.splice(addressOrIndex, 1);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Securely empties the wallet and removes all its accounts.\n     * Use this with *caution as it will remove all accounts stored in local wallet.\n     *\n     * @returns The wallet object\n     * ```ts\n     *\n     * web3.eth.accounts.wallet.clear();\n     * > Wallet(0) [\n     * _accountProvider: {\n     *   create: [Function: create],\n     *   privateKeyToAccount: [Function: privateKeyToAccount],\n     *   decrypt: [Function: decrypt]\n     * },\n     * _addressMap: Map(0) {},\n     * _defaultKeyName: 'web3js_wallet'\n     * ]\n     * ```\n     */\n    clear() {\n        this._addressMap.clear();\n        // Setting length clears the Array in JS.\n        this.length = 0;\n        return this;\n    }\n    /**\n     * Encrypts all wallet accounts to an array of encrypted keystore v3 objects.\n     *\n     * @param password - The password which will be used for encryption\n     * @param options - encryption options\n     * @returns An array of the encrypted keystore v3.\n     *\n     * ```ts\n     * web3.eth.accounts.wallet.create(1)\n     * web3.eth.accounts.wallet.encrypt(\"abc\").then(console.log);\n     * > [\n     * '{\"version\":3,\"id\":\"fa46e213-a7c3-4844-b903-dd14d39cc7db\",\n     * \"address\":\"fa3e41a401609103c241431cbdee8623ae2a321a\",\"crypto\":\n     * {\"ciphertext\":\"8d179a911d6146ad2924e86bf493ed89b8ff3596ffec0816e761c542016ab13c\",\n     * \"cipherparams\":{\"iv\":\"acc888c6cf4a19b86846cef0185a7164\"},\"cipher\":\"aes-128-ctr\",\n     * \"kdf\":\"scrypt\",\"kdfparams\":{\"n\":8192,\"r\":8,\"p\":1,\"dklen\":32,\"salt\":\"6a743c9b367d15f4758e4f3f3378ff0fd443708d1c64854e07588ea5331823ae\"},\n     * \"mac\":\"410544c8307e3691fda305eb3722d82c3431f212a87daa119a21587d96698b57\"}}'\n     * ]\n     * ```\n     */\n    encrypt(password, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Promise.all(this.map((account) => __awaiter(this, void 0, void 0, function* () { return account.encrypt(password, options); })));\n        });\n    }\n    /**\n     * Decrypts keystore v3 objects.\n     *\n     * @param encryptedWallets - An array of encrypted keystore v3 objects to decrypt\n     * @param password - The password to encrypt with\n     * @param options - decrypt options for the wallets\n     * @returns The decrypted wallet object\n     *\n     * ```ts\n     * web3.eth.accounts.wallet.decrypt([\n     * { version: 3,\n     * id: '83191a81-aaca-451f-b63d-0c5f3b849289',\n     * address: '06f702337909c06c82b09b7a22f0a2f0855d1f68',\n     * crypto:\n     * { ciphertext: '7d34deae112841fba86e3e6cf08f5398dda323a8e4d29332621534e2c4069e8d',\n     *   cipherparams: { iv: '497f4d26997a84d570778eae874b2333' },\n     *   cipher: 'aes-128-ctr',\n     *   kdf: 'scrypt',\n     *   kdfparams:\n     *    { dklen: 32,\n     *      salt: '208dd732a27aa4803bb760228dff18515d5313fd085bbce60594a3919ae2d88d',\n     *      n: 262144,\n     *      r: 8,\n     *      p: 1 },\n     *   mac: '0062a853de302513c57bfe3108ab493733034bf3cb313326f42cf26ea2619cf9' } },\n     * { version: 3,\n     * id: '7d6b91fa-3611-407b-b16b-396efb28f97e',\n     * address: 'b5d89661b59a9af0b34f58d19138baa2de48baaf',\n     * crypto:\n     * { ciphertext: 'cb9712d1982ff89f571fa5dbef447f14b7e5f142232bd2a913aac833730eeb43',\n     *   cipherparams: { iv: '8cccb91cb84e435437f7282ec2ffd2db' },\n     *   cipher: 'aes-128-ctr',\n     *   kdf: 'scrypt',\n     *   kdfparams:\n     *    { dklen: 32,\n     *      salt: '08ba6736363c5586434cd5b895e6fe41ea7db4785bd9b901dedce77a1514e8b8',\n     *      n: 262144,\n     *      r: 8,\n     *      p: 1 },\n     *   mac: 'd2eb068b37e2df55f56fa97a2bf4f55e072bef0dd703bfd917717d9dc54510f0' } }\n     * ], 'test').then(console.log)\n     * > Wallet {\n     *   _accountProvider: {\n     *     create: [Function: create],\n     *     privateKeyToAccount: [Function: privateKeyToAccount],\n     *     decrypt: [Function: decrypt]\n     *   },\n     *   _defaultKeyName: 'web3js_wallet',\n     *   _accounts: {\n     *     '0x85d70633b90e03e0276b98880286d0d055685ed7': {\n     *       address: '0x85D70633b90e03e0276B98880286D0D055685ed7',\n     *       privateKey: '0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387',\n     *       signTransaction: [Function: signTransaction],\n     *       sign: [Function: sign],\n     *       encrypt: [Function: encrypt]\n     *     },\n     *     '0x06f702337909c06c82b09b7a22f0a2f0855d1f68': {\n     *       address: '0x06F702337909C06C82B09B7A22F0a2f0855d1F68',\n     *       privateKey: '87a51da18900da7398b3bab03996833138f269f8f66dd1237b98df6b9ce14573',\n     *       signTransaction: [Function: signTransaction],\n     *       sign: [Function: sign],\n     *       encrypt: [Function: encrypt]\n     *     },\n     *     '0xb5d89661b59a9af0b34f58d19138baa2de48baaf': {\n     *       address: '0xB5d89661B59a9aF0b34f58D19138bAa2de48BAaf',\n     *       privateKey: '7ee61c5282979aae9dd795bb6a54e8bdc2bfe009acb64eb9a67322eec3b3da6e',\n     *       signTransaction: [Function: signTransaction],\n     *       sign: [Function: sign],\n     *       encrypt: [Function: encrypt]\n     *     }\n     *   }\n     * }\n     * ```\n     */\n    decrypt(encryptedWallets, password, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const results = yield Promise.all(encryptedWallets.map((wallet) => __awaiter(this, void 0, void 0, function* () { return this._accountProvider.decrypt(wallet, password, options); })));\n            for (const res of results) {\n                this.add(res);\n            }\n            return this;\n        });\n    }\n    /**\n     * Stores the wallet encrypted and as string in local storage.\n     * **__NOTE:__** Browser only\n     *\n     * @param password - The password to encrypt the wallet\n     * @param keyName - (optional) The key used for the local storage position, defaults to `\"web3js_wallet\"`.\n     * @returns Will return boolean value true if saved properly\n     * ```ts\n     * web3.eth.accounts.wallet.save('test#!$');\n     * >true\n     * ```\n     */\n    save(password, keyName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const storage = Wallet.getStorage();\n            if (!storage) {\n                throw new Error('Local storage not available.');\n            }\n            storage.setItem(keyName !== null && keyName !== void 0 ? keyName : this._defaultKeyName, JSON.stringify(yield this.encrypt(password)));\n            return true;\n        });\n    }\n    /**\n     * Loads a wallet from local storage and decrypts it.\n     * **__NOTE:__** Browser only\n     *\n     * @param password - The password to decrypt the wallet.\n     * @param keyName - (optional)The key used for local storage position, defaults to `web3js_wallet\"`\n     * @returns Returns the wallet object\n     *\n     * ```ts\n     * web3.eth.accounts.wallet.save('test#!$');\n     * > true\n     * web3.eth.accounts.wallet.load('test#!$');\n     * { defaultKeyName: \"web3js_wallet\",\n     *   length: 0,\n     *   _accounts: Accounts {_requestManager: RequestManager, givenProvider: Proxy, providers: {…}, _provider: WebsocketProvider, …},\n     *   [[Prototype]]: Object\n     * }\n     * ```\n     */\n    load(password, keyName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const storage = Wallet.getStorage();\n            if (!storage) {\n                throw new Error('Local storage not available.');\n            }\n            const keystore = storage.getItem(keyName !== null && keyName !== void 0 ? keyName : this._defaultKeyName);\n            if (keystore) {\n                yield this.decrypt(JSON.parse(keystore) || [], password);\n            }\n            return this;\n        });\n    }\n}\n//# sourceMappingURL=wallet.js.map","import { crypto as cr } from \"@noble/hashes/crypto\";\nimport { concatBytes, equalsBytes } from \"./utils.js\";\nconst crypto = { web: cr };\nfunction validateOpt(key, iv, mode) {\n    if (!mode.startsWith(\"aes-\")) {\n        throw new Error(`AES submodule doesn't support mode ${mode}`);\n    }\n    if (iv.length !== 16) {\n        throw new Error(\"AES: wrong IV length\");\n    }\n    if ((mode.startsWith(\"aes-128\") && key.length !== 16) ||\n        (mode.startsWith(\"aes-256\") && key.length !== 32)) {\n        throw new Error(\"AES: wrong key length\");\n    }\n}\nasync function getBrowserKey(mode, key, iv) {\n    if (!crypto.web) {\n        throw new Error(\"Browser crypto not available.\");\n    }\n    let keyMode;\n    if ([\"aes-128-cbc\", \"aes-256-cbc\"].includes(mode)) {\n        keyMode = \"cbc\";\n    }\n    if ([\"aes-128-ctr\", \"aes-256-ctr\"].includes(mode)) {\n        keyMode = \"ctr\";\n    }\n    if (!keyMode) {\n        throw new Error(\"AES: unsupported mode\");\n    }\n    const wKey = await crypto.web.subtle.importKey(\"raw\", key, { name: `AES-${keyMode.toUpperCase()}`, length: key.length * 8 }, true, [\"encrypt\", \"decrypt\"]);\n    // node.js uses whole 128 bit as a counter, without nonce, instead of 64 bit\n    // recommended by NIST SP800-38A\n    return [wKey, { name: `aes-${keyMode}`, iv, counter: iv, length: 128 }];\n}\nexport async function encrypt(msg, key, iv, mode = \"aes-128-ctr\", pkcs7PaddingEnabled = true) {\n    validateOpt(key, iv, mode);\n    if (crypto.web) {\n        const [wKey, wOpt] = await getBrowserKey(mode, key, iv);\n        const cipher = await crypto.web.subtle.encrypt(wOpt, wKey, msg);\n        // Remove PKCS7 padding on cbc mode by stripping end of message\n        let res = new Uint8Array(cipher);\n        if (!pkcs7PaddingEnabled && wOpt.name === \"aes-cbc\" && !(msg.length % 16)) {\n            res = res.slice(0, -16);\n        }\n        return res;\n    }\n    else if (crypto.node) {\n        const cipher = crypto.node.createCipheriv(mode, key, iv);\n        cipher.setAutoPadding(pkcs7PaddingEnabled);\n        return concatBytes(cipher.update(msg), cipher.final());\n    }\n    else {\n        throw new Error(\"The environment doesn't have AES module\");\n    }\n}\nasync function getPadding(cypherText, key, iv, mode) {\n    const lastBlock = cypherText.slice(-16);\n    for (let i = 0; i < 16; i++) {\n        // Undo xor of iv and fill with lastBlock ^ padding (16)\n        lastBlock[i] ^= iv[i] ^ 16;\n    }\n    const res = await encrypt(lastBlock, key, iv, mode);\n    return res.slice(0, 16);\n}\nexport async function decrypt(cypherText, key, iv, mode = \"aes-128-ctr\", pkcs7PaddingEnabled = true) {\n    validateOpt(key, iv, mode);\n    if (crypto.web) {\n        const [wKey, wOpt] = await getBrowserKey(mode, key, iv);\n        // Add empty padding so Chrome will correctly decrypt message\n        if (!pkcs7PaddingEnabled && wOpt.name === \"aes-cbc\") {\n            const padding = await getPadding(cypherText, key, iv, mode);\n            cypherText = concatBytes(cypherText, padding);\n        }\n        const msg = await crypto.web.subtle.decrypt(wOpt, wKey, cypherText);\n        const msgBytes = new Uint8Array(msg);\n        // Safari always ignores padding (if no padding -> broken message)\n        if (wOpt.name === \"aes-cbc\") {\n            const encrypted = await encrypt(msgBytes, key, iv, mode);\n            if (!equalsBytes(encrypted, cypherText)) {\n                throw new Error(\"AES: wrong padding\");\n            }\n        }\n        return msgBytes;\n    }\n    else if (crypto.node) {\n        const decipher = crypto.node.createDecipheriv(mode, key, iv);\n        decipher.setAutoPadding(pkcs7PaddingEnabled);\n        return concatBytes(decipher.update(cypherText), decipher.final());\n    }\n    else {\n        throw new Error(\"The environment doesn't have AES module\");\n    }\n}\n","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    assertHash(hash);\n    const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    assertNumber(c);\n    assertNumber(dkLen);\n    assertNumber(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = toBytes(_password);\n    const salt = toBytes(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexport async function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await asyncLoop(c - 1, asyncTick, () => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n//# sourceMappingURL=pbkdf2.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Choice: a ? b : c\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","import { pbkdf2 as _pbkdf2, pbkdf2Async as _pbkdf2Async } from \"@noble/hashes/pbkdf2\";\nimport { sha256 } from \"@noble/hashes/sha256\";\nimport { sha512 } from \"@noble/hashes/sha512\";\nimport { assertBytes } from \"./utils.js\";\nexport async function pbkdf2(password, salt, iterations, keylen, digest) {\n    if (![\"sha256\", \"sha512\"].includes(digest)) {\n        throw new Error(\"Only sha256 and sha512 are supported\");\n    }\n    assertBytes(password);\n    assertBytes(salt);\n    return _pbkdf2Async(digest === \"sha256\" ? sha256 : sha512, password, salt, {\n        c: iterations,\n        dkLen: keylen\n    });\n}\nexport function pbkdf2Sync(password, salt, iterations, keylen, digest) {\n    if (![\"sha256\", \"sha512\"].includes(digest)) {\n        throw new Error(\"Only sha256 and sha512 are supported\");\n    }\n    assertBytes(password);\n    assertBytes(salt);\n    return _pbkdf2(digest === \"sha256\" ? sha256 : sha512, password, salt, {\n        c: iterations,\n        dkLen: keylen\n    });\n}\n","import { number as assertNumber } from './_assert.js';\nimport { sha256 } from './sha256.js';\nimport { pbkdf2 } from './pbkdf2.js';\nimport { rotl, asyncLoop, checkOpts, u32, isLE, byteSwap32 } from './utils.js';\n// RFC 7914 Scrypt KDF\n// The main Scrypt loop: uses Salsa extensively.\n// Six versions of the function were tried, this is the fastest one.\n// prettier-ignore\nfunction XorAndSalsa(prev, pi, input, ii, out, oi) {\n    // Based on https://cr.yp.to/salsa20.html\n    // Xor blocks\n    let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];\n    let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];\n    let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];\n    let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];\n    let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];\n    let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];\n    let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];\n    let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];\n    // Save state to temporary variables (salsa)\n    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n    // Main loop (salsa)\n    for (let i = 0; i < 8; i += 2) {\n        x04 ^= rotl(x00 + x12 | 0, 7);\n        x08 ^= rotl(x04 + x00 | 0, 9);\n        x12 ^= rotl(x08 + x04 | 0, 13);\n        x00 ^= rotl(x12 + x08 | 0, 18);\n        x09 ^= rotl(x05 + x01 | 0, 7);\n        x13 ^= rotl(x09 + x05 | 0, 9);\n        x01 ^= rotl(x13 + x09 | 0, 13);\n        x05 ^= rotl(x01 + x13 | 0, 18);\n        x14 ^= rotl(x10 + x06 | 0, 7);\n        x02 ^= rotl(x14 + x10 | 0, 9);\n        x06 ^= rotl(x02 + x14 | 0, 13);\n        x10 ^= rotl(x06 + x02 | 0, 18);\n        x03 ^= rotl(x15 + x11 | 0, 7);\n        x07 ^= rotl(x03 + x15 | 0, 9);\n        x11 ^= rotl(x07 + x03 | 0, 13);\n        x15 ^= rotl(x11 + x07 | 0, 18);\n        x01 ^= rotl(x00 + x03 | 0, 7);\n        x02 ^= rotl(x01 + x00 | 0, 9);\n        x03 ^= rotl(x02 + x01 | 0, 13);\n        x00 ^= rotl(x03 + x02 | 0, 18);\n        x06 ^= rotl(x05 + x04 | 0, 7);\n        x07 ^= rotl(x06 + x05 | 0, 9);\n        x04 ^= rotl(x07 + x06 | 0, 13);\n        x05 ^= rotl(x04 + x07 | 0, 18);\n        x11 ^= rotl(x10 + x09 | 0, 7);\n        x08 ^= rotl(x11 + x10 | 0, 9);\n        x09 ^= rotl(x08 + x11 | 0, 13);\n        x10 ^= rotl(x09 + x08 | 0, 18);\n        x12 ^= rotl(x15 + x14 | 0, 7);\n        x13 ^= rotl(x12 + x15 | 0, 9);\n        x14 ^= rotl(x13 + x12 | 0, 13);\n        x15 ^= rotl(x14 + x13 | 0, 18);\n    }\n    // Write output (salsa)\n    out[oi++] = (y00 + x00) | 0;\n    out[oi++] = (y01 + x01) | 0;\n    out[oi++] = (y02 + x02) | 0;\n    out[oi++] = (y03 + x03) | 0;\n    out[oi++] = (y04 + x04) | 0;\n    out[oi++] = (y05 + x05) | 0;\n    out[oi++] = (y06 + x06) | 0;\n    out[oi++] = (y07 + x07) | 0;\n    out[oi++] = (y08 + x08) | 0;\n    out[oi++] = (y09 + x09) | 0;\n    out[oi++] = (y10 + x10) | 0;\n    out[oi++] = (y11 + x11) | 0;\n    out[oi++] = (y12 + x12) | 0;\n    out[oi++] = (y13 + x13) | 0;\n    out[oi++] = (y14 + x14) | 0;\n    out[oi++] = (y15 + x15) | 0;\n}\nfunction BlockMix(input, ii, out, oi, r) {\n    // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)\n    let head = oi + 0;\n    let tail = oi + 16 * r;\n    for (let i = 0; i < 16; i++)\n        out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X ← B[2r−1]\n    for (let i = 0; i < r; i++, head += 16, ii += 16) {\n        // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1\n        XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])\n        if (i > 0)\n            tail += 16; // First iteration overwrites tmp value in tail\n        XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])\n    }\n}\n// Common prologue and epilogue for sync/async functions\nfunction scryptInit(password, salt, _opts) {\n    // Maxmem - 1GB+1KB by default\n    const opts = checkOpts({\n        dkLen: 32,\n        asyncTick: 10,\n        maxmem: 1024 ** 3 + 1024,\n    }, _opts);\n    const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;\n    assertNumber(N);\n    assertNumber(r);\n    assertNumber(p);\n    assertNumber(dkLen);\n    assertNumber(asyncTick);\n    assertNumber(maxmem);\n    if (onProgress !== undefined && typeof onProgress !== 'function')\n        throw new Error('progressCb should be function');\n    const blockSize = 128 * r;\n    const blockSize32 = blockSize / 4;\n    if (N <= 1 || (N & (N - 1)) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {\n        // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function\n        // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.\n        throw new Error('Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32');\n    }\n    if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {\n        throw new Error('Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)');\n    }\n    if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {\n        throw new Error('Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32');\n    }\n    const memUsed = blockSize * (N + p);\n    if (memUsed > maxmem) {\n        throw new Error(`Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`);\n    }\n    // [B0...Bp−1] ← PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)\n    // Since it has only one iteration there is no reason to use async variant\n    const B = pbkdf2(sha256, password, salt, { c: 1, dkLen: blockSize * p });\n    const B32 = u32(B);\n    // Re-used between parallel iterations. Array(iterations) of B\n    const V = u32(new Uint8Array(blockSize * N));\n    const tmp = u32(new Uint8Array(blockSize));\n    let blockMixCb = () => { };\n    if (onProgress) {\n        const totalBlockMix = 2 * N * p;\n        // Invoke callback if progress changes from 10.01 to 10.02\n        // Allows to draw smooth progress bar on up to 8K screen\n        const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);\n        let blockMixCnt = 0;\n        blockMixCb = () => {\n            blockMixCnt++;\n            if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))\n                onProgress(blockMixCnt / totalBlockMix);\n        };\n    }\n    return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };\n}\nfunction scryptOutput(password, dkLen, B, V, tmp) {\n    const res = pbkdf2(sha256, password, B, { c: 1, dkLen });\n    B.fill(0);\n    V.fill(0);\n    tmp.fill(0);\n    return res;\n}\n/**\n * Scrypt KDF from RFC 7914.\n * @param password - pass\n * @param salt - salt\n * @param opts - parameters\n * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)\n * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance\n * - `p` is parallelization factor (1 is common)\n * - `dkLen` is output key length in bytes e.g. 32.\n * - `asyncTick` - (default: 10) max time in ms for which async function can block execution\n * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt\n * - `onProgress` - callback function that would be executed for progress report\n * @returns Derived key\n */\nexport function scrypt(password, salt, opts) {\n    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(password, salt, opts);\n    if (!isLE)\n        byteSwap32(B32);\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        for (let i = 0, pos = 0; i < N - 1; i++) {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            blockMixCb();\n        }\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        blockMixCb();\n        for (let i = 0; i < N; i++) {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++)\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            blockMixCb();\n        }\n    }\n    if (!isLE)\n        byteSwap32(B32);\n    return scryptOutput(password, dkLen, B, V, tmp);\n}\n/**\n * Scrypt KDF from RFC 7914.\n */\nexport async function scryptAsync(password, salt, opts) {\n    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(password, salt, opts);\n    if (!isLE)\n        byteSwap32(B32);\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        let pos = 0;\n        await asyncLoop(N - 1, asyncTick, () => {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            blockMixCb();\n        });\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        blockMixCb();\n        await asyncLoop(N, asyncTick, () => {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++)\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            blockMixCb();\n        });\n    }\n    if (!isLE)\n        byteSwap32(B32);\n    return scryptOutput(password, dkLen, B, V, tmp);\n}\n//# sourceMappingURL=scrypt.js.map","import { scrypt as _sync, scryptAsync as _async } from \"@noble/hashes/scrypt\";\nimport { assertBytes } from \"./utils.js\";\nexport async function scrypt(password, salt, n, p, r, dkLen, onProgress) {\n    assertBytes(password);\n    assertBytes(salt);\n    return _async(password, salt, { N: n, r, p, dkLen, onProgress });\n}\nexport function scryptSync(password, salt, n, p, r, dkLen, onProgress) {\n    assertBytes(password);\n    assertBytes(salt);\n    return _sync(password, salt, { N: n, r, p, dkLen, onProgress });\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexport function abytes(item) {\n    if (!isBytes(item))\n        throw new Error('Uint8Array expected');\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes(bytes);\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, bytesToNumberBE, bytesToNumberLE, ensureBytes, numberToBytesBE, numberToBytesLE, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport { validateBasic, wNAF } from './curve.js';\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        ut.abytes(data);\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (ut.isBytes(key))\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y;\n                try {\n                    y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                }\n                catch (sqrtError) {\n                    const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                    throw new Error('Point is not on curve' + suffix);\n                }\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = ut.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || ut.isBytes(sg)) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { createCurve } from './_shortw_utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","export { secp256k1 } from \"@noble/curves/secp256k1\";\n","var _a;\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line import/extensions\nimport * as ethereumCryptography from 'ethereum-cryptography/secp256k1.js';\nexport const secp256k1 = (_a = ethereumCryptography.secp256k1) !== null && _a !== void 0 ? _a : ethereumCryptography;\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = BigInt('0xffffffffffffffff');\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nexport const SECP256K1_ORDER = secp256k1.CURVE.n;\nexport const SECP256K1_ORDER_DIV_2 = SECP256K1_ORDER / BigInt(2);\n//# sourceMappingURL=constants.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport const keyStoreSchema = {\n    type: 'object',\n    required: ['crypto', 'id', 'version', 'address'],\n    properties: {\n        crypto: {\n            type: 'object',\n            required: ['cipher', 'ciphertext', 'cipherparams', 'kdf', 'kdfparams', 'mac'],\n            properties: {\n                cipher: { type: 'string' },\n                ciphertext: { type: 'string' },\n                cipherparams: { type: 'object' },\n                kdf: { type: 'string' },\n                kdfparams: { type: 'object' },\n                salt: { type: 'string' },\n                mac: { type: 'string' },\n            },\n        },\n        id: { type: 'string' },\n        version: { type: 'number' },\n        address: { type: 'string' },\n    },\n};\n//# sourceMappingURL=schemas.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport var Chain;\n(function (Chain) {\n    Chain[Chain[\"Mainnet\"] = 1] = \"Mainnet\";\n    Chain[Chain[\"Goerli\"] = 5] = \"Goerli\";\n    Chain[Chain[\"Sepolia\"] = 11155111] = \"Sepolia\";\n})(Chain || (Chain = {}));\nexport var Hardfork;\n(function (Hardfork) {\n    Hardfork[\"Chainstart\"] = \"chainstart\";\n    Hardfork[\"Homestead\"] = \"homestead\";\n    Hardfork[\"Dao\"] = \"dao\";\n    Hardfork[\"TangerineWhistle\"] = \"tangerineWhistle\";\n    Hardfork[\"SpuriousDragon\"] = \"spuriousDragon\";\n    Hardfork[\"Byzantium\"] = \"byzantium\";\n    Hardfork[\"Constantinople\"] = \"constantinople\";\n    Hardfork[\"Petersburg\"] = \"petersburg\";\n    Hardfork[\"Istanbul\"] = \"istanbul\";\n    Hardfork[\"MuirGlacier\"] = \"muirGlacier\";\n    Hardfork[\"Berlin\"] = \"berlin\";\n    Hardfork[\"London\"] = \"london\";\n    Hardfork[\"ArrowGlacier\"] = \"arrowGlacier\";\n    Hardfork[\"GrayGlacier\"] = \"grayGlacier\";\n    Hardfork[\"MergeForkIdTransition\"] = \"mergeForkIdTransition\";\n    Hardfork[\"Merge\"] = \"merge\";\n    Hardfork[\"Shanghai\"] = \"shanghai\";\n    Hardfork[\"ShardingForkDev\"] = \"shardingFork\";\n})(Hardfork || (Hardfork = {}));\nexport var ConsensusType;\n(function (ConsensusType) {\n    ConsensusType[\"ProofOfStake\"] = \"pos\";\n    ConsensusType[\"ProofOfWork\"] = \"pow\";\n    ConsensusType[\"ProofOfAuthority\"] = \"poa\";\n})(ConsensusType || (ConsensusType = {}));\nexport var ConsensusAlgorithm;\n(function (ConsensusAlgorithm) {\n    ConsensusAlgorithm[\"Ethash\"] = \"ethash\";\n    ConsensusAlgorithm[\"Clique\"] = \"clique\";\n    ConsensusAlgorithm[\"Casper\"] = \"casper\";\n})(ConsensusAlgorithm || (ConsensusAlgorithm = {}));\nexport var CustomChain;\n(function (CustomChain) {\n    /**\n     * Polygon (Matic) Mainnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMainnet\"] = \"polygon-mainnet\";\n    /**\n     * Polygon (Matic) Mumbai Testnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMumbai\"] = \"polygon-mumbai\";\n    /**\n     * Arbitrum Rinkeby Testnet\n     *\n     * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n     */\n    CustomChain[\"ArbitrumRinkebyTestnet\"] = \"arbitrum-rinkeby-testnet\";\n    /**\n     * Arbitrum One - mainnet for Arbitrum roll-up\n     *\n     * - [Documentation](https://developer.offchainlabs.com/public-chains)\n     */\n    CustomChain[\"ArbitrumOne\"] = \"arbitrum-one\";\n    /**\n     * xDai EVM sidechain with a native stable token\n     *\n     * - [Documentation](https://www.xdaichain.com/)\n     */\n    CustomChain[\"xDaiChain\"] = \"x-dai-chain\";\n    /**\n     * Optimistic Kovan - testnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticKovan\"] = \"optimistic-kovan\";\n    /**\n     * Optimistic Ethereum - mainnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticEthereum\"] = \"optimistic-ethereum\";\n})(CustomChain || (CustomChain = {}));\n//# sourceMappingURL=enums.js.map","/**\n * Type output options\n */\nexport var TypeOutput;\n(function (TypeOutput) {\n    TypeOutput[TypeOutput[\"Number\"] = 0] = \"Number\";\n    TypeOutput[TypeOutput[\"BigInt\"] = 1] = \"BigInt\";\n    TypeOutput[TypeOutput[\"Uint8Array\"] = 2] = \"Uint8Array\";\n    TypeOutput[TypeOutput[\"PrefixedHexString\"] = 3] = \"PrefixedHexString\";\n})(TypeOutput || (TypeOutput = {}));\n//# sourceMappingURL=types.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { isHexPrefixed, isHexString } from 'web3-validator';\nimport { bytesToHex, hexToBytes, isUint8Array, numberToHex } from 'web3-utils';\nimport { secp256k1 } from '../tx/constants.js';\nimport { Hardfork } from './enums.js';\nimport { TypeOutput } from './types.js';\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str) => {\n    if (typeof str !== 'string')\n        throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`);\n    return isHexPrefixed(str) ? str.slice(2) : str;\n};\n/**\n * Transforms Geth formatted nonce (i.e. hex string) to 8 byte 0x-prefixed string used internally\n * @param nonce string parsed from the Geth genesis file\n * @returns nonce as a 0x-prefixed 8 byte string\n */\nfunction formatNonce(nonce) {\n    if (!nonce || nonce === '0x0') {\n        return '0x0000000000000000';\n    }\n    if (isHexPrefixed(nonce)) {\n        return `0x${stripHexPrefix(nonce).padStart(16, '0')}`;\n    }\n    return `0x${nonce.padStart(16, '0')}`;\n}\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nconst intToHex = function (i) {\n    if (!Number.isSafeInteger(i) || i < 0) {\n        throw new Error(`Received an invalid integer type: ${i}`);\n    }\n    return `0x${i.toString(16)}`;\n};\n/**\n * Converts Geth genesis parameters to an EthereumJS compatible `CommonOpts` object\n * @param json object representing the Geth genesis file\n * @param optional mergeForkIdPostMerge which clarifies the placement of MergeForkIdTransition\n * hardfork, which by default is post merge as with the merged eth networks but could also come\n * before merge like in kiln genesis\n * @returns genesis parameters in a `CommonOpts` compliant object\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction parseGethParams(json, mergeForkIdPostMerge = true) {\n    var _a, _b;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const { name, config, difficulty, mixHash, gasLimit, coinbase, baseFeePerGas, } = json;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    let { extraData, timestamp, nonce } = json;\n    const genesisTimestamp = Number(timestamp);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const { chainId } = config;\n    // geth is not strictly putting empty fields with a 0x prefix\n    if (extraData === '') {\n        extraData = '0x';\n    }\n    // geth may use number for timestamp\n    if (!isHexPrefixed(timestamp)) {\n        // eslint-disable-next-line radix\n        timestamp = intToHex(parseInt(timestamp));\n    }\n    // geth may not give us a nonce strictly formatted to an 8 byte hex string\n    if (nonce.length !== 18) {\n        nonce = formatNonce(nonce);\n    }\n    // EIP155 and EIP158 are both part of Spurious Dragon hardfork and must occur at the same time\n    // but have different configuration parameters in geth genesis parameters\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (config.eip155Block !== config.eip158Block) {\n        throw new Error('EIP155 block number must equal EIP 158 block number since both are part of SpuriousDragon hardfork and the client only supports activating the full hardfork');\n    }\n    const params = {\n        name,\n        chainId,\n        networkId: chainId,\n        genesis: {\n            timestamp,\n            // eslint-disable-next-line radix\n            gasLimit: parseInt(gasLimit), // geth gasLimit and difficulty are hex strings while ours are `number`s\n            // eslint-disable-next-line radix\n            difficulty: parseInt(difficulty),\n            nonce,\n            extraData,\n            mixHash,\n            coinbase,\n            baseFeePerGas,\n        },\n        hardfork: undefined,\n        hardforks: [],\n        bootstrapNodes: [],\n        consensus: \n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        config.clique !== undefined\n            ? {\n                type: 'poa',\n                algorithm: 'clique',\n                clique: {\n                    // The recent geth genesis seems to be using blockperiodseconds\n                    // and epochlength for clique specification\n                    // see: https://hackmd.io/PqZgMpnkSWCWv5joJoFymQ\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n                    period: (_a = config.clique.period) !== null && _a !== void 0 ? _a : config.clique.blockperiodseconds,\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,  @typescript-eslint/no-unsafe-assignment\n                    epoch: (_b = config.clique.epoch) !== null && _b !== void 0 ? _b : config.clique.epochlength,\n                },\n            }\n            : {\n                type: 'pow',\n                algorithm: 'ethash',\n                ethash: {},\n            },\n    };\n    const forkMap = {\n        [Hardfork.Homestead]: { name: 'homesteadBlock' },\n        [Hardfork.Dao]: { name: 'daoForkBlock' },\n        [Hardfork.TangerineWhistle]: { name: 'eip150Block' },\n        [Hardfork.SpuriousDragon]: { name: 'eip155Block' },\n        [Hardfork.Byzantium]: { name: 'byzantiumBlock' },\n        [Hardfork.Constantinople]: { name: 'constantinopleBlock' },\n        [Hardfork.Petersburg]: { name: 'petersburgBlock' },\n        [Hardfork.Istanbul]: { name: 'istanbulBlock' },\n        [Hardfork.MuirGlacier]: { name: 'muirGlacierBlock' },\n        [Hardfork.Berlin]: { name: 'berlinBlock' },\n        [Hardfork.London]: { name: 'londonBlock' },\n        [Hardfork.MergeForkIdTransition]: {\n            name: 'mergeForkBlock',\n            postMerge: mergeForkIdPostMerge,\n        },\n        [Hardfork.Shanghai]: { name: 'shanghaiTime', postMerge: true, isTimestamp: true },\n        [Hardfork.ShardingForkDev]: {\n            name: 'shardingForkTime',\n            postMerge: true,\n            isTimestamp: true,\n        },\n    };\n    // forkMapRev is the map from config field name to Hardfork\n    const forkMapRev = Object.keys(forkMap).reduce((acc, elem) => {\n        acc[forkMap[elem].name] = elem;\n        return acc;\n    }, {});\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    const configHardforkNames = Object.keys(config).filter(\n    // eslint-disable-next-line no-null/no-null, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/prefer-optional-chain\n    key => forkMapRev[key] !== undefined && config[key] !== undefined && config[key] !== null);\n    params.hardforks = configHardforkNames\n        .map(nameBlock => ({\n        name: forkMapRev[nameBlock],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        block: \n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        forkMap[forkMapRev[nameBlock]].isTimestamp === true ||\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            typeof config[nameBlock] !== 'number'\n            ? // eslint-disable-next-line no-null/no-null\n                null\n            : // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                config[nameBlock],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        timestamp: \n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        forkMap[forkMapRev[nameBlock]].isTimestamp === true &&\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            typeof config[nameBlock] === 'number'\n            ? // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                config[nameBlock]\n            : undefined,\n    }))\n        // eslint-disable-next-line no-null/no-null\n        .filter(fork => fork.block !== null || fork.timestamp !== undefined);\n    params.hardforks.sort((a, b) => { var _a, _b; return ((_a = a.block) !== null && _a !== void 0 ? _a : Infinity) - ((_b = b.block) !== null && _b !== void 0 ? _b : Infinity); });\n    params.hardforks.sort((a, b) => { var _a, _b; return ((_a = a.timestamp) !== null && _a !== void 0 ? _a : genesisTimestamp) - ((_b = b.timestamp) !== null && _b !== void 0 ? _b : genesisTimestamp); });\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (config.terminalTotalDifficulty !== undefined) {\n        // Following points need to be considered for placement of merge hf\n        // - Merge hardfork can't be placed at genesis\n        // - Place merge hf before any hardforks that require CL participation for e.g. withdrawals\n        // - Merge hardfork has to be placed just after genesis if any of the genesis hardforks make CL\n        //   necessary for e.g. withdrawals\n        const mergeConfig = {\n            name: Hardfork.Merge,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n            ttd: config.terminalTotalDifficulty,\n            // eslint-disable-next-line no-null/no-null\n            block: null,\n        };\n        // Merge hardfork has to be placed before first hardfork that is dependent on merge\n        const postMergeIndex = params.hardforks.findIndex(\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        hf => { var _a; return ((_a = forkMap[hf.name]) === null || _a === void 0 ? void 0 : _a.postMerge) === true; });\n        if (postMergeIndex !== -1) {\n            params.hardforks.splice(postMergeIndex, 0, mergeConfig);\n        }\n        else {\n            params.hardforks.push(mergeConfig);\n        }\n    }\n    const latestHardfork = params.hardforks.length > 0 ? params.hardforks.slice(-1)[0] : undefined;\n    params.hardfork = latestHardfork === null || latestHardfork === void 0 ? void 0 : latestHardfork.name;\n    params.hardforks.unshift({ name: Hardfork.Chainstart, block: 0 });\n    return params;\n}\n/**\n * Parses a genesis.json exported from Geth into parameters for Common instance\n * @param json representing the Geth genesis file\n * @param name optional chain name\n * @returns parsed params\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function parseGethGenesis(json, name, mergeForkIdPostMerge) {\n    try {\n        if (['config', 'difficulty', 'gasLimit', 'alloc'].some(field => !(field in json))) {\n            throw new Error('Invalid format, expected geth genesis fields missing');\n        }\n        if (name !== undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-param-reassign\n            json.name = name;\n        }\n        return parseGethParams(json, mergeForkIdPostMerge);\n    }\n    catch (e) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/restrict-template-expressions\n        throw new Error(`Error parsing parameters file: ${e.message}`);\n    }\n}\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value) {\n    let a = value;\n    if (typeof a !== 'string') {\n        throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`);\n    }\n    if (a.length % 2)\n        a = `0${a}`;\n    return a;\n}\n/**\n * Converts an `Number` to a `Uint8Array`\n * @param {Number} i\n * @return {Uint8Array}\n */\nexport const intToUint8Array = function (i) {\n    const hex = intToHex(i);\n    return hexToBytes(`0x${padToEven(hex.slice(2))}`);\n};\n/**\n * Attempts to turn a value into a `Uint8Array`.\n * Inputs supported: `Uint8Array` `String` (hex-prefixed), `Number`, null/undefined, `BigInt` and other objects\n * with a `toArray()` or `toUint8Array()` method.\n * @param v the value\n */\nexport const toUint8Array = function (v) {\n    var _a;\n    // eslint-disable-next-line no-null/no-null\n    if (v === null || v === undefined) {\n        return new Uint8Array();\n    }\n    if (v instanceof Uint8Array) {\n        return v;\n    }\n    if (((_a = v === null || v === void 0 ? void 0 : v.constructor) === null || _a === void 0 ? void 0 : _a.name) === 'Uint8Array') {\n        return Uint8Array.from(v);\n    }\n    if (Array.isArray(v)) {\n        return Uint8Array.from(v);\n    }\n    if (typeof v === 'string') {\n        if (!isHexString(v)) {\n            throw new Error(`Cannot convert string to Uint8Array. only supports 0x-prefixed hex strings and this string was given: ${v}`);\n        }\n        return hexToBytes(padToEven(stripHexPrefix(v)));\n    }\n    if (typeof v === 'number') {\n        return toUint8Array(numberToHex(v));\n    }\n    if (typeof v === 'bigint') {\n        if (v < BigInt(0)) {\n            throw new Error(`Cannot convert negative bigint to Uint8Array. Given: ${v}`);\n        }\n        let n = v.toString(16);\n        if (n.length % 2)\n            n = `0${n}`;\n        return toUint8Array(`0x${n}`);\n    }\n    if (v.toArray) {\n        // converts a BN to a Uint8Array\n        return Uint8Array.from(v.toArray());\n    }\n    throw new Error('invalid type');\n};\n/**\n * Converts a {@link Uint8Array} to a {@link bigint}\n */\nexport function uint8ArrayToBigInt(buf) {\n    const hex = bytesToHex(buf);\n    if (hex === '0x') {\n        return BigInt(0);\n    }\n    return BigInt(hex);\n}\n/**\n * Converts a {@link bigint} to a {@link Uint8Array}\n */\nexport function bigIntToUint8Array(num) {\n    return toUint8Array(`0x${num.toString(16)}`);\n}\n/**\n * Returns a Uint8Array filled with 0s.\n * @param bytes the number of bytes the Uint8Array should be\n */\nexport const zeros = function (bytes) {\n    return new Uint8Array(bytes).fill(0);\n};\n/**\n * Pads a `Uint8Array` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Uint8Array)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Uint8Array)\n */\nconst setLength = function (msg, length, right) {\n    const buf = zeros(length);\n    if (right) {\n        if (msg.length < length) {\n            buf.set(msg);\n            return buf;\n        }\n        return msg.subarray(0, length);\n    }\n    if (msg.length < length) {\n        buf.set(msg, length - msg.length);\n        return buf;\n    }\n    return msg.subarray(-length);\n};\n/**\n * Throws if input is not a Uint8Array\n * @param {Uint8Array} input value to check\n */\nexport function assertIsUint8Array(input) {\n    if (!isUint8Array(input)) {\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        const msg = `This method only supports Uint8Array but input was: ${input}`;\n        throw new Error(msg);\n    }\n}\n/**\n * Left Pads a `Uint8Array` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Uint8Array)\n * @param length the number of bytes the output should be\n * @return (Uint8Array)\n */\nexport const setLengthLeft = function (msg, length) {\n    assertIsUint8Array(msg);\n    return setLength(msg, length, false);\n};\n/**\n * Trims leading zeros from a `Uint8Array`, `String` or `Number[]`.\n * @param a (Uint8Array|Array|String)\n * @return (Uint8Array|Array|String)\n */\nexport function stripZeros(a) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n    let first = a[0];\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    while (a.length > 0 && first.toString() === '0') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment, prefer-destructuring, @typescript-eslint/no-unsafe-call, no-param-reassign\n        a = a.slice(1);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, prefer-destructuring, @typescript-eslint/no-unsafe-member-access\n        first = a[0];\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return a;\n}\n/**\n * Trims leading zeros from a `Uint8Array`.\n * @param a (Uint8Array)\n * @return (Uint8Array)\n */\nexport const unpadUint8Array = function (a) {\n    assertIsUint8Array(a);\n    return stripZeros(a);\n};\n/**\n * Converts a {@link bigint} to a `0x` prefixed hex string\n */\nexport const bigIntToHex = (num) => `0x${num.toString(16)}`;\n/**\n * Convert value from bigint to an unpadded Uint8Array\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bigIntToUnpaddedUint8Array(value) {\n    return unpadUint8Array(bigIntToUint8Array(value));\n}\nfunction calculateSigRecovery(v, chainId) {\n    if (v === BigInt(0) || v === BigInt(1))\n        return v;\n    if (chainId === undefined) {\n        return v - BigInt(27);\n    }\n    return v - (chainId * BigInt(2) + BigInt(35));\n}\nfunction isValidSigRecovery(recovery) {\n    return recovery === BigInt(0) || recovery === BigInt(1);\n}\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nexport const ecrecover = function (msgHash, v, r, s, chainId) {\n    const recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    const senderPubKey = new secp256k1.Signature(uint8ArrayToBigInt(r), uint8ArrayToBigInt(s))\n        .addRecoveryBit(Number(recovery))\n        .recoverPublicKey(msgHash)\n        .toRawBytes(false);\n    return senderPubKey.slice(1);\n};\nexport function toType(input, outputType) {\n    // eslint-disable-next-line no-null/no-null\n    if (input === null) {\n        // eslint-disable-next-line no-null/no-null\n        return null;\n    }\n    if (input === undefined) {\n        return undefined;\n    }\n    if (typeof input === 'string' && !isHexString(input)) {\n        throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`);\n    }\n    else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n        throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');\n    }\n    const output = toUint8Array(input);\n    switch (outputType) {\n        case TypeOutput.Uint8Array:\n            return output;\n        case TypeOutput.BigInt:\n            return uint8ArrayToBigInt(output);\n        case TypeOutput.Number: {\n            const bigInt = uint8ArrayToBigInt(output);\n            if (bigInt > BigInt(Number.MAX_SAFE_INTEGER)) {\n                throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)');\n            }\n            return Number(bigInt);\n        }\n        case TypeOutput.PrefixedHexString:\n            return bytesToHex(output);\n        default:\n            throw new Error('unknown outputType');\n    }\n}\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RLP = exports.utils = exports.decode = exports.encode = void 0;\n/**\n * RLP Encoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * This function takes in data, converts it to Uint8Array if not,\n * and adds a length for recursion.\n * @param input Will be converted to Uint8Array\n * @returns Uint8Array of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        const output = [];\n        let outputLength = 0;\n        for (let i = 0; i < input.length; i++) {\n            const encoded = encode(input[i]);\n            output.push(encoded);\n            outputLength += encoded.length;\n        }\n        return concatBytes(encodeLength(outputLength, 192), ...output);\n    }\n    const inputBuf = toBytes(input);\n    if (inputBuf.length === 1 && inputBuf[0] < 128) {\n        return inputBuf;\n    }\n    return concatBytes(encodeLength(inputBuf.length, 128), inputBuf);\n}\nexports.encode = encode;\n/**\n * Slices a Uint8Array, throws if the slice goes out-of-bounds of the Uint8Array.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input, start, end) {\n    if (end > input.length) {\n        throw new Error('invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds');\n    }\n    return input.slice(start, end);\n}\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v) {\n    if (v[0] === 0) {\n        throw new Error('invalid RLP: extra zeros');\n    }\n    return parseHexByte(bytesToHex(v));\n}\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        return Uint8Array.from([len + offset]);\n    }\n    const hexLength = numberToHex(len);\n    const lLength = hexLength.length / 2;\n    const firstByte = numberToHex(offset + 55 + lLength);\n    return Uint8Array.from(hexToBytes(firstByte + hexLength));\n}\nfunction decode(input, stream = false) {\n    if (typeof input === 'undefined' || input === null || input.length === 0) {\n        return Uint8Array.from([]);\n    }\n    const inputBytes = toBytes(input);\n    const decoded = _decode(inputBytes);\n    if (stream) {\n        return decoded;\n    }\n    if (decoded.remainder.length !== 0) {\n        throw new Error('invalid RLP: remainder must be zero');\n    }\n    return decoded.data;\n}\nexports.decode = decode;\n/** Decode an input with RLP */\nfunction _decode(input) {\n    let length, llength, data, innerRemainder, d;\n    const decoded = [];\n    const firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.slice(1),\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Uint8Array.from([]);\n        }\n        else {\n            data = safeSlice(input, 1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error('invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed');\n        }\n        return {\n            data,\n            remainder: input.slice(length),\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error('invalid RLP: not enough bytes for string length');\n        }\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length <= 55) {\n            throw new Error('invalid RLP: expected string length to be greater than 55');\n        }\n        data = safeSlice(input, llength, length + llength);\n        return {\n            data,\n            remainder: input.slice(length + llength),\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between 0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = safeSlice(input, 1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(length),\n        };\n    }\n    else {\n        // a list over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length < 56) {\n            throw new Error('invalid RLP: encoded list too short');\n        }\n        const totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error('invalid RLP: total length is larger than the data');\n        }\n        innerRemainder = safeSlice(input, llength, totalLength);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(totalLength),\n        };\n    }\n}\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    // Pre-caching chars with `cachedHexes` speeds this up 6x\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += cachedHexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction parseHexByte(hexByte) {\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte))\n        throw new Error('Invalid byte sequence');\n    return byte;\n}\n// Caching slows it down 2-3x\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        array[i] = parseHexByte(hex.slice(j, j + 2));\n    }\n    return array;\n}\n/** Concatenates two Uint8Arrays into one. */\nfunction concatBytes(...arrays) {\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction utf8ToBytes(utf) {\n    return new TextEncoder().encode(utf);\n}\n/** Transform an integer into its hexadecimal value */\nfunction numberToHex(integer) {\n    if (integer < 0) {\n        throw new Error('Invalid integer as argument, must be unsigned!');\n    }\n    const hex = integer.toString(16);\n    return hex.length % 2 ? `0${hex}` : hex;\n}\n/** Pad a string to be even */\nfunction padToEven(a) {\n    return a.length % 2 ? `0${a}` : a;\n}\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str) {\n    return str.length >= 2 && str[0] === '0' && str[1] === 'x';\n}\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform anything into a Uint8Array */\nfunction toBytes(v) {\n    if (v instanceof Uint8Array) {\n        return v;\n    }\n    if (typeof v === 'string') {\n        if (isHexPrefixed(v)) {\n            return hexToBytes(padToEven(stripHexPrefix(v)));\n        }\n        return utf8ToBytes(v);\n    }\n    if (typeof v === 'number' || typeof v === 'bigint') {\n        if (!v) {\n            return Uint8Array.from([]);\n        }\n        return hexToBytes(numberToHex(v));\n    }\n    if (v === null || v === undefined) {\n        return Uint8Array.from([]);\n    }\n    throw new Error('toBytes: received unsupported type ' + typeof v);\n}\nexports.utils = {\n    bytesToHex,\n    concatBytes,\n    hexToBytes,\n    utf8ToBytes,\n};\nexports.RLP = { encode, decode };\n//# sourceMappingURL=index.js.map","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.2';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","export default {\n    name: 'goerli',\n    chainId: 5,\n    networkId: 5,\n    defaultHardfork: 'merge',\n    consensus: {\n        type: 'poa',\n        algorithm: 'clique',\n        clique: {\n            period: 15,\n            epoch: 30000,\n        },\n    },\n    comment: 'Cross-client PoA test network',\n    url: 'https://github.com/goerli/testnet',\n    genesis: {\n        timestamp: '0x5c51a607',\n        gasLimit: 10485760,\n        difficulty: 1,\n        nonce: '0x0000000000000000',\n        extraData: '0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n    },\n    hardforks: [\n        {\n            name: 'chainstart',\n            block: 0,\n            forkHash: '0xa3f5ab08',\n        },\n        {\n            name: 'homestead',\n            block: 0,\n            forkHash: '0xa3f5ab08',\n        },\n        {\n            name: 'tangerineWhistle',\n            block: 0,\n            forkHash: '0xa3f5ab08',\n        },\n        {\n            name: 'spuriousDragon',\n            block: 0,\n            forkHash: '0xa3f5ab08',\n        },\n        {\n            name: 'byzantium',\n            block: 0,\n            forkHash: '0xa3f5ab08',\n        },\n        {\n            name: 'constantinople',\n            block: 0,\n            forkHash: '0xa3f5ab08',\n        },\n        {\n            name: 'petersburg',\n            block: 0,\n            forkHash: '0xa3f5ab08',\n        },\n        {\n            name: 'istanbul',\n            block: 1561651,\n            forkHash: '0xc25efa5c',\n        },\n        {\n            name: 'berlin',\n            block: 4460644,\n            forkHash: '0x757a1c47',\n        },\n        {\n            name: 'london',\n            block: 5062605,\n            forkHash: '0xb8c6299d',\n        },\n        {\n            '//_comment': 'The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://goerli.etherscan.io/block/7382818',\n            name: 'merge',\n            ttd: '10790000',\n            block: 7382819,\n            forkHash: '0xb8c6299d',\n        },\n        {\n            name: 'mergeForkIdTransition',\n            block: null,\n            forkHash: null,\n        },\n        {\n            name: 'shanghai',\n            block: null,\n            forkHash: null,\n        },\n    ],\n    bootstrapNodes: [],\n    dnsNetworks: [\n        'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.goerli.ethdisco.net',\n    ],\n};\n//# sourceMappingURL=goerli.js.map","export default {\n    name: 'mainnet',\n    chainId: 1,\n    networkId: 1,\n    defaultHardfork: 'merge',\n    consensus: {\n        type: 'pow',\n        algorithm: 'ethash',\n        ethash: {},\n    },\n    comment: 'The Ethereum main chain',\n    url: 'https://ethstats.net/',\n    genesis: {\n        gasLimit: 5000,\n        difficulty: 17179869184,\n        nonce: '0x0000000000000042',\n        extraData: '0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa',\n    },\n    hardforks: [\n        {\n            name: 'chainstart',\n            block: 0,\n            forkHash: '0xfc64ec04',\n        },\n        {\n            name: 'homestead',\n            block: 1150000,\n            forkHash: '0x97c2c34c',\n        },\n        {\n            name: 'dao',\n            block: 1920000,\n            forkHash: '0x91d1f948',\n        },\n        {\n            name: 'tangerineWhistle',\n            block: 2463000,\n            forkHash: '0x7a64da13',\n        },\n        {\n            name: 'spuriousDragon',\n            block: 2675000,\n            forkHash: '0x3edd5b10',\n        },\n        {\n            name: 'byzantium',\n            block: 4370000,\n            forkHash: '0xa00bc324',\n        },\n        {\n            name: 'constantinople',\n            block: 7280000,\n            forkHash: '0x668db0af',\n        },\n        {\n            name: 'petersburg',\n            block: 7280000,\n            forkHash: '0x668db0af',\n        },\n        {\n            name: 'istanbul',\n            block: 9069000,\n            forkHash: '0x879d6e30',\n        },\n        {\n            name: 'muirGlacier',\n            block: 9200000,\n            forkHash: '0xe029e991',\n        },\n        {\n            name: 'berlin',\n            block: 12244000,\n            forkHash: '0x0eb440f6',\n        },\n        {\n            name: 'london',\n            block: 12965000,\n            forkHash: '0xb715077d',\n        },\n        {\n            name: 'arrowGlacier',\n            block: 13773000,\n            forkHash: '0x20c327fc',\n        },\n        {\n            name: 'grayGlacier',\n            block: 15050000,\n            forkHash: '0xf0afd0e3',\n        },\n        {\n            '//_comment': 'The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://etherscan.io/block/15537393',\n            name: 'merge',\n            ttd: '58750000000000000000000',\n            block: 15537394,\n            forkHash: '0xf0afd0e3',\n        },\n        {\n            name: 'mergeForkIdTransition',\n            block: null,\n            forkHash: null,\n        },\n        {\n            name: 'shanghai',\n            block: null,\n            forkHash: null,\n        },\n    ],\n    bootstrapNodes: [],\n    dnsNetworks: [\n        'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.mainnet.ethdisco.net',\n    ],\n};\n//# sourceMappingURL=mainnet.js.map","export default {\n    name: 'sepolia',\n    chainId: 11155111,\n    networkId: 11155111,\n    defaultHardfork: 'merge',\n    consensus: {\n        type: 'pow',\n        algorithm: 'ethash',\n        ethash: {},\n    },\n    comment: 'PoW test network to replace Ropsten',\n    url: 'https://github.com/ethereum/go-ethereum/pull/23730',\n    genesis: {\n        timestamp: '0x6159af19',\n        gasLimit: 30000000,\n        difficulty: 131072,\n        nonce: '0x0000000000000000',\n        extraData: '0x5365706f6c69612c20417468656e732c204174746963612c2047726565636521',\n    },\n    hardforks: [\n        {\n            name: 'chainstart',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'homestead',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'tangerineWhistle',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'spuriousDragon',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'byzantium',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'constantinople',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'petersburg',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'istanbul',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'muirGlacier',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'berlin',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'london',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            '//_comment': 'The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://sepolia.etherscan.io/block/1450408',\n            name: 'merge',\n            ttd: '17000000000000000',\n            block: 1450409,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'mergeForkIdTransition',\n            block: 1735371,\n            forkHash: '0xb96cbd13',\n        },\n        {\n            name: 'shanghai',\n            block: null,\n            timestamp: '1677557088',\n            forkHash: '0xf7f9bc08',\n        },\n    ],\n    bootstrapNodes: [],\n    dnsNetworks: [\n        'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.sepolia.ethdisco.net',\n    ],\n};\n//# sourceMappingURL=sepolia.js.map","export default {\n    name: 'EIP-1153',\n    number: 1153,\n    comment: 'Transient Storage',\n    url: 'https://eips.ethereum.org/EIPS/eip-1153',\n    status: 'Review',\n    minimumHardfork: 'chainstart',\n    requiredEIPs: [],\n    gasConfig: {},\n    gasPrices: {\n        tstore: {\n            v: 100,\n            d: 'Base fee of the TSTORE opcode',\n        },\n        tload: {\n            v: 100,\n            d: 'Base fee of the TLOAD opcode',\n        },\n    },\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=1153.js.map","export default {\n    name: 'EIP-1559',\n    number: 1559,\n    comment: 'Fee market change for ETH 1.0 chain',\n    url: 'https://eips.ethereum.org/EIPS/eip-1559',\n    status: 'Final',\n    minimumHardfork: 'berlin',\n    requiredEIPs: [2930],\n    gasConfig: {\n        baseFeeMaxChangeDenominator: {\n            v: 8,\n            d: 'Maximum base fee change denominator',\n        },\n        elasticityMultiplier: {\n            v: 2,\n            d: 'Maximum block gas target elasticity',\n        },\n        initialBaseFee: {\n            v: 1000000000,\n            d: 'Initial base fee on first EIP1559 block',\n        },\n    },\n    gasPrices: {},\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=1559.js.map","export default {\n    name: 'EIP-2315',\n    number: 2315,\n    comment: 'Simple subroutines for the EVM',\n    url: 'https://eips.ethereum.org/EIPS/eip-2315',\n    status: 'Draft',\n    minimumHardfork: 'istanbul',\n    gasConfig: {},\n    gasPrices: {\n        beginsub: {\n            v: 2,\n            d: 'Base fee of the BEGINSUB opcode',\n        },\n        returnsub: {\n            v: 5,\n            d: 'Base fee of the RETURNSUB opcode',\n        },\n        jumpsub: {\n            v: 10,\n            d: 'Base fee of the JUMPSUB opcode',\n        },\n    },\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=2315.js.map","export default {\n    name: 'EIP-2537',\n    number: 2537,\n    comment: 'BLS12-381 precompiles',\n    url: 'https://eips.ethereum.org/EIPS/eip-2537',\n    status: 'Draft',\n    minimumHardfork: 'chainstart',\n    gasConfig: {},\n    gasPrices: {\n        Bls12381G1AddGas: {\n            v: 600,\n            d: 'Gas cost of a single BLS12-381 G1 addition precompile-call',\n        },\n        Bls12381G1MulGas: {\n            v: 12000,\n            d: 'Gas cost of a single BLS12-381 G1 multiplication precompile-call',\n        },\n        Bls12381G2AddGas: {\n            v: 4500,\n            d: 'Gas cost of a single BLS12-381 G2 addition precompile-call',\n        },\n        Bls12381G2MulGas: {\n            v: 55000,\n            d: 'Gas cost of a single BLS12-381 G2 multiplication precompile-call',\n        },\n        Bls12381PairingBaseGas: {\n            v: 115000,\n            d: 'Base gas cost of BLS12-381 pairing check',\n        },\n        Bls12381PairingPerPairGas: {\n            v: 23000,\n            d: 'Per-pair gas cost of BLS12-381 pairing check',\n        },\n        Bls12381MapG1Gas: {\n            v: 5500,\n            d: 'Gas cost of BLS12-381 map field element to G1',\n        },\n        Bls12381MapG2Gas: {\n            v: 110000,\n            d: 'Gas cost of BLS12-381 map field element to G2',\n        },\n        Bls12381MultiExpGasDiscount: {\n            v: [\n                [1, 1200],\n                [2, 888],\n                [3, 764],\n                [4, 641],\n                [5, 594],\n                [6, 547],\n                [7, 500],\n                [8, 453],\n                [9, 438],\n                [10, 423],\n                [11, 408],\n                [12, 394],\n                [13, 379],\n                [14, 364],\n                [15, 349],\n                [16, 334],\n                [17, 330],\n                [18, 326],\n                [19, 322],\n                [20, 318],\n                [21, 314],\n                [22, 310],\n                [23, 306],\n                [24, 302],\n                [25, 298],\n                [26, 294],\n                [27, 289],\n                [28, 285],\n                [29, 281],\n                [30, 277],\n                [31, 273],\n                [32, 269],\n                [33, 268],\n                [34, 266],\n                [35, 265],\n                [36, 263],\n                [37, 262],\n                [38, 260],\n                [39, 259],\n                [40, 257],\n                [41, 256],\n                [42, 254],\n                [43, 253],\n                [44, 251],\n                [45, 250],\n                [46, 248],\n                [47, 247],\n                [48, 245],\n                [49, 244],\n                [50, 242],\n                [51, 241],\n                [52, 239],\n                [53, 238],\n                [54, 236],\n                [55, 235],\n                [56, 233],\n                [57, 232],\n                [58, 231],\n                [59, 229],\n                [60, 228],\n                [61, 226],\n                [62, 225],\n                [63, 223],\n                [64, 222],\n                [65, 221],\n                [66, 220],\n                [67, 219],\n                [68, 219],\n                [69, 218],\n                [70, 217],\n                [71, 216],\n                [72, 216],\n                [73, 215],\n                [74, 214],\n                [75, 213],\n                [76, 213],\n                [77, 212],\n                [78, 211],\n                [79, 211],\n                [80, 210],\n                [81, 209],\n                [82, 208],\n                [83, 208],\n                [84, 207],\n                [85, 206],\n                [86, 205],\n                [87, 205],\n                [88, 204],\n                [89, 203],\n                [90, 202],\n                [91, 202],\n                [92, 201],\n                [93, 200],\n                [94, 199],\n                [95, 199],\n                [96, 198],\n                [97, 197],\n                [98, 196],\n                [99, 196],\n                [100, 195],\n                [101, 194],\n                [102, 193],\n                [103, 193],\n                [104, 192],\n                [105, 191],\n                [106, 191],\n                [107, 190],\n                [108, 189],\n                [109, 188],\n                [110, 188],\n                [111, 187],\n                [112, 186],\n                [113, 185],\n                [114, 185],\n                [115, 184],\n                [116, 183],\n                [117, 182],\n                [118, 182],\n                [119, 181],\n                [120, 180],\n                [121, 179],\n                [122, 179],\n                [123, 178],\n                [124, 177],\n                [125, 176],\n                [126, 176],\n                [127, 175],\n                [128, 174],\n            ],\n            d: 'Discount gas costs of calls to the MultiExp precompiles with `k` (point, scalar) pair',\n        },\n    },\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=2537.js.map","export default {\n    name: 'EIP-2565',\n    number: 2565,\n    comment: 'ModExp gas cost',\n    url: 'https://eips.ethereum.org/EIPS/eip-2565',\n    status: 'Final',\n    minimumHardfork: 'byzantium',\n    gasConfig: {},\n    gasPrices: {\n        modexpGquaddivisor: {\n            v: 3,\n            d: 'Gquaddivisor from modexp precompile for gas calculation',\n        },\n    },\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=2565.js.map","export default {\n    name: 'EIP-2718',\n    comment: 'Typed Transaction Envelope',\n    url: 'https://eips.ethereum.org/EIPS/eip-2718',\n    status: 'Final',\n    minimumHardfork: 'chainstart',\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=2718.js.map","export default {\n    name: 'EIP-2929',\n    comment: 'Gas cost increases for state access opcodes',\n    url: 'https://eips.ethereum.org/EIPS/eip-2929',\n    status: 'Final',\n    minimumHardfork: 'chainstart',\n    gasConfig: {},\n    gasPrices: {\n        coldsload: {\n            v: 2100,\n            d: 'Gas cost of the first read of storage from a given location (per transaction)',\n        },\n        coldaccountaccess: {\n            v: 2600,\n            d: 'Gas cost of the first read of a given address (per transaction)',\n        },\n        warmstorageread: {\n            v: 100,\n            d: \"Gas cost of reading storage locations which have already loaded 'cold'\",\n        },\n        sstoreCleanGasEIP2200: {\n            v: 2900,\n            d: 'Once per SSTORE operation from clean non-zero to something else',\n        },\n        sstoreNoopGasEIP2200: {\n            v: 100,\n            d: \"Once per SSTORE operation if the value doesn't change\",\n        },\n        sstoreDirtyGasEIP2200: {\n            v: 100,\n            d: 'Once per SSTORE operation if a dirty value is changed',\n        },\n        sstoreInitRefundEIP2200: {\n            v: 19900,\n            d: 'Once per SSTORE operation for resetting to the original zero value',\n        },\n        sstoreCleanRefundEIP2200: {\n            v: 4900,\n            d: 'Once per SSTORE operation for resetting to the original non-zero value',\n        },\n        call: {\n            v: 0,\n            d: 'Base fee of the CALL opcode',\n        },\n        callcode: {\n            v: 0,\n            d: 'Base fee of the CALLCODE opcode',\n        },\n        delegatecall: {\n            v: 0,\n            d: 'Base fee of the DELEGATECALL opcode',\n        },\n        staticcall: {\n            v: 0,\n            d: 'Base fee of the STATICCALL opcode',\n        },\n        balance: {\n            v: 0,\n            d: 'Base fee of the BALANCE opcode',\n        },\n        extcodesize: {\n            v: 0,\n            d: 'Base fee of the EXTCODESIZE opcode',\n        },\n        extcodecopy: {\n            v: 0,\n            d: 'Base fee of the EXTCODECOPY opcode',\n        },\n        extcodehash: {\n            v: 0,\n            d: 'Base fee of the EXTCODEHASH opcode',\n        },\n        sload: {\n            v: 0,\n            d: 'Base fee of the SLOAD opcode',\n        },\n        sstore: {\n            v: 0,\n            d: 'Base fee of the SSTORE opcode',\n        },\n    },\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=2929.js.map","export default {\n    name: 'EIP-2930',\n    comment: 'Optional access lists',\n    url: 'https://eips.ethereum.org/EIPS/eip-2930',\n    status: 'Final',\n    minimumHardfork: 'istanbul',\n    requiredEIPs: [2718, 2929],\n    gasConfig: {},\n    gasPrices: {\n        accessListStorageKeyCost: {\n            v: 1900,\n            d: 'Gas cost per storage key in an Access List transaction',\n        },\n        accessListAddressCost: {\n            v: 2400,\n            d: 'Gas cost per storage key in an Access List transaction',\n        },\n    },\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=2930.js.map","export default {\n    name: 'EIP-3198',\n    number: 3198,\n    comment: 'BASEFEE opcode',\n    url: 'https://eips.ethereum.org/EIPS/eip-3198',\n    status: 'Final',\n    minimumHardfork: 'london',\n    gasConfig: {},\n    gasPrices: {\n        basefee: {\n            v: 2,\n            d: 'Gas cost of the BASEFEE opcode',\n        },\n    },\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=3198.js.map","export default {\n    name: 'EIP-3529',\n    comment: 'Reduction in refunds',\n    url: 'https://eips.ethereum.org/EIPS/eip-3529',\n    status: 'Final',\n    minimumHardfork: 'berlin',\n    requiredEIPs: [2929],\n    gasConfig: {\n        maxRefundQuotient: {\n            v: 5,\n            d: 'Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)',\n        },\n    },\n    gasPrices: {\n        selfdestructRefund: {\n            v: 0,\n            d: 'Refunded following a selfdestruct operation',\n        },\n        sstoreClearRefundEIP2200: {\n            v: 4800,\n            d: 'Once per SSTORE operation for clearing an originally existing storage slot',\n        },\n    },\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=3529.js.map","export default {\n    name: 'EIP-3540',\n    number: 3540,\n    comment: 'EVM Object Format (EOF) v1',\n    url: 'https://eips.ethereum.org/EIPS/eip-3540',\n    status: 'Review',\n    minimumHardfork: 'london',\n    requiredEIPs: [3541],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=3540.js.map","export default {\n    name: 'EIP-3541',\n    comment: 'Reject new contracts starting with the 0xEF byte',\n    url: 'https://eips.ethereum.org/EIPS/eip-3541',\n    status: 'Final',\n    minimumHardfork: 'berlin',\n    requiredEIPs: [],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=3541.js.map","export default {\n    name: 'EIP-3554',\n    comment: 'Reduction in refunds',\n    url: 'Difficulty Bomb Delay to December 1st 2021',\n    status: 'Final',\n    minimumHardfork: 'muirGlacier',\n    requiredEIPs: [],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {\n        difficultyBombDelay: {\n            v: 9500000,\n            d: 'the amount of blocks to delay the difficulty bomb with',\n        },\n    },\n};\n//# sourceMappingURL=3554.js.map","export default {\n    name: 'EIP-3607',\n    number: 3607,\n    comment: 'Reject transactions from senders with deployed code',\n    url: 'https://eips.ethereum.org/EIPS/eip-3607',\n    status: 'Final',\n    minimumHardfork: 'chainstart',\n    requiredEIPs: [],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=3607.js.map","export default {\n    name: 'EIP-3651',\n    number: 3198,\n    comment: 'Warm COINBASE',\n    url: 'https://eips.ethereum.org/EIPS/eip-3651',\n    status: 'Review',\n    minimumHardfork: 'london',\n    requiredEIPs: [2929],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=3651.js.map","export default {\n    name: 'EIP-3670',\n    number: 3670,\n    comment: 'EOF - Code Validation',\n    url: 'https://eips.ethereum.org/EIPS/eip-3670',\n    status: 'Review',\n    minimumHardfork: 'london',\n    requiredEIPs: [3540],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=3670.js.map","export default {\n    name: 'EIP-3675',\n    number: 3675,\n    comment: 'Upgrade consensus to Proof-of-Stake',\n    url: 'https://eips.ethereum.org/EIPS/eip-3675',\n    status: 'Final',\n    minimumHardfork: 'london',\n    requiredEIPs: [],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=3675.js.map","export default {\n    name: 'EIP-3855',\n    number: 3855,\n    comment: 'PUSH0 instruction',\n    url: 'https://eips.ethereum.org/EIPS/eip-3855',\n    status: 'Review',\n    minimumHardfork: 'chainstart',\n    requiredEIPs: [],\n    gasConfig: {},\n    gasPrices: {\n        push0: {\n            v: 2,\n            d: 'Base fee of the PUSH0 opcode',\n        },\n    },\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=3855.js.map","export default {\n    name: 'EIP-3860',\n    number: 3860,\n    comment: 'Limit and meter initcode',\n    url: 'https://eips.ethereum.org/EIPS/eip-3860',\n    status: 'Review',\n    minimumHardfork: 'spuriousDragon',\n    requiredEIPs: [],\n    gasConfig: {},\n    gasPrices: {\n        initCodeWordCost: {\n            v: 2,\n            d: 'Gas to pay for each word (32 bytes) of initcode when creating a contract',\n        },\n    },\n    vm: {\n        maxInitCodeSize: {\n            v: 49152,\n            d: 'Maximum length of initialization code when creating a contract',\n        },\n    },\n    pow: {},\n};\n//# sourceMappingURL=3860.js.map","export default {\n    name: 'EIP-4345',\n    number: 4345,\n    comment: 'Difficulty Bomb Delay to June 2022',\n    url: 'https://eips.ethereum.org/EIPS/eip-4345',\n    status: 'Final',\n    minimumHardfork: 'london',\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {\n        difficultyBombDelay: {\n            v: 10700000,\n            d: 'the amount of blocks to delay the difficulty bomb with',\n        },\n    },\n};\n//# sourceMappingURL=4345.js.map","export default {\n    name: 'EIP-4399',\n    number: 4399,\n    comment: 'Supplant DIFFICULTY opcode with PREVRANDAO',\n    url: 'https://eips.ethereum.org/EIPS/eip-4399',\n    status: 'Review',\n    minimumHardfork: 'london',\n    requiredEIPs: [],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=4399.js.map","export default {\n    name: 'EIP-5133',\n    number: 5133,\n    comment: 'Delaying Difficulty Bomb to mid-September 2022',\n    url: 'https://eips.ethereum.org/EIPS/eip-5133',\n    status: 'Draft',\n    minimumHardfork: 'grayGlacier',\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {\n        difficultyBombDelay: {\n            v: 11400000,\n            d: 'the amount of blocks to delay the difficulty bomb with',\n        },\n    },\n};\n//# sourceMappingURL=5133.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport e1153 from './1153.js';\nimport e1559 from './1559.js';\nimport e2315 from './2315.js';\nimport e2537 from './2537.js';\nimport e2565 from './2565.js';\nimport e2718 from './2718.js';\nimport e2929 from './2929.js';\nimport e2930 from './2930.js';\nimport e3198 from './3198.js';\nimport e3529 from './3529.js';\nimport e3540 from './3540.js';\nimport e3541 from './3541.js';\nimport e3554 from './3554.js';\nimport e3607 from './3607.js';\nimport e3651 from './3651.js';\nimport e3670 from './3670.js';\nimport e3675 from './3675.js';\nimport e3855 from './3855.js';\nimport e3860 from './3860.js';\nimport e4345 from './4345.js';\nimport e4399 from './4399.js';\nimport e5133 from './5133.js';\nexport const EIPs = {\n    1153: e1153,\n    1559: e1559,\n    2315: e2315,\n    2537: e2537,\n    2565: e2565,\n    2718: e2718,\n    2929: e2929,\n    2930: e2930,\n    3198: e3198,\n    3529: e3529,\n    3540: e3540,\n    3541: e3541,\n    3554: e3554,\n    3607: e3607,\n    3651: e3651,\n    3670: e3670,\n    3675: e3675,\n    3855: e3855,\n    3860: e3860,\n    4345: e4345,\n    4399: e4399,\n    5133: e5133,\n};\n//# sourceMappingURL=index.js.map","export default {\n    name: 'chainstart',\n    comment: 'Start of the Ethereum main chain',\n    url: '',\n    status: '',\n    gasConfig: {\n        minGasLimit: {\n            v: 5000,\n            d: 'Minimum the gas limit may ever be',\n        },\n        gasLimitBoundDivisor: {\n            v: 1024,\n            d: 'The bound divisor of the gas limit, used in update calculations',\n        },\n        maxRefundQuotient: {\n            v: 2,\n            d: 'Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)',\n        },\n    },\n    gasPrices: {\n        base: {\n            v: 2,\n            d: 'Gas base cost, used e.g. for ChainID opcode (Istanbul)',\n        },\n        tierStep: {\n            v: [0, 2, 3, 5, 8, 10, 20],\n            d: 'Once per operation, for a selection of them',\n        },\n        exp: {\n            v: 10,\n            d: 'Base fee of the EXP opcode',\n        },\n        expByte: {\n            v: 10,\n            d: 'Times ceil(log256(exponent)) for the EXP instruction',\n        },\n        sha3: {\n            v: 30,\n            d: 'Base fee of the SHA3 opcode',\n        },\n        sha3Word: {\n            v: 6,\n            d: \"Once per word of the SHA3 operation's data\",\n        },\n        sload: {\n            v: 50,\n            d: 'Base fee of the SLOAD opcode',\n        },\n        sstoreSet: {\n            v: 20000,\n            d: 'Once per SSTORE operation if the zeroness changes from zero',\n        },\n        sstoreReset: {\n            v: 5000,\n            d: 'Once per SSTORE operation if the zeroness does not change from zero',\n        },\n        sstoreRefund: {\n            v: 15000,\n            d: 'Once per SSTORE operation if the zeroness changes to zero',\n        },\n        jumpdest: {\n            v: 1,\n            d: 'Base fee of the JUMPDEST opcode',\n        },\n        log: {\n            v: 375,\n            d: 'Base fee of the LOG opcode',\n        },\n        logData: {\n            v: 8,\n            d: \"Per byte in a LOG* operation's data\",\n        },\n        logTopic: {\n            v: 375,\n            d: 'Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas',\n        },\n        create: {\n            v: 32000,\n            d: 'Base fee of the CREATE opcode',\n        },\n        call: {\n            v: 40,\n            d: 'Base fee of the CALL opcode',\n        },\n        callStipend: {\n            v: 2300,\n            d: 'Free gas given at beginning of call',\n        },\n        callValueTransfer: {\n            v: 9000,\n            d: 'Paid for CALL when the value transfor is non-zero',\n        },\n        callNewAccount: {\n            v: 25000,\n            d: \"Paid for CALL when the destination address didn't exist prior\",\n        },\n        selfdestructRefund: {\n            v: 24000,\n            d: 'Refunded following a selfdestruct operation',\n        },\n        memory: {\n            v: 3,\n            d: 'Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL',\n        },\n        quadCoeffDiv: {\n            v: 512,\n            d: 'Divisor for the quadratic particle of the memory cost equation',\n        },\n        createData: {\n            v: 200,\n            d: '',\n        },\n        tx: {\n            v: 21000,\n            d: 'Per transaction. NOTE: Not payable on data of calls between transactions',\n        },\n        txCreation: {\n            v: 32000,\n            d: 'The cost of creating a contract via tx',\n        },\n        txDataZero: {\n            v: 4,\n            d: 'Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions',\n        },\n        txDataNonZero: {\n            v: 68,\n            d: 'Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions',\n        },\n        copy: {\n            v: 3,\n            d: 'Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added',\n        },\n        ecRecover: {\n            v: 3000,\n            d: '',\n        },\n        sha256: {\n            v: 60,\n            d: '',\n        },\n        sha256Word: {\n            v: 12,\n            d: '',\n        },\n        ripemd160: {\n            v: 600,\n            d: '',\n        },\n        ripemd160Word: {\n            v: 120,\n            d: '',\n        },\n        identity: {\n            v: 15,\n            d: '',\n        },\n        identityWord: {\n            v: 3,\n            d: '',\n        },\n        stop: {\n            v: 0,\n            d: 'Base fee of the STOP opcode',\n        },\n        add: {\n            v: 3,\n            d: 'Base fee of the ADD opcode',\n        },\n        mul: {\n            v: 5,\n            d: 'Base fee of the MUL opcode',\n        },\n        sub: {\n            v: 3,\n            d: 'Base fee of the SUB opcode',\n        },\n        div: {\n            v: 5,\n            d: 'Base fee of the DIV opcode',\n        },\n        sdiv: {\n            v: 5,\n            d: 'Base fee of the SDIV opcode',\n        },\n        mod: {\n            v: 5,\n            d: 'Base fee of the MOD opcode',\n        },\n        smod: {\n            v: 5,\n            d: 'Base fee of the SMOD opcode',\n        },\n        addmod: {\n            v: 8,\n            d: 'Base fee of the ADDMOD opcode',\n        },\n        mulmod: {\n            v: 8,\n            d: 'Base fee of the MULMOD opcode',\n        },\n        signextend: {\n            v: 5,\n            d: 'Base fee of the SIGNEXTEND opcode',\n        },\n        lt: {\n            v: 3,\n            d: 'Base fee of the LT opcode',\n        },\n        gt: {\n            v: 3,\n            d: 'Base fee of the GT opcode',\n        },\n        slt: {\n            v: 3,\n            d: 'Base fee of the SLT opcode',\n        },\n        sgt: {\n            v: 3,\n            d: 'Base fee of the SGT opcode',\n        },\n        eq: {\n            v: 3,\n            d: 'Base fee of the EQ opcode',\n        },\n        iszero: {\n            v: 3,\n            d: 'Base fee of the ISZERO opcode',\n        },\n        and: {\n            v: 3,\n            d: 'Base fee of the AND opcode',\n        },\n        or: {\n            v: 3,\n            d: 'Base fee of the OR opcode',\n        },\n        xor: {\n            v: 3,\n            d: 'Base fee of the XOR opcode',\n        },\n        not: {\n            v: 3,\n            d: 'Base fee of the NOT opcode',\n        },\n        byte: {\n            v: 3,\n            d: 'Base fee of the BYTE opcode',\n        },\n        address: {\n            v: 2,\n            d: 'Base fee of the ADDRESS opcode',\n        },\n        balance: {\n            v: 20,\n            d: 'Base fee of the BALANCE opcode',\n        },\n        origin: {\n            v: 2,\n            d: 'Base fee of the ORIGIN opcode',\n        },\n        caller: {\n            v: 2,\n            d: 'Base fee of the CALLER opcode',\n        },\n        callvalue: {\n            v: 2,\n            d: 'Base fee of the CALLVALUE opcode',\n        },\n        calldataload: {\n            v: 3,\n            d: 'Base fee of the CALLDATALOAD opcode',\n        },\n        calldatasize: {\n            v: 2,\n            d: 'Base fee of the CALLDATASIZE opcode',\n        },\n        calldatacopy: {\n            v: 3,\n            d: 'Base fee of the CALLDATACOPY opcode',\n        },\n        codesize: {\n            v: 2,\n            d: 'Base fee of the CODESIZE opcode',\n        },\n        codecopy: {\n            v: 3,\n            d: 'Base fee of the CODECOPY opcode',\n        },\n        gasprice: {\n            v: 2,\n            d: 'Base fee of the GASPRICE opcode',\n        },\n        extcodesize: {\n            v: 20,\n            d: 'Base fee of the EXTCODESIZE opcode',\n        },\n        extcodecopy: {\n            v: 20,\n            d: 'Base fee of the EXTCODECOPY opcode',\n        },\n        blockhash: {\n            v: 20,\n            d: 'Base fee of the BLOCKHASH opcode',\n        },\n        coinbase: {\n            v: 2,\n            d: 'Base fee of the COINBASE opcode',\n        },\n        timestamp: {\n            v: 2,\n            d: 'Base fee of the TIMESTAMP opcode',\n        },\n        number: {\n            v: 2,\n            d: 'Base fee of the NUMBER opcode',\n        },\n        difficulty: {\n            v: 2,\n            d: 'Base fee of the DIFFICULTY opcode',\n        },\n        gaslimit: {\n            v: 2,\n            d: 'Base fee of the GASLIMIT opcode',\n        },\n        pop: {\n            v: 2,\n            d: 'Base fee of the POP opcode',\n        },\n        mload: {\n            v: 3,\n            d: 'Base fee of the MLOAD opcode',\n        },\n        mstore: {\n            v: 3,\n            d: 'Base fee of the MSTORE opcode',\n        },\n        mstore8: {\n            v: 3,\n            d: 'Base fee of the MSTORE8 opcode',\n        },\n        sstore: {\n            v: 0,\n            d: 'Base fee of the SSTORE opcode',\n        },\n        jump: {\n            v: 8,\n            d: 'Base fee of the JUMP opcode',\n        },\n        jumpi: {\n            v: 10,\n            d: 'Base fee of the JUMPI opcode',\n        },\n        pc: {\n            v: 2,\n            d: 'Base fee of the PC opcode',\n        },\n        msize: {\n            v: 2,\n            d: 'Base fee of the MSIZE opcode',\n        },\n        gas: {\n            v: 2,\n            d: 'Base fee of the GAS opcode',\n        },\n        push: {\n            v: 3,\n            d: 'Base fee of the PUSH opcode',\n        },\n        dup: {\n            v: 3,\n            d: 'Base fee of the DUP opcode',\n        },\n        swap: {\n            v: 3,\n            d: 'Base fee of the SWAP opcode',\n        },\n        callcode: {\n            v: 40,\n            d: 'Base fee of the CALLCODE opcode',\n        },\n        return: {\n            v: 0,\n            d: 'Base fee of the RETURN opcode',\n        },\n        invalid: {\n            v: 0,\n            d: 'Base fee of the INVALID opcode',\n        },\n        selfdestruct: {\n            v: 0,\n            d: 'Base fee of the SELFDESTRUCT opcode',\n        },\n    },\n    vm: {\n        stackLimit: {\n            v: 1024,\n            d: 'Maximum size of VM stack allowed',\n        },\n        callCreateDepth: {\n            v: 1024,\n            d: 'Maximum depth of call/create stack',\n        },\n        maxExtraDataSize: {\n            v: 32,\n            d: 'Maximum size extra data may be after Genesis',\n        },\n    },\n    pow: {\n        minimumDifficulty: {\n            v: 131072,\n            d: 'The minimum that the difficulty may ever be',\n        },\n        difficultyBoundDivisor: {\n            v: 2048,\n            d: 'The bound divisor of the difficulty, used in the update calculations',\n        },\n        durationLimit: {\n            v: 13,\n            d: 'The decision boundary on the blocktime duration used to determine whether difficulty should go up or not',\n        },\n        epochDuration: {\n            v: 30000,\n            d: 'Duration between proof-of-work epochs',\n        },\n        timebombPeriod: {\n            v: 100000,\n            d: 'Exponential difficulty timebomb period',\n        },\n        minerReward: {\n            v: '5000000000000000000',\n            d: 'the amount a miner get rewarded for mining a block',\n        },\n        difficultyBombDelay: {\n            v: 0,\n            d: 'the amount of blocks to delay the difficulty bomb with',\n        },\n    },\n};\n//# sourceMappingURL=chainstart.js.map","export default {\n    name: 'dao',\n    comment: 'DAO rescue hardfork',\n    url: 'https://eips.ethereum.org/EIPS/eip-779',\n    status: 'Final',\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=dao.js.map","export default {\n    name: 'homestead',\n    comment: 'Homestead hardfork with protocol and network changes',\n    url: 'https://eips.ethereum.org/EIPS/eip-606',\n    status: 'Final',\n    gasConfig: {},\n    gasPrices: {\n        delegatecall: {\n            v: 40,\n            d: 'Base fee of the DELEGATECALL opcode',\n        },\n    },\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=homestead.js.map","export default {\n    name: 'tangerineWhistle',\n    comment: 'Hardfork with gas cost changes for IO-heavy operations',\n    url: 'https://eips.ethereum.org/EIPS/eip-608',\n    status: 'Final',\n    gasConfig: {},\n    gasPrices: {\n        sload: {\n            v: 200,\n            d: 'Once per SLOAD operation',\n        },\n        call: {\n            v: 700,\n            d: 'Once per CALL operation & message call transaction',\n        },\n        extcodesize: {\n            v: 700,\n            d: 'Base fee of the EXTCODESIZE opcode',\n        },\n        extcodecopy: {\n            v: 700,\n            d: 'Base fee of the EXTCODECOPY opcode',\n        },\n        balance: {\n            v: 400,\n            d: 'Base fee of the BALANCE opcode',\n        },\n        delegatecall: {\n            v: 700,\n            d: 'Base fee of the DELEGATECALL opcode',\n        },\n        callcode: {\n            v: 700,\n            d: 'Base fee of the CALLCODE opcode',\n        },\n        selfdestruct: {\n            v: 5000,\n            d: 'Base fee of the SELFDESTRUCT opcode',\n        },\n    },\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=tangerineWhistle.js.map","export default {\n    name: 'spuriousDragon',\n    comment: 'HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit',\n    url: 'https://eips.ethereum.org/EIPS/eip-607',\n    status: 'Final',\n    gasConfig: {},\n    gasPrices: {\n        expByte: {\n            v: 50,\n            d: 'Times ceil(log256(exponent)) for the EXP instruction',\n        },\n    },\n    vm: {\n        maxCodeSize: {\n            v: 24576,\n            d: 'Maximum length of contract code',\n        },\n    },\n    pow: {},\n};\n//# sourceMappingURL=spuriousDragon.js.map","export default {\n    name: 'byzantium',\n    comment: 'Hardfork with new precompiles, instructions and other protocol changes',\n    url: 'https://eips.ethereum.org/EIPS/eip-609',\n    status: 'Final',\n    gasConfig: {},\n    gasPrices: {\n        modexpGquaddivisor: {\n            v: 20,\n            d: 'Gquaddivisor from modexp precompile for gas calculation',\n        },\n        ecAdd: {\n            v: 500,\n            d: 'Gas costs for curve addition precompile',\n        },\n        ecMul: {\n            v: 40000,\n            d: 'Gas costs for curve multiplication precompile',\n        },\n        ecPairing: {\n            v: 100000,\n            d: 'Base gas costs for curve pairing precompile',\n        },\n        ecPairingWord: {\n            v: 80000,\n            d: 'Gas costs regarding curve pairing precompile input length',\n        },\n        revert: {\n            v: 0,\n            d: 'Base fee of the REVERT opcode',\n        },\n        staticcall: {\n            v: 700,\n            d: 'Base fee of the STATICCALL opcode',\n        },\n        returndatasize: {\n            v: 2,\n            d: 'Base fee of the RETURNDATASIZE opcode',\n        },\n        returndatacopy: {\n            v: 3,\n            d: 'Base fee of the RETURNDATACOPY opcode',\n        },\n    },\n    vm: {},\n    pow: {\n        minerReward: {\n            v: '3000000000000000000',\n            d: 'the amount a miner get rewarded for mining a block',\n        },\n        difficultyBombDelay: {\n            v: 3000000,\n            d: 'the amount of blocks to delay the difficulty bomb with',\n        },\n    },\n};\n//# sourceMappingURL=byzantium.js.map","export default {\n    name: 'constantinople',\n    comment: 'Postponed hardfork including EIP-1283 (SSTORE gas metering changes)',\n    url: 'https://eips.ethereum.org/EIPS/eip-1013',\n    status: 'Final',\n    gasConfig: {},\n    gasPrices: {\n        netSstoreNoopGas: {\n            v: 200,\n            d: \"Once per SSTORE operation if the value doesn't change\",\n        },\n        netSstoreInitGas: {\n            v: 20000,\n            d: 'Once per SSTORE operation from clean zero',\n        },\n        netSstoreCleanGas: {\n            v: 5000,\n            d: 'Once per SSTORE operation from clean non-zero',\n        },\n        netSstoreDirtyGas: {\n            v: 200,\n            d: 'Once per SSTORE operation from dirty',\n        },\n        netSstoreClearRefund: {\n            v: 15000,\n            d: 'Once per SSTORE operation for clearing an originally existing storage slot',\n        },\n        netSstoreResetRefund: {\n            v: 4800,\n            d: 'Once per SSTORE operation for resetting to the original non-zero value',\n        },\n        netSstoreResetClearRefund: {\n            v: 19800,\n            d: 'Once per SSTORE operation for resetting to the original zero value',\n        },\n        shl: {\n            v: 3,\n            d: 'Base fee of the SHL opcode',\n        },\n        shr: {\n            v: 3,\n            d: 'Base fee of the SHR opcode',\n        },\n        sar: {\n            v: 3,\n            d: 'Base fee of the SAR opcode',\n        },\n        extcodehash: {\n            v: 400,\n            d: 'Base fee of the EXTCODEHASH opcode',\n        },\n        create2: {\n            v: 32000,\n            d: 'Base fee of the CREATE2 opcode',\n        },\n    },\n    vm: {},\n    pow: {\n        minerReward: {\n            v: '2000000000000000000',\n            d: 'The amount a miner gets rewarded for mining a block',\n        },\n        difficultyBombDelay: {\n            v: 5000000,\n            d: 'the amount of blocks to delay the difficulty bomb with',\n        },\n    },\n};\n//# sourceMappingURL=constantinople.js.map","export default {\n    name: 'petersburg',\n    comment: 'Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople',\n    url: 'https://eips.ethereum.org/EIPS/eip-1716',\n    status: 'Final',\n    gasConfig: {},\n    gasPrices: {\n        netSstoreNoopGas: {\n            v: null,\n            d: 'Removed along EIP-1283',\n        },\n        netSstoreInitGas: {\n            v: null,\n            d: 'Removed along EIP-1283',\n        },\n        netSstoreCleanGas: {\n            v: null,\n            d: 'Removed along EIP-1283',\n        },\n        netSstoreDirtyGas: {\n            v: null,\n            d: 'Removed along EIP-1283',\n        },\n        netSstoreClearRefund: {\n            v: null,\n            d: 'Removed along EIP-1283',\n        },\n        netSstoreResetRefund: {\n            v: null,\n            d: 'Removed along EIP-1283',\n        },\n        netSstoreResetClearRefund: {\n            v: null,\n            d: 'Removed along EIP-1283',\n        },\n    },\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=petersburg.js.map","export default {\n    name: 'istanbul',\n    comment: 'HF targeted for December 2019 following the Constantinople/Petersburg HF',\n    url: 'https://eips.ethereum.org/EIPS/eip-1679',\n    status: 'Final',\n    gasConfig: {},\n    gasPrices: {\n        blake2Round: {\n            v: 1,\n            d: 'Gas cost per round for the Blake2 F precompile',\n        },\n        ecAdd: {\n            v: 150,\n            d: 'Gas costs for curve addition precompile',\n        },\n        ecMul: {\n            v: 6000,\n            d: 'Gas costs for curve multiplication precompile',\n        },\n        ecPairing: {\n            v: 45000,\n            d: 'Base gas costs for curve pairing precompile',\n        },\n        ecPairingWord: {\n            v: 34000,\n            d: 'Gas costs regarding curve pairing precompile input length',\n        },\n        txDataNonZero: {\n            v: 16,\n            d: 'Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions',\n        },\n        sstoreSentryGasEIP2200: {\n            v: 2300,\n            d: 'Minimum gas required to be present for an SSTORE call, not consumed',\n        },\n        sstoreNoopGasEIP2200: {\n            v: 800,\n            d: \"Once per SSTORE operation if the value doesn't change\",\n        },\n        sstoreDirtyGasEIP2200: {\n            v: 800,\n            d: 'Once per SSTORE operation if a dirty value is changed',\n        },\n        sstoreInitGasEIP2200: {\n            v: 20000,\n            d: 'Once per SSTORE operation from clean zero to non-zero',\n        },\n        sstoreInitRefundEIP2200: {\n            v: 19200,\n            d: 'Once per SSTORE operation for resetting to the original zero value',\n        },\n        sstoreCleanGasEIP2200: {\n            v: 5000,\n            d: 'Once per SSTORE operation from clean non-zero to something else',\n        },\n        sstoreCleanRefundEIP2200: {\n            v: 4200,\n            d: 'Once per SSTORE operation for resetting to the original non-zero value',\n        },\n        sstoreClearRefundEIP2200: {\n            v: 15000,\n            d: 'Once per SSTORE operation for clearing an originally existing storage slot',\n        },\n        balance: {\n            v: 700,\n            d: 'Base fee of the BALANCE opcode',\n        },\n        extcodehash: {\n            v: 700,\n            d: 'Base fee of the EXTCODEHASH opcode',\n        },\n        chainid: {\n            v: 2,\n            d: 'Base fee of the CHAINID opcode',\n        },\n        selfbalance: {\n            v: 5,\n            d: 'Base fee of the SELFBALANCE opcode',\n        },\n        sload: {\n            v: 800,\n            d: 'Base fee of the SLOAD opcode',\n        },\n    },\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=istanbul.js.map","export default {\n    name: 'muirGlacier',\n    comment: 'HF to delay the difficulty bomb',\n    url: 'https://eips.ethereum.org/EIPS/eip-2384',\n    status: 'Final',\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {\n        difficultyBombDelay: {\n            v: 9000000,\n            d: 'the amount of blocks to delay the difficulty bomb with',\n        },\n    },\n};\n//# sourceMappingURL=muirGlacier.js.map","export default {\n    name: 'berlin',\n    comment: 'HF targeted for July 2020 following the Muir Glacier HF',\n    url: 'https://eips.ethereum.org/EIPS/eip-2070',\n    status: 'Final',\n    eips: [2565, 2929, 2718, 2930],\n};\n//# sourceMappingURL=berlin.js.map","export default {\n    name: 'london',\n    comment: 'HF targeted for July 2021 following the Berlin fork',\n    url: 'https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md',\n    status: 'Final',\n    eips: [1559, 3198, 3529, 3541],\n};\n//# sourceMappingURL=london.js.map","export default {\n    name: 'shanghai',\n    comment: 'Next feature hardfork after the merge hardfork having withdrawals, warm coinbase, push0, limit/meter initcode',\n    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/shanghai.md',\n    status: 'Final',\n    eips: [3651, 3855, 3860, 4895],\n};\n//# sourceMappingURL=shanghai.js.map","export default {\n    name: 'arrowGlacier',\n    comment: 'HF to delay the difficulty bomb',\n    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/arrow-glacier.md',\n    status: 'Final',\n    eips: [4345],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=arrowGlacier.js.map","export default {\n    name: 'grayGlacier',\n    comment: 'Delaying the difficulty bomb to Mid September 2022',\n    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/gray-glacier.md',\n    status: 'Draft',\n    eips: [5133],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n};\n//# sourceMappingURL=grayGlacier.js.map","export default {\n    name: 'mergeForkIdTransition',\n    comment: 'Pre-merge hardfork to fork off non-upgraded clients',\n    url: 'https://eips.ethereum.org/EIPS/eip-3675',\n    status: 'Draft',\n    eips: [],\n};\n//# sourceMappingURL=mergeForkIdTransition.js.map","export default {\n    name: 'merge',\n    comment: 'Hardfork to upgrade the consensus mechanism to Proof-of-Stake',\n    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/merge.md',\n    status: 'Final',\n    consensus: {\n        type: 'pos',\n        algorithm: 'casper',\n        casper: {},\n    },\n    eips: [3675, 4399],\n};\n//# sourceMappingURL=merge.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport chainstart from './chainstart.js';\nimport dao from './dao.js';\nimport homestead from './homestead.js';\nimport tangerineWhistle from './tangerineWhistle.js';\nimport spuriousDragon from './spuriousDragon.js';\nimport byzantium from './byzantium.js';\nimport constantinople from './constantinople.js';\nimport petersburg from './petersburg.js';\nimport istanbul from './istanbul.js';\nimport muirGlacier from './muirGlacier.js';\nimport berlin from './berlin.js';\nimport london from './london.js';\nimport shanghai from './shanghai.js';\nimport arrowGlacier from './arrowGlacier.js';\nimport grayGlacier from './grayGlacier.js';\nimport mergeForkIdTransition from './mergeForkIdTransition.js';\nimport merge from './merge.js';\nexport const hardforks = {\n    chainstart,\n    homestead,\n    dao,\n    tangerineWhistle,\n    spuriousDragon,\n    byzantium,\n    constantinople,\n    petersburg,\n    istanbul,\n    muirGlacier,\n    berlin,\n    london,\n    shanghai,\n    arrowGlacier,\n    grayGlacier,\n    mergeForkIdTransition,\n    merge,\n};\n//# sourceMappingURL=index.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport pkg from 'crc-32';\nimport { EventEmitter, bytesToHex, hexToBytes, uint8ArrayConcat } from 'web3-utils';\nimport { TypeOutput } from './types.js';\nimport { intToUint8Array, toType, parseGethGenesis } from './utils.js';\nimport goerli from './chains/goerli.js';\nimport mainnet from './chains/mainnet.js';\nimport sepolia from './chains/sepolia.js';\nimport { EIPs } from './eips/index.js';\nimport { Chain, CustomChain, Hardfork } from './enums.js';\nimport { hardforks as HARDFORK_SPECS } from './hardforks/index.js';\nconst { buf: crc32Uint8Array } = pkg;\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nexport class Common extends EventEmitter {\n    /**\n     * Creates a {@link Common} object for a custom chain, based on a standard one.\n     *\n     * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n     * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n     *\n     * ```javascript\n     * Common.custom({chainId: 123})\n     * ```\n     *\n     * There are also selected supported custom chains which can be initialized by using one of the\n     * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n     *\n     * ```javascript\n     * Common.custom(CustomChains.MaticMumbai)\n     * ```\n     *\n     * Note that these supported custom chains only provide some base parameters (usually the chain and\n     * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n     * the `web3-utils/tx` library to a Layer-2 chain).\n     *\n     * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n     * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n     */\n    static custom(chainParamsOrName, opts = {}) {\n        var _a;\n        const baseChain = (_a = opts.baseChain) !== null && _a !== void 0 ? _a : 'mainnet';\n        const standardChainParams = Object.assign({}, Common._getChainParams(baseChain));\n        standardChainParams.name = 'custom-chain';\n        if (typeof chainParamsOrName !== 'string') {\n            return new Common(Object.assign({ chain: Object.assign(Object.assign({}, standardChainParams), chainParamsOrName) }, opts));\n        }\n        if (chainParamsOrName === CustomChain.PolygonMainnet) {\n            return Common.custom({\n                name: CustomChain.PolygonMainnet,\n                chainId: 137,\n                networkId: 137,\n            }, opts);\n        }\n        if (chainParamsOrName === CustomChain.PolygonMumbai) {\n            return Common.custom({\n                name: CustomChain.PolygonMumbai,\n                chainId: 80001,\n                networkId: 80001,\n            }, opts);\n        }\n        if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n            return Common.custom({\n                name: CustomChain.ArbitrumRinkebyTestnet,\n                chainId: 421611,\n                networkId: 421611,\n            }, opts);\n        }\n        if (chainParamsOrName === CustomChain.ArbitrumOne) {\n            return Common.custom({\n                name: CustomChain.ArbitrumOne,\n                chainId: 42161,\n                networkId: 42161,\n            }, opts);\n        }\n        if (chainParamsOrName === CustomChain.xDaiChain) {\n            return Common.custom({\n                name: CustomChain.xDaiChain,\n                chainId: 100,\n                networkId: 100,\n            }, opts);\n        }\n        if (chainParamsOrName === CustomChain.OptimisticKovan) {\n            return Common.custom({\n                name: CustomChain.OptimisticKovan,\n                chainId: 69,\n                networkId: 69,\n            }, Object.assign({ hardfork: Hardfork.Berlin }, opts));\n        }\n        if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n            return Common.custom({\n                name: CustomChain.OptimisticEthereum,\n                chainId: 10,\n                networkId: 10,\n            }, Object.assign({ hardfork: Hardfork.Berlin }, opts));\n        }\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        throw new Error(`Custom chain ${chainParamsOrName} not supported`);\n    }\n    /**\n     * Static method to load and set common from a geth genesis json\n     * @param genesisJson json of geth configuration\n     * @param { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge } to further configure the common instance\n     * @returns Common\n     */\n    static fromGethGenesis(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    genesisJson, { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge }) {\n        var _a;\n        const genesisParams = parseGethGenesis(genesisJson, chain, mergeForkIdPostMerge);\n        const common = new Common({\n            chain: (_a = genesisParams.name) !== null && _a !== void 0 ? _a : 'custom',\n            customChains: [genesisParams],\n            eips,\n            hardfork: hardfork !== null && hardfork !== void 0 ? hardfork : genesisParams.hardfork,\n        });\n        if (genesisHash !== undefined) {\n            common.setForkHashes(genesisHash);\n        }\n        return common;\n    }\n    /**\n     * Static method to determine if a {@link chainId} is supported as a standard chain\n     * @param chainId bigint id (`1`) of a standard chain\n     * @returns boolean\n     */\n    static isSupportedChainId(chainId) {\n        const initializedChains = this._getInitializedChains();\n        return Boolean(initializedChains.names[chainId.toString()]);\n    }\n    static _getChainParams(_chain, customChains) {\n        let chain = _chain;\n        const initializedChains = this._getInitializedChains(customChains);\n        if (typeof chain === 'number' || typeof chain === 'bigint') {\n            chain = chain.toString();\n            if (initializedChains.names[chain]) {\n                const name = initializedChains.names[chain];\n                return initializedChains[name];\n            }\n            throw new Error(`Chain with ID ${chain} not supported`);\n        }\n        if (initializedChains[chain] !== undefined) {\n            return initializedChains[chain];\n        }\n        throw new Error(`Chain with name ${chain} not supported`);\n    }\n    constructor(opts) {\n        var _a, _b;\n        super();\n        this._eips = [];\n        this._customChains = (_a = opts.customChains) !== null && _a !== void 0 ? _a : [];\n        this._chainParams = this.setChain(opts.chain);\n        this.DEFAULT_HARDFORK = (_b = this._chainParams.defaultHardfork) !== null && _b !== void 0 ? _b : Hardfork.Merge;\n        // Assign hardfork changes in the sequence of the applied hardforks\n        this.HARDFORK_CHANGES = this.hardforks().map(hf => [\n            hf.name,\n            HARDFORK_SPECS[hf.name],\n        ]);\n        this._hardfork = this.DEFAULT_HARDFORK;\n        if (opts.hardfork !== undefined) {\n            this.setHardfork(opts.hardfork);\n        }\n        if (opts.eips) {\n            this.setEIPs(opts.eips);\n        }\n    }\n    /**\n     * Sets the chain\n     * @param chain String ('mainnet') or Number (1) chain representation.\n     *              Or, a Dictionary of chain parameters for a private network.\n     * @returns The dictionary with parameters set as chain\n     */\n    setChain(chain) {\n        if (typeof chain === 'number' || typeof chain === 'bigint' || typeof chain === 'string') {\n            this._chainParams = Common._getChainParams(chain, this._customChains);\n        }\n        else if (typeof chain === 'object') {\n            if (this._customChains.length > 0) {\n                throw new Error('Chain must be a string, number, or bigint when initialized with customChains passed in');\n            }\n            const required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n            for (const param of required) {\n                if (!(param in chain)) {\n                    throw new Error(`Missing required chain parameter: ${param}`);\n                }\n            }\n            this._chainParams = chain;\n        }\n        else {\n            throw new Error('Wrong input format');\n        }\n        for (const hf of this.hardforks()) {\n            if (hf.block === undefined) {\n                throw new Error(`Hardfork cannot have undefined block number`);\n            }\n        }\n        return this._chainParams;\n    }\n    /**\n     * Sets the hardfork to get params for\n     * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n     */\n    setHardfork(hardfork) {\n        let existing = false;\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            if (hfChanges[0] === hardfork) {\n                if (this._hardfork !== hardfork) {\n                    this._hardfork = hardfork;\n                    this.emit('hardforkChanged', hardfork);\n                }\n                existing = true;\n            }\n        }\n        if (!existing) {\n            throw new Error(`Hardfork with name ${hardfork} not supported`);\n        }\n    }\n    /**\n     * Returns the hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td : total difficulty of the parent block (for block hf) OR of the chain latest (for chain hf)\n     * @param timestamp: timestamp in seconds at which block was/is to be minted\n     * @returns The name of the HF\n     */\n    getHardforkByBlockNumber(_blockNumber, _td, _timestamp) {\n        const blockNumber = toType(_blockNumber, TypeOutput.BigInt);\n        const td = toType(_td, TypeOutput.BigInt);\n        const timestamp = toType(_timestamp, TypeOutput.Number);\n        // Filter out hardforks with no block number, no ttd or no timestamp (i.e. unapplied hardforks)\n        const hfs = this.hardforks().filter(hf => \n        // eslint-disable-next-line no-null/no-null\n        hf.block !== null ||\n            // eslint-disable-next-line no-null/no-null\n            (hf.ttd !== null && hf.ttd !== undefined) ||\n            hf.timestamp !== undefined);\n        // eslint-disable-next-line no-null/no-null\n        const mergeIndex = hfs.findIndex(hf => hf.ttd !== null && hf.ttd !== undefined);\n        const doubleTTDHF = hfs\n            .slice(mergeIndex + 1)\n            // eslint-disable-next-line no-null/no-null\n            .findIndex(hf => hf.ttd !== null && hf.ttd !== undefined);\n        if (doubleTTDHF >= 0) {\n            throw Error(`More than one merge hardforks found with ttd specified`);\n        }\n        // Find the first hardfork that has a block number greater than `blockNumber`\n        // (skips the merge hardfork since it cannot have a block number specified).\n        // If timestamp is not provided, it also skips timestamps hardforks to continue\n        // discovering/checking number hardforks.\n        let hfIndex = hfs.findIndex(hf => \n        // eslint-disable-next-line no-null/no-null\n        (hf.block !== null && hf.block > blockNumber) ||\n            (timestamp !== undefined && Number(hf.timestamp) > timestamp));\n        if (hfIndex === -1) {\n            // all hardforks apply, set hfIndex to the last one as that's the candidate\n            hfIndex = hfs.length;\n        }\n        else if (hfIndex === 0) {\n            // cannot have a case where a block number is before all applied hardforks\n            // since the chain has to start with a hardfork\n            throw Error('Must have at least one hardfork at block 0');\n        }\n        // If timestamp is not provided, we need to rollback to the last hf with block or ttd\n        if (timestamp === undefined) {\n            const stepBack = hfs\n                .slice(0, hfIndex)\n                .reverse()\n                // eslint-disable-next-line no-null/no-null\n                .findIndex(hf => hf.block !== null || hf.ttd !== undefined);\n            hfIndex -= stepBack;\n        }\n        // Move hfIndex one back to arrive at candidate hardfork\n        hfIndex -= 1;\n        // If the timestamp was not provided, we could have skipped timestamp hardforks to look for number\n        // hardforks. so it will now be needed to rollback\n        // eslint-disable-next-line no-null/no-null\n        if (hfs[hfIndex].block === null && hfs[hfIndex].timestamp === undefined) {\n            // We're on the merge hardfork.  Let's check the TTD\n            // eslint-disable-next-line no-null/no-null\n            if (td === undefined || td === null || BigInt(hfs[hfIndex].ttd) > td) {\n                // Merge ttd greater than current td so we're on hardfork before merge\n                hfIndex -= 1;\n            }\n            // eslint-disable-next-line no-null/no-null\n        }\n        else if (mergeIndex >= 0 && td !== undefined && td !== null) {\n            if (hfIndex >= mergeIndex && BigInt(hfs[mergeIndex].ttd) > td) {\n                throw Error('Maximum HF determined by total difficulty is lower than the block number HF');\n            }\n            else if (hfIndex < mergeIndex && BigInt(hfs[mergeIndex].ttd) <= td) {\n                throw Error('HF determined by block number is lower than the minimum total difficulty HF');\n            }\n        }\n        const hfStartIndex = hfIndex;\n        // Move the hfIndex to the end of the hardforks that might be scheduled on the same block/timestamp\n        // This won't anyway be the case with Merge hfs\n        for (; hfIndex < hfs.length - 1; hfIndex += 1) {\n            // break out if hfIndex + 1 is not scheduled at hfIndex\n            if (hfs[hfIndex].block !== hfs[hfIndex + 1].block ||\n                hfs[hfIndex].timestamp !== hfs[hfIndex + 1].timestamp) {\n                break;\n            }\n        }\n        if (timestamp) {\n            const minTimeStamp = hfs\n                .slice(0, hfStartIndex)\n                .reduce((acc, hf) => { var _a; return Math.max(Number((_a = hf.timestamp) !== null && _a !== void 0 ? _a : '0'), acc); }, 0);\n            if (minTimeStamp > timestamp) {\n                throw Error(`Maximum HF determined by timestamp is lower than the block number/ttd HF`);\n            }\n            const maxTimeStamp = hfs\n                .slice(hfIndex + 1)\n                .reduce((acc, hf) => { var _a; return Math.min(Number((_a = hf.timestamp) !== null && _a !== void 0 ? _a : timestamp), acc); }, timestamp);\n            if (maxTimeStamp < timestamp) {\n                throw Error(`Maximum HF determined by block number/ttd is lower than timestamp HF`);\n            }\n        }\n        const hardfork = hfs[hfIndex];\n        return hardfork.name;\n    }\n    /**\n     * Sets a new hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td\n     * @param timestamp\n     * @returns The name of the HF set\n     */\n    setHardforkByBlockNumber(blockNumber, td, timestamp) {\n        const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp);\n        this.setHardfork(hardfork);\n        return hardfork;\n    }\n    /**\n     * Internal helper function, returns the params for the given hardfork for the chain set\n     * @param hardfork Hardfork name\n     * @returns Dictionary with hardfork params or null if hardfork not on chain\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    _getHardfork(hardfork) {\n        const hfs = this.hardforks();\n        for (const hf of hfs) {\n            if (hf.name === hardfork)\n                return hf;\n        }\n        // eslint-disable-next-line no-null/no-null\n        return null;\n    }\n    /**\n     * Sets the active EIPs\n     * @param eips\n     */\n    setEIPs(eips = []) {\n        for (const eip of eips) {\n            if (!(eip in EIPs)) {\n                throw new Error(`${eip} not supported`);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument\n            const minHF = this.gteHardfork(EIPs[eip].minimumHardfork);\n            if (!minHF) {\n                throw new Error(\n                // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                `${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (EIPs[eip].requiredEIPs !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                for (const elem of EIPs[eip].requiredEIPs) {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                    if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n                        throw new Error(\n                        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                        `${eip} requires EIP ${elem}, but is not included in the EIP list`);\n                    }\n                }\n            }\n        }\n        this._eips = eips;\n    }\n    /**\n     * Returns a parameter for the current chain setup\n     *\n     * If the parameter is present in an EIP, the EIP always takes precedence.\n     * Otherwise the parameter if taken from the latest applied HF with\n     * a change on the respective parameter.\n     *\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @returns The value requested or `BigInt(0)` if not found\n     */\n    param(topic, name) {\n        // TODO: consider the case that different active EIPs\n        // can change the same parameter\n        let value;\n        for (const eip of this._eips) {\n            value = this.paramByEIP(topic, name, eip);\n            if (value !== undefined)\n                return value;\n        }\n        return this.paramByHardfork(topic, name, this._hardfork);\n    }\n    /**\n     * Returns the parameter corresponding to a hardfork\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param hardfork Hardfork name\n     * @returns The value requested or `BigInt(0)` if not found\n     */\n    paramByHardfork(topic, name, hardfork) {\n        // eslint-disable-next-line no-null/no-null\n        let value = null;\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            // EIP-referencing HF file (e.g. berlin.json)\n            if ('eips' in hfChanges[1]) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n                const hfEIPs = hfChanges[1].eips;\n                for (const eip of hfEIPs) {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                    const valueEIP = this.paramByEIP(topic, name, eip);\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    value = typeof valueEIP === 'bigint' ? valueEIP : value;\n                }\n                // Parameter-inlining HF file (e.g. istanbul.json)\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                if (hfChanges[1][topic] === undefined) {\n                    throw new Error(`Topic ${topic} not defined`);\n                }\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                if (hfChanges[1][topic][name] !== undefined) {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n                    value = hfChanges[1][topic][name].v;\n                }\n            }\n            if (hfChanges[0] === hardfork)\n                break;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return BigInt(value !== null && value !== void 0 ? value : 0);\n    }\n    /**\n     * Returns a parameter corresponding to an EIP\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param eip Number of the EIP\n     * @returns The value requested or `undefined` if not found\n     */\n    // eslint-disable-next-line class-methods-use-this\n    paramByEIP(topic, name, eip) {\n        if (!(eip in EIPs)) {\n            throw new Error(`${eip} not supported`);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const eipParams = EIPs[eip];\n        if (!(topic in eipParams)) {\n            throw new Error(`Topic ${topic} not defined`);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (eipParams[topic][name] === undefined) {\n            return undefined;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n        const value = eipParams[topic][name].v;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return BigInt(value);\n    }\n    /**\n     * Returns a parameter for the hardfork active on block number or\n     * optional provided total difficulty (Merge HF)\n     * @param topic Parameter topic\n     * @param name Parameter name\n     * @param blockNumber Block number\n     * @param td Total difficulty\n     *    * @returns The value requested or `BigInt(0)` if not found\n     */\n    paramByBlock(topic, name, blockNumber, td, timestamp) {\n        const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp);\n        return this.paramByHardfork(topic, name, hardfork);\n    }\n    /**\n     * Checks if an EIP is activated by either being included in the EIPs\n     * manually passed in with the {@link CommonOpts.eips} or in a\n     * hardfork currently being active\n     *\n     * Note: this method only works for EIPs being supported\n     * by the {@link CommonOpts.eips} constructor option\n     * @param eip\n     */\n    isActivatedEIP(eip) {\n        if (this.eips().includes(eip)) {\n            return true;\n        }\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const hf = hfChanges[1];\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument\n            if (this.gteHardfork(hf.name) && 'eips' in hf) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                if (hf.eips.includes(eip)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Checks if set or provided hardfork is active on block number\n     * @param hardfork Hardfork name or null (for HF set)\n     * @param blockNumber\n     * @returns True if HF is active on block number\n     */\n    hardforkIsActiveOnBlock(\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    _hardfork, _blockNumber) {\n        const blockNumber = toType(_blockNumber, TypeOutput.BigInt);\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        const hfBlock = this.hardforkBlock(hardfork);\n        if (typeof hfBlock === 'bigint' && hfBlock !== BigInt(0) && blockNumber >= hfBlock) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Alias to hardforkIsActiveOnBlock when hardfork is set\n     * @param blockNumber\n     * @returns True if HF is active on block number\n     */\n    activeOnBlock(blockNumber) {\n        // eslint-disable-next-line no-null/no-null\n        return this.hardforkIsActiveOnBlock(null, blockNumber);\n    }\n    /**\n     * Sequence based check if given or set HF1 is greater than or equal HF2\n     * @param hardfork1 Hardfork name or null (if set)\n     * @param hardfork2 Hardfork name\n     * @param opts Hardfork options\n     * @returns True if HF1 gte HF2\n     */\n    hardforkGteHardfork(\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    _hardfork1, hardfork2) {\n        const hardfork1 = _hardfork1 !== null && _hardfork1 !== void 0 ? _hardfork1 : this._hardfork;\n        const hardforks = this.hardforks();\n        let posHf1 = -1;\n        let posHf2 = -1;\n        let index = 0;\n        for (const hf of hardforks) {\n            if (hf.name === hardfork1)\n                posHf1 = index;\n            if (hf.name === hardfork2)\n                posHf2 = index;\n            index += 1;\n        }\n        return posHf1 >= posHf2 && posHf2 !== -1;\n    }\n    /**\n     * Alias to hardforkGteHardfork when hardfork is set\n     * @param hardfork Hardfork name\n     * @returns True if hardfork set is greater than hardfork provided\n     */\n    gteHardfork(hardfork) {\n        // eslint-disable-next-line no-null/no-null\n        return this.hardforkGteHardfork(null, hardfork);\n    }\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if unscheduled\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    hardforkBlock(_hardfork) {\n        var _a;\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        const block = (_a = this._getHardfork(hardfork)) === null || _a === void 0 ? void 0 : _a.block;\n        // eslint-disable-next-line no-null/no-null\n        if (block === undefined || block === null) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        return BigInt(block);\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    hardforkTimestamp(_hardfork) {\n        var _a;\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        const timestamp = (_a = this._getHardfork(hardfork)) === null || _a === void 0 ? void 0 : _a.timestamp;\n        // eslint-disable-next-line no-null/no-null\n        if (timestamp === undefined || timestamp === null) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        return BigInt(timestamp);\n    }\n    /**\n     * Returns the hardfork change block for eip\n     * @param eip EIP number\n     * @returns Block number or null if unscheduled\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    eipBlock(eip) {\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const hf = hfChanges[1];\n            if ('eips' in hf) {\n                // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n                if (hf.eips.includes(eip)) {\n                    return this.hardforkBlock(typeof hfChanges[0] === 'number' ? String(hfChanges[0]) : hfChanges[0]);\n                }\n            }\n        }\n        // eslint-disable-next-line no-null/no-null\n        return null;\n    }\n    /**\n     * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Total difficulty or null if no set\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    hardforkTTD(_hardfork) {\n        var _a;\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        const ttd = (_a = this._getHardfork(hardfork)) === null || _a === void 0 ? void 0 : _a.ttd;\n        // eslint-disable-next-line no-null/no-null\n        if (ttd === undefined || ttd === null) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        return BigInt(ttd);\n    }\n    /**\n     * True if block number provided is the hardfork (given or set) change block\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     * @deprecated\n     */\n    isHardforkBlock(_blockNumber, _hardfork) {\n        const blockNumber = toType(_blockNumber, TypeOutput.BigInt);\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        const block = this.hardforkBlock(hardfork);\n        return typeof block === 'bigint' && block !== BigInt(0) ? block === blockNumber : false;\n    }\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block timestamp, number or null if not available\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    nextHardforkBlockOrTimestamp(_hardfork) {\n        var _a, _b, _c;\n        const hardfork = (_a = _hardfork) !== null && _a !== void 0 ? _a : this._hardfork;\n        const hfs = this.hardforks();\n        let hfIndex = hfs.findIndex(hf => hf.name === hardfork);\n        // If the current hardfork is merge, go one behind as merge hf is not part of these\n        // calcs even if the merge hf block is set\n        if (hardfork === Hardfork.Merge) {\n            hfIndex -= 1;\n        }\n        // Hardfork not found\n        if (hfIndex < 0) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        let currHfTimeOrBlock = (_b = hfs[hfIndex].timestamp) !== null && _b !== void 0 ? _b : hfs[hfIndex].block;\n        currHfTimeOrBlock =\n            // eslint-disable-next-line no-null/no-null\n            currHfTimeOrBlock !== null && currHfTimeOrBlock !== undefined\n                ? Number(currHfTimeOrBlock)\n                : // eslint-disable-next-line no-null/no-null\n                    null;\n        const nextHf = hfs.slice(hfIndex + 1).find(hf => {\n            var _a;\n            let hfTimeOrBlock = (_a = hf.timestamp) !== null && _a !== void 0 ? _a : hf.block;\n            hfTimeOrBlock =\n                // eslint-disable-next-line no-null/no-null\n                hfTimeOrBlock !== null && hfTimeOrBlock !== undefined\n                    ? Number(hfTimeOrBlock)\n                    : // eslint-disable-next-line no-null/no-null\n                        null;\n            return (hf.name !== Hardfork.Merge &&\n                // eslint-disable-next-line no-null/no-null\n                hfTimeOrBlock !== null &&\n                hfTimeOrBlock !== undefined &&\n                hfTimeOrBlock !== currHfTimeOrBlock);\n        });\n        // If no next hf found with valid block or timestamp return null\n        if (nextHf === undefined) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        const nextHfBlock = (_c = nextHf.timestamp) !== null && _c !== void 0 ? _c : nextHf.block;\n        // eslint-disable-next-line no-null/no-null\n        if (nextHfBlock === null || nextHfBlock === undefined) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        return BigInt(nextHfBlock);\n    }\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if not available\n     * @deprecated\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    nextHardforkBlock(_hardfork) {\n        var _a;\n        const hardfork = (_a = _hardfork) !== null && _a !== void 0 ? _a : this._hardfork;\n        let hfBlock = this.hardforkBlock(hardfork);\n        // If this is a merge hardfork with block not set, then we fallback to previous hardfork\n        // to find the nextHardforkBlock\n        // eslint-disable-next-line no-null/no-null\n        if (hfBlock === null && hardfork === Hardfork.Merge) {\n            const hfs = this.hardforks();\n            // eslint-disable-next-line no-null/no-null\n            const mergeIndex = hfs.findIndex(hf => hf.ttd !== null && hf.ttd !== undefined);\n            if (mergeIndex < 0) {\n                throw Error(`Merge hardfork should have been found`);\n            }\n            hfBlock = this.hardforkBlock(hfs[mergeIndex - 1].name);\n        }\n        // eslint-disable-next-line no-null/no-null\n        if (hfBlock === null) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        // Next fork block number or null if none available\n        // Logic: if accumulator is still null and on the first occurrence of\n        // a block greater than the current hfBlock set the accumulator,\n        // pass on the accumulator as the final result from this time on\n        // eslint-disable-next-line no-null/no-null, @typescript-eslint/ban-types\n        const nextHfBlock = this.hardforks().reduce((acc, hf) => {\n            // We need to ignore the merge block in our next hardfork calc\n            const block = BigInt(\n            // eslint-disable-next-line no-null/no-null\n            hf.block === null || (hf.ttd !== undefined && hf.ttd !== null) ? 0 : hf.block);\n            // TypeScript can't seem to follow that the hfBlock is not null at this point\n            // eslint-disable-next-line no-null/no-null\n            return block > hfBlock && acc === null ? block : acc;\n            // eslint-disable-next-line no-null/no-null\n        }, null);\n        return nextHfBlock;\n    }\n    /**\n     * True if block number provided is the hardfork change block following the hardfork given or set\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     * @deprecated\n     */\n    isNextHardforkBlock(_blockNumber, _hardfork) {\n        const blockNumber = toType(_blockNumber, TypeOutput.BigInt);\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        // eslint-disable-next-line deprecation/deprecation\n        const nextHardforkBlock = this.nextHardforkBlock(hardfork);\n        // eslint-disable-next-line no-null/no-null\n        return nextHardforkBlock === null ? false : nextHardforkBlock === blockNumber;\n    }\n    /**\n     * Internal helper function to calculate a fork hash\n     * @param hardfork Hardfork name\n     * @param genesisHash Genesis block hash of the chain\n     * @returns Fork hash as hex string\n     */\n    _calcForkHash(hardfork, genesisHash) {\n        let hfUint8Array = new Uint8Array();\n        let prevBlockOrTime = 0;\n        for (const hf of this.hardforks()) {\n            const { block, timestamp, name } = hf;\n            // Timestamp to be used for timestamp based hfs even if we may bundle\n            // block number with them retrospectively\n            let blockOrTime = timestamp !== null && timestamp !== void 0 ? timestamp : block;\n            // eslint-disable-next-line no-null/no-null\n            blockOrTime = blockOrTime !== null ? Number(blockOrTime) : null;\n            // Skip for chainstart (0), not applied HFs (null) and\n            // when already applied on same blockOrTime HFs\n            // and on the merge since forkhash doesn't change on merge hf\n            if (typeof blockOrTime === 'number' &&\n                blockOrTime !== 0 &&\n                blockOrTime !== prevBlockOrTime &&\n                name !== Hardfork.Merge) {\n                const hfBlockUint8Array = hexToBytes(blockOrTime.toString(16).padStart(16, '0'));\n                hfUint8Array = uint8ArrayConcat(hfUint8Array, hfBlockUint8Array);\n                prevBlockOrTime = blockOrTime;\n            }\n            if (hf.name === hardfork)\n                break;\n        }\n        const inputUint8Array = uint8ArrayConcat(genesisHash, hfUint8Array);\n        // CRC32 delivers result as signed (negative) 32-bit integer,\n        // convert to hex string\n        // eslint-disable-next-line no-bitwise\n        const forkhash = bytesToHex(intToUint8Array(crc32Uint8Array(inputUint8Array) >>> 0));\n        return forkhash;\n    }\n    /**\n     * Returns an eth/64 compliant fork hash (EIP-2124)\n     * @param hardfork Hardfork name, optional if HF set\n     * @param genesisHash Genesis block hash of the chain, optional if already defined and not needed to be calculated\n     */\n    forkHash(_hardfork, genesisHash) {\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        const data = this._getHardfork(hardfork);\n        if (\n        // eslint-disable-next-line no-null/no-null\n        data === null ||\n            // eslint-disable-next-line no-null/no-null\n            ((data === null || data === void 0 ? void 0 : data.block) === null && (data === null || data === void 0 ? void 0 : data.timestamp) === undefined && (data === null || data === void 0 ? void 0 : data.ttd) === undefined)) {\n            const msg = 'No fork hash calculation possible for future hardfork';\n            throw new Error(msg);\n        }\n        // eslint-disable-next-line no-null/no-null\n        if ((data === null || data === void 0 ? void 0 : data.forkHash) !== null && (data === null || data === void 0 ? void 0 : data.forkHash) !== undefined) {\n            return data.forkHash;\n        }\n        if (!genesisHash)\n            throw new Error('genesisHash required for forkHash calculation');\n        return this._calcForkHash(hardfork, genesisHash);\n    }\n    /**\n     *\n     * @param forkHash Fork hash as a hex string\n     * @returns Array with hardfork data (name, block, forkHash)\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    hardforkForForkHash(forkHash) {\n        const resArray = this.hardforks().filter((hf) => hf.forkHash === forkHash);\n        // eslint-disable-next-line no-null/no-null\n        return resArray.length >= 1 ? resArray[resArray.length - 1] : null;\n    }\n    /**\n     * Sets any missing forkHashes on the passed-in {@link Common} instance\n     * @param common The {@link Common} to set the forkHashes for\n     * @param genesisHash The genesis block hash\n     */\n    setForkHashes(genesisHash) {\n        var _a;\n        for (const hf of this.hardforks()) {\n            const blockOrTime = (_a = hf.timestamp) !== null && _a !== void 0 ? _a : hf.block;\n            if (\n            // eslint-disable-next-line no-null/no-null\n            (hf.forkHash === null || hf.forkHash === undefined) &&\n                // eslint-disable-next-line no-null/no-null\n                ((blockOrTime !== null && blockOrTime !== undefined) ||\n                    typeof hf.ttd !== 'undefined')) {\n                hf.forkHash = this.forkHash(hf.name, genesisHash);\n            }\n        }\n    }\n    /**\n     * Returns the Genesis parameters of the current chain\n     * @returns Genesis dictionary\n     */\n    genesis() {\n        return this._chainParams.genesis;\n    }\n    /**\n     * Returns the hardforks for current chain\n     * @returns {Array} Array with arrays of hardforks\n     */\n    hardforks() {\n        return this._chainParams.hardforks;\n    }\n    /**\n     * Returns bootstrap nodes for the current chain\n     * @returns {Dictionary} Dict with bootstrap nodes\n     */\n    bootstrapNodes() {\n        return this._chainParams.bootstrapNodes;\n    }\n    /**\n     * Returns DNS networks for the current chain\n     * @returns {String[]} Array of DNS ENR urls\n     */\n    dnsNetworks() {\n        return this._chainParams.dnsNetworks;\n    }\n    /**\n     * Returns the hardfork set\n     * @returns Hardfork name\n     */\n    hardfork() {\n        return this._hardfork;\n    }\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     */\n    chainId() {\n        return BigInt(this._chainParams.chainId);\n    }\n    /**\n     * Returns the name of current chain\n     * @returns chain name (lower case)\n     */\n    chainName() {\n        return this._chainParams.name;\n    }\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     */\n    networkId() {\n        return BigInt(this._chainParams.networkId);\n    }\n    /**\n     * Returns the active EIPs\n     * @returns List of EIPs\n     */\n    eips() {\n        return this._eips;\n    }\n    /**\n     * Returns the consensus type of the network\n     * Possible values: \"pow\"|\"poa\"|\"pos\"\n     *\n     * Note: This value can update along a Hardfork.\n     */\n    consensusType() {\n        const hardfork = this.hardfork();\n        let value;\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            if ('consensus' in hfChanges[1]) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n                value = hfChanges[1].consensus.type;\n            }\n            if (hfChanges[0] === hardfork)\n                break;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return value !== null && value !== void 0 ? value : this._chainParams.consensus.type;\n    }\n    /**\n     * Returns the concrete consensus implementation\n     * algorithm or protocol for the network\n     * e.g. \"ethash\" for \"pow\" consensus type,\n     * \"clique\" for \"poa\" consensus type or\n     * \"casper\" for \"pos\" consensus type.\n     *\n     * Note: This value can update along a Hardfork.\n     */\n    consensusAlgorithm() {\n        const hardfork = this.hardfork();\n        let value;\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            if ('consensus' in hfChanges[1]) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n                value = hfChanges[1].consensus.algorithm;\n            }\n            if (hfChanges[0] === hardfork)\n                break;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return value !== null && value !== void 0 ? value : this._chainParams.consensus.algorithm;\n    }\n    /**\n     * Returns a dictionary with consensus configuration\n     * parameters based on the consensus algorithm\n     *\n     * Expected returns (parameters must be present in\n     * the respective chain json files):\n     *\n     * ethash: empty object\n     * clique: period, epoch\n     * casper: empty object\n     *\n     * Note: This value can update along a Hardfork.\n     */\n    consensusConfig() {\n        var _a;\n        const hardfork = this.hardfork();\n        let value;\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            if ('consensus' in hfChanges[1]) {\n                // The config parameter is named after the respective consensus algorithm\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n                value = hfChanges[1].consensus[hfChanges[1].consensus.algorithm];\n            }\n            if (hfChanges[0] === hardfork)\n                break;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return ((_a = value !== null && value !== void 0 ? value : this._chainParams.consensus[this.consensusAlgorithm()]) !== null && _a !== void 0 ? _a : {});\n    }\n    /**\n     * Returns a deep copy of this {@link Common} instance.\n     */\n    copy() {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-assignment\n        const copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n        copy.removeAllListeners();\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return copy;\n    }\n    static _getInitializedChains(customChains) {\n        const names = {};\n        for (const [name, id] of Object.entries(Chain)) {\n            names[id] = name.toLowerCase();\n        }\n        const chains = { mainnet, goerli, sepolia };\n        if (customChains) {\n            for (const chain of customChains) {\n                const { name } = chain;\n                names[chain.chainId.toString()] = name;\n                chains[name] = chain;\n            }\n        }\n        chains.names = names;\n        return chains;\n    }\n}\n//# sourceMappingURL=common.js.map","/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nexport var Capability;\n(function (Capability) {\n    /**\n     * Tx supports EIP-155 replay protection\n     * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n     */\n    Capability[Capability[\"EIP155ReplayProtection\"] = 155] = \"EIP155ReplayProtection\";\n    /**\n     * Tx supports EIP-1559 gas fee market mechanism\n     * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n     */\n    Capability[Capability[\"EIP1559FeeMarket\"] = 1559] = \"EIP1559FeeMarket\";\n    /**\n     * Tx is a typed transaction as defined in EIP-2718\n     * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n     */\n    Capability[Capability[\"EIP2718TypedTransaction\"] = 2718] = \"EIP2718TypedTransaction\";\n    /**\n     * Tx supports access list generation as defined in EIP-2930\n     * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n     */\n    Capability[Capability[\"EIP2930AccessLists\"] = 2930] = \"EIP2930AccessLists\";\n})(Capability || (Capability = {}));\nexport function isAccessListUint8Array(input) {\n    if (input.length === 0) {\n        return true;\n    }\n    const firstItem = input[0];\n    if (Array.isArray(firstItem)) {\n        return true;\n    }\n    return false;\n}\nexport function isAccessList(input) {\n    return !isAccessListUint8Array(input); // This is exactly the same method, except the output is negated.\n}\n//# sourceMappingURL=types.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { bytesToHex, uint8ArrayEquals } from 'web3-utils';\nimport { secp256k1 } from './constants.js';\nimport { assertIsUint8Array, zeros } from '../common/utils.js';\nexport class Address {\n    constructor(buf) {\n        if (buf.length !== 20) {\n            throw new Error('Invalid address length');\n        }\n        this.buf = buf;\n    }\n    /**\n     * Returns the zero address.\n     */\n    static zero() {\n        return new Address(zeros(20));\n    }\n    /**\n     * Is address equal to another.\n     */\n    equals(address) {\n        return uint8ArrayEquals(this.buf, address.buf);\n    }\n    /**\n     * Is address zero.\n     */\n    isZero() {\n        return this.equals(Address.zero());\n    }\n    /**\n     * Returns hex encoding of address.\n     */\n    toString() {\n        return bytesToHex(this.buf);\n    }\n    /**\n     * Returns Uint8Array representation of address.\n     */\n    toArray() {\n        return this.buf;\n    }\n    /**\n     * Returns the ethereum address of a given public key.\n     * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n     * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n     * @param sanitize Accept public keys in other formats\n     */\n    static publicToAddress(_pubKey, sanitize = false) {\n        let pubKey = _pubKey;\n        assertIsUint8Array(pubKey);\n        if (sanitize && pubKey.length !== 64) {\n            pubKey = secp256k1.ProjectivePoint.fromHex(pubKey).toRawBytes(false).slice(1);\n        }\n        if (pubKey.length !== 64) {\n            throw new Error('Expected pubKey to be of length 64');\n        }\n        // Only take the lower 160bits of the hash\n        return keccak256(pubKey).slice(-20);\n    }\n}\n//# sourceMappingURL=address.js.map","import { bytesToHex } from 'web3-utils';\nimport { setLengthLeft, toUint8Array } from '../common/utils.js';\nimport { isAccessList } from './types.js';\nexport const checkMaxInitCodeSize = (common, length) => {\n    const maxInitCodeSize = common.param('vm', 'maxInitCodeSize');\n    if (maxInitCodeSize && BigInt(length) > maxInitCodeSize) {\n        throw new Error(`the initcode size of this transaction is too large: it is ${length} while the max is ${common.param('vm', 'maxInitCodeSize')}`);\n    }\n};\nexport const getAccessListData = (accessList) => {\n    let AccessListJSON;\n    let uint8arrayAccessList;\n    if (isAccessList(accessList)) {\n        AccessListJSON = accessList;\n        const newAccessList = [];\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < accessList.length; i += 1) {\n            const item = accessList[i];\n            const addressBytes = toUint8Array(item.address);\n            const storageItems = [];\n            // eslint-disable-next-line @typescript-eslint/prefer-for-of\n            for (let index = 0; index < item.storageKeys.length; index += 1) {\n                storageItems.push(toUint8Array(item.storageKeys[index]));\n            }\n            newAccessList.push([addressBytes, storageItems]);\n        }\n        uint8arrayAccessList = newAccessList;\n    }\n    else {\n        uint8arrayAccessList = accessList !== null && accessList !== void 0 ? accessList : [];\n        // build the JSON\n        const json = [];\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < uint8arrayAccessList.length; i += 1) {\n            const data = uint8arrayAccessList[i];\n            const address = bytesToHex(data[0]);\n            const storageKeys = [];\n            // eslint-disable-next-line @typescript-eslint/prefer-for-of\n            for (let item = 0; item < data[1].length; item += 1) {\n                storageKeys.push(bytesToHex(data[1][item]));\n            }\n            const jsonItem = {\n                address,\n                storageKeys,\n            };\n            json.push(jsonItem);\n        }\n        AccessListJSON = json;\n    }\n    return {\n        AccessListJSON,\n        accessList: uint8arrayAccessList,\n    };\n};\nexport const verifyAccessList = (accessList) => {\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let key = 0; key < accessList.length; key += 1) {\n        const accessListItem = accessList[key];\n        const address = accessListItem[0];\n        const storageSlots = accessListItem[1];\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/consistent-type-assertions\n        if (accessListItem[2] !== undefined) {\n            throw new Error('Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.');\n        }\n        if (address.length !== 20) {\n            throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes');\n        }\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot += 1) {\n            if (storageSlots[storageSlot].length !== 32) {\n                throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes');\n            }\n        }\n    }\n};\nexport const getAccessListJSON = (accessList) => {\n    const accessListJSON = [];\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let index = 0; index < accessList.length; index += 1) {\n        const item = accessList[index];\n        const JSONItem = {\n            address: bytesToHex(setLengthLeft(item[0], 20)),\n            storageKeys: [],\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n        const storageSlots = item && item[1];\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let slot = 0; slot < storageSlots.length; slot += 1) {\n            const storageSlot = storageSlots[slot];\n            JSONItem.storageKeys.push(bytesToHex(setLengthLeft(storageSlot, 32)));\n        }\n        accessListJSON.push(JSONItem);\n    }\n    return accessListJSON;\n};\nexport const getDataFeeEIP2930 = (accessList, common) => {\n    const accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost');\n    const accessListAddressCost = common.param('gasPrices', 'accessListAddressCost');\n    let slots = 0;\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let index = 0; index < accessList.length; index += 1) {\n        const item = accessList[index];\n        const storageSlots = item[1];\n        slots += storageSlots.length;\n    }\n    const addresses = accessList.length;\n    return addresses * Number(accessListAddressCost) + slots * Number(accessListStorageKeyCost);\n};\n//# sourceMappingURL=utils.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { bytesToHex } from 'web3-utils';\nimport { MAX_INTEGER, MAX_UINT64, SECP256K1_ORDER_DIV_2, secp256k1 } from './constants.js';\nimport { toUint8Array, uint8ArrayToBigInt, unpadUint8Array } from '../common/utils.js';\nimport { Common } from '../common/common.js';\nimport { Hardfork, Chain } from '../common/enums.js';\nimport { Capability } from './types.js';\nimport { Address } from './address.js';\nimport { checkMaxInitCodeSize } from './utils.js';\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nexport class BaseTransaction {\n    constructor(txData, opts) {\n        var _a, _b;\n        this.cache = {\n            hash: undefined,\n            dataFee: undefined,\n        };\n        /**\n         * List of tx type defining EIPs,\n         * e.g. 1559 (fee market) and 2930 (access lists)\n         * for FeeMarketEIP1559Transaction objects\n         */\n        this.activeCapabilities = [];\n        /**\n         * The default chain the tx falls back to if no Common\n         * is provided and if the chain can't be derived from\n         * a passed in chainId (only EIP-2718 typed txs) or\n         * EIP-155 signature (legacy txs).\n         *\n         * @hidden\n         */\n        this.DEFAULT_CHAIN = Chain.Mainnet;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        this.DEFAULT_HARDFORK = Hardfork.Merge;\n        const { nonce, gasLimit, to, value, data, v, r, s, type } = txData;\n        this._type = Number(uint8ArrayToBigInt(toUint8Array(type)));\n        this.txOptions = opts;\n        const toB = toUint8Array(to === '' ? '0x' : to);\n        const vB = toUint8Array(v === '' ? '0x' : v);\n        const rB = toUint8Array(r === '' ? '0x' : r);\n        const sB = toUint8Array(s === '' ? '0x' : s);\n        this.nonce = uint8ArrayToBigInt(toUint8Array(nonce === '' ? '0x' : nonce));\n        this.gasLimit = uint8ArrayToBigInt(toUint8Array(gasLimit === '' ? '0x' : gasLimit));\n        this.to = toB.length > 0 ? new Address(toB) : undefined;\n        this.value = uint8ArrayToBigInt(toUint8Array(value === '' ? '0x' : value));\n        this.data = toUint8Array(data === '' ? '0x' : data);\n        this.v = vB.length > 0 ? uint8ArrayToBigInt(vB) : undefined;\n        this.r = rB.length > 0 ? uint8ArrayToBigInt(rB) : undefined;\n        this.s = sB.length > 0 ? uint8ArrayToBigInt(sB) : undefined;\n        this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s });\n        // geth limits gasLimit to 2^64-1\n        this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64);\n        // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n        this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true);\n        // eslint-disable-next-line no-null/no-null\n        const createContract = this.to === undefined || this.to === null;\n        const allowUnlimitedInitCodeSize = (_a = opts.allowUnlimitedInitCodeSize) !== null && _a !== void 0 ? _a : false;\n        const common = (_b = opts.common) !== null && _b !== void 0 ? _b : this._getCommon();\n        if (createContract && common.isActivatedEIP(3860) && !allowUnlimitedInitCodeSize) {\n            checkMaxInitCodeSize(common, this.data.length);\n        }\n    }\n    /**\n     * Returns the transaction type.\n     *\n     * Note: legacy txs will return tx type `0`.\n     */\n    get type() {\n        return this._type;\n    }\n    /**\n     * Checks if a tx type defining capability is active\n     * on a tx, for example the EIP-1559 fee market mechanism\n     * or the EIP-2930 access list feature.\n     *\n     * Note that this is different from the tx type itself,\n     * so EIP-2930 access lists can very well be active\n     * on an EIP-1559 tx for example.\n     *\n     * This method can be useful for feature checks if the\n     * tx type is unknown (e.g. when instantiated with\n     * the tx factory).\n     *\n     * See `Capabilites` in the `types` module for a reference\n     * on all supported capabilities.\n     */\n    supports(capability) {\n        return this.activeCapabilities.includes(capability);\n    }\n    validate(stringError = false) {\n        const errors = [];\n        if (this.getBaseFee() > this.gasLimit) {\n            errors.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`);\n        }\n        if (this.isSigned() && !this.verifySignature()) {\n            errors.push('Invalid Signature');\n        }\n        return stringError ? errors : errors.length === 0;\n    }\n    _validateYParity() {\n        const { v } = this;\n        if (v !== undefined && v !== BigInt(0) && v !== BigInt(1)) {\n            const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1');\n            throw new Error(msg);\n        }\n    }\n    /**\n     * EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2are considered invalid.\n     * Reasoning: https://ethereum.stackexchange.com/a/55728\n     */\n    _validateHighS() {\n        const { s } = this;\n        if (this.common.gteHardfork('homestead') && s !== undefined && s > SECP256K1_ORDER_DIV_2) {\n            const msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n    }\n    /**\n     * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n     */\n    getBaseFee() {\n        const txFee = this.common.param('gasPrices', 'tx');\n        let fee = this.getDataFee();\n        if (txFee)\n            fee += txFee;\n        if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n            const txCreationFee = this.common.param('gasPrices', 'txCreation');\n            if (txCreationFee)\n                fee += txCreationFee;\n        }\n        return fee;\n    }\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    getDataFee() {\n        const txDataZero = this.common.param('gasPrices', 'txDataZero');\n        const txDataNonZero = this.common.param('gasPrices', 'txDataNonZero');\n        let cost = BigInt(0);\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < this.data.length; i += 1) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions, no-unused-expressions\n            this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero);\n        }\n        // eslint-disable-next-line no-null/no-null\n        if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n            const dataLength = BigInt(Math.ceil(this.data.length / 32));\n            const initCodeCost = this.common.param('gasPrices', 'initCodeWordCost') * dataLength;\n            cost += initCodeCost;\n        }\n        return cost;\n    }\n    /**\n     * If the tx's `to` is to the creation address\n     */\n    toCreationAddress() {\n        return this.to === undefined || this.to.buf.length === 0;\n    }\n    isSigned() {\n        const { v, r, s } = this;\n        if (v === undefined || r === undefined || s === undefined) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Determines if the signature is valid\n     */\n    verifySignature() {\n        try {\n            // Main signature verification is done in `getSenderPublicKey()`\n            const publicKey = this.getSenderPublicKey();\n            return unpadUint8Array(publicKey).length !== 0;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Returns the sender's address\n     */\n    getSenderAddress() {\n        return new Address(Address.publicToAddress(this.getSenderPublicKey()));\n    }\n    /**\n     * Signs a transaction.\n     *\n     * Note that the signed tx is returned as a new object,\n     * use as follows:\n     * ```javascript\n     * const signedTx = tx.sign(privateKey)\n     * ```\n     */\n    sign(privateKey) {\n        if (privateKey.length !== 32) {\n            const msg = this._errorMsg('Private key must be 32 bytes in length.');\n            throw new Error(msg);\n        }\n        // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n        // and want to recreate a signature (where EIP155 should be applied)\n        // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n        // 2021-06-23\n        let hackApplied = false;\n        if (this.type === 0 &&\n            this.common.gteHardfork('spuriousDragon') &&\n            !this.supports(Capability.EIP155ReplayProtection)) {\n            this.activeCapabilities.push(Capability.EIP155ReplayProtection);\n            hackApplied = true;\n        }\n        const msgHash = this.getMessageToSign(true);\n        const { v, r, s } = this._ecsign(msgHash, privateKey);\n        const tx = this._processSignature(v, r, s);\n        // Hack part 2\n        if (hackApplied) {\n            const index = this.activeCapabilities.indexOf(Capability.EIP155ReplayProtection);\n            if (index > -1) {\n                this.activeCapabilities.splice(index, 1);\n            }\n        }\n        return tx;\n    }\n    /**\n     * Does chain ID checks on common and returns a common\n     * to be used on instantiation\n     * @hidden\n     *\n     * @param common - {@link Common} instance from tx options\n     * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n     */\n    _getCommon(common, chainId) {\n        var _a, _b, _c, _d;\n        // TODO: this function needs to be reviewed and the code to be more clean\n        // check issue https://github.com/web3/web3.js/issues/6666\n        // Chain ID provided\n        if (chainId !== undefined) {\n            const chainIdBigInt = uint8ArrayToBigInt(toUint8Array(chainId));\n            if (common) {\n                if (common.chainId() !== chainIdBigInt) {\n                    const msg = this._errorMsg('The chain ID does not match the chain ID of Common');\n                    throw new Error(msg);\n                }\n                // Common provided, chain ID does match\n                // -> Return provided Common\n                return common.copy();\n            }\n            if (Common.isSupportedChainId(chainIdBigInt)) {\n                // No Common, chain ID supported by Common\n                // -> Instantiate Common with chain ID\n                return new Common({ chain: chainIdBigInt, hardfork: this.DEFAULT_HARDFORK });\n            }\n            // No Common, chain ID not supported by Common\n            // -> Instantiate custom Common derived from DEFAULT_CHAIN\n            return Common.custom({\n                name: 'custom-chain',\n                networkId: chainIdBigInt,\n                chainId: chainIdBigInt,\n            }, { baseChain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK });\n        }\n        // No chain ID provided\n        // -> return Common provided or create new default Common\n        if ((common === null || common === void 0 ? void 0 : common.copy) && typeof (common === null || common === void 0 ? void 0 : common.copy) === 'function') {\n            return common.copy();\n        }\n        // TODO: Recheck this next block when working on https://github.com/web3/web3.js/issues/6666\n        // This block is to handle when `chainId` was not passed and the `common` object does not have `copy()`\n        // If it was meant to be unsupported to process `common` in this case, an exception should be thrown instead of the following block\n        if (common) {\n            const hardfork = typeof common.hardfork === 'function'\n                ? common.hardfork()\n                : // eslint-disable-next-line @typescript-eslint/unbound-method\n                    common.hardfork;\n            return Common.custom({\n                name: 'custom-chain',\n                networkId: common.networkId\n                    ? common.networkId()\n                    : (_b = BigInt((_a = common.customChain) === null || _a === void 0 ? void 0 : _a.networkId)) !== null && _b !== void 0 ? _b : undefined,\n                chainId: common.chainId\n                    ? common.chainId()\n                    : (_d = BigInt((_c = common.customChain) === null || _c === void 0 ? void 0 : _c.chainId)) !== null && _d !== void 0 ? _d : undefined,\n            }, {\n                baseChain: this.DEFAULT_CHAIN,\n                hardfork: hardfork || this.DEFAULT_HARDFORK,\n            });\n        }\n        return new Common({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK });\n    }\n    /**\n     * Validates that an object with BigInt values cannot exceed the specified bit limit.\n     * @param values Object containing string keys and BigInt values\n     * @param bits Number of bits to check (64 or 256)\n     * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n     */\n    _validateCannotExceedMaxInteger(values, bits = 256, cannotEqual = false) {\n        for (const [key, value] of Object.entries(values)) {\n            switch (bits) {\n                case 64:\n                    if (cannotEqual) {\n                        if (value !== undefined && value >= MAX_UINT64) {\n                            const msg = this._errorMsg(`${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`);\n                            throw new Error(msg);\n                        }\n                    }\n                    else if (value !== undefined && value > MAX_UINT64) {\n                        const msg = this._errorMsg(`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`);\n                        throw new Error(msg);\n                    }\n                    break;\n                case 256:\n                    if (cannotEqual) {\n                        if (value !== undefined && value >= MAX_INTEGER) {\n                            const msg = this._errorMsg(`${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`);\n                            throw new Error(msg);\n                        }\n                    }\n                    else if (value !== undefined && value > MAX_INTEGER) {\n                        const msg = this._errorMsg(`${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`);\n                        throw new Error(msg);\n                    }\n                    break;\n                default: {\n                    const msg = this._errorMsg('unimplemented bits value');\n                    throw new Error(msg);\n                }\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static _validateNotArray(values) {\n        const txDataKeys = [\n            'nonce',\n            'gasPrice',\n            'gasLimit',\n            'to',\n            'value',\n            'data',\n            'v',\n            'r',\n            's',\n            'type',\n            'baseFee',\n            'maxFeePerGas',\n            'chainId',\n        ];\n        for (const [key, value] of Object.entries(values)) {\n            if (txDataKeys.includes(key)) {\n                if (Array.isArray(value)) {\n                    throw new Error(`${key} cannot be an array`);\n                }\n            }\n        }\n    }\n    /**\n     * Returns the shared error postfix part for _error() method\n     * tx type implementations.\n     */\n    _getSharedErrorPostfix() {\n        let hash = '';\n        try {\n            hash = this.isSigned() ? bytesToHex(this.hash()) : 'not available (unsigned)';\n        }\n        catch (e) {\n            hash = 'error';\n        }\n        let isSigned = '';\n        try {\n            isSigned = this.isSigned().toString();\n        }\n        catch (e) {\n            hash = 'error';\n        }\n        let hf = '';\n        try {\n            hf = this.common.hardfork();\n        }\n        catch (e) {\n            hf = 'error';\n        }\n        let postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `;\n        postfix += `signed=${isSigned} hf=${hf}`;\n        return postfix;\n    }\n    // eslint-disable-next-line class-methods-use-this\n    _ecsign(msgHash, privateKey, chainId) {\n        const signature = secp256k1.sign(msgHash, privateKey);\n        const signatureBytes = signature.toCompactRawBytes();\n        const r = signatureBytes.subarray(0, 32);\n        const s = signatureBytes.subarray(32, 64);\n        const v = chainId === undefined\n            ? BigInt(signature.recovery + 27)\n            : BigInt(signature.recovery + 35) + BigInt(chainId) * BigInt(2);\n        return { r, s, v };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static fromSerializedTx(\n    // @ts-expect-error unused variable\n    serialized, \n    // @ts-expect-error unused variable\n    opts = {}) { }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static fromTxData(\n    // @ts-expect-error unused variable\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    txData, \n    // @ts-expect-error unused variable\n    opts = {}) { }\n}\n//# sourceMappingURL=baseTransaction.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { validateNoLeadingZeroes } from 'web3-validator';\nimport { RLP } from '@ethereumjs/rlp';\nimport { bytesToHex, hexToBytes, uint8ArrayConcat, uint8ArrayEquals } from 'web3-utils';\nimport { MAX_INTEGER } from './constants.js';\nimport { BaseTransaction } from './baseTransaction.js';\nimport { getAccessListData, getAccessListJSON, getDataFeeEIP2930, verifyAccessList, } from './utils.js';\nimport { bigIntToHex, toUint8Array, ecrecover, uint8ArrayToBigInt, bigIntToUnpaddedUint8Array, } from '../common/utils.js';\nconst TRANSACTION_TYPE = 2;\nconst TRANSACTION_TYPE_UINT8ARRAY = hexToBytes(TRANSACTION_TYPE.toString(16).padStart(2, '0'));\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\n// eslint-disable-next-line no-use-before-define\nexport class FeeMarketEIP1559Transaction extends BaseTransaction {\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */\n    static fromTxData(txData, opts = {}) {\n        return new FeeMarketEIP1559Transaction(txData, opts);\n    }\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     */\n    static fromSerializedTx(serialized, opts = {}) {\n        if (!uint8ArrayEquals(serialized.subarray(0, 1), TRANSACTION_TYPE_UINT8ARRAY)) {\n            throw new Error(`Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${bytesToHex(serialized.subarray(0, 1))}`);\n        }\n        const values = RLP.decode(serialized.subarray(1));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return FeeMarketEIP1559Transaction.fromValuesArray(values, opts);\n    }\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     */\n    static fromValuesArray(values, opts = {}) {\n        if (values.length !== 9 && values.length !== 12) {\n            throw new Error('Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).');\n        }\n        const [chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data, accessList, v, r, s,] = values;\n        this._validateNotArray({ chainId, v });\n        validateNoLeadingZeroes({\n            nonce,\n            maxPriorityFeePerGas,\n            maxFeePerGas,\n            gasLimit,\n            value,\n            v,\n            r,\n            s,\n        });\n        return new FeeMarketEIP1559Transaction({\n            chainId: uint8ArrayToBigInt(chainId),\n            nonce,\n            maxPriorityFeePerGas,\n            maxFeePerGas,\n            gasLimit,\n            to,\n            value,\n            data,\n            accessList: accessList !== null && accessList !== void 0 ? accessList : [],\n            v: v !== undefined ? uint8ArrayToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Uint8Array)\n            r,\n            s,\n        }, opts);\n    }\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    constructor(txData, opts = {}) {\n        var _a;\n        super(Object.assign(Object.assign({}, txData), { type: TRANSACTION_TYPE }), opts);\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        this.DEFAULT_HARDFORK = 'london';\n        const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData;\n        this.common = this._getCommon(opts.common, chainId);\n        this.chainId = this.common.chainId();\n        if (!this.common.isActivatedEIP(1559)) {\n            throw new Error('EIP-1559 not enabled on Common');\n        }\n        this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930]);\n        // Populate the access list fields\n        const accessListData = getAccessListData(accessList !== null && accessList !== void 0 ? accessList : []);\n        this.accessList = accessListData.accessList;\n        this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        verifyAccessList(this.accessList);\n        this.maxFeePerGas = uint8ArrayToBigInt(toUint8Array(maxFeePerGas === '' ? '0x' : maxFeePerGas));\n        this.maxPriorityFeePerGas = uint8ArrayToBigInt(toUint8Array(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas));\n        this._validateCannotExceedMaxInteger({\n            maxFeePerGas: this.maxFeePerGas,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        });\n        BaseTransaction._validateNotArray(txData);\n        if (this.gasLimit * this.maxFeePerGas > MAX_INTEGER) {\n            const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)');\n            throw new Error(msg);\n        }\n        if (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n            const msg = this._errorMsg('maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)');\n            throw new Error(msg);\n        }\n        this._validateYParity();\n        this._validateHighS();\n        const freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;\n        if (freeze) {\n            Object.freeze(this);\n        }\n    }\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    getDataFee() {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        let cost = super.getDataFee();\n        cost += BigInt(getDataFeeEIP2930(this.accessList, this.common));\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: cost,\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return cost;\n    }\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     * @param baseFee The base fee of the block (will be set to 0 if not provided)\n     */\n    getUpfrontCost(baseFee = BigInt(0)) {\n        const prio = this.maxPriorityFeePerGas;\n        const maxBase = this.maxFeePerGas - baseFee;\n        const inclusionFeePerGas = prio < maxBase ? prio : maxBase;\n        const gasPrice = inclusionFeePerGas + baseFee;\n        return this.gasLimit * gasPrice + this.value;\n    }\n    /**\n     * Returns a Uint8Array Array of the raw Uint8Arrays of the EIP-1559 transaction, in order.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     *\n     * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty Uint8Array values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n     */\n    raw() {\n        return [\n            bigIntToUnpaddedUint8Array(this.chainId),\n            bigIntToUnpaddedUint8Array(this.nonce),\n            bigIntToUnpaddedUint8Array(this.maxPriorityFeePerGas),\n            bigIntToUnpaddedUint8Array(this.maxFeePerGas),\n            bigIntToUnpaddedUint8Array(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Uint8Array.from([]),\n            bigIntToUnpaddedUint8Array(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? bigIntToUnpaddedUint8Array(this.v) : Uint8Array.from([]),\n            this.r !== undefined ? bigIntToUnpaddedUint8Array(this.r) : Uint8Array.from([]),\n            this.s !== undefined ? bigIntToUnpaddedUint8Array(this.s) : Uint8Array.from([]),\n        ];\n    }\n    /**\n     * Returns the serialized encoding of the EIP-1559 transaction.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */\n    serialize() {\n        const base = this.raw();\n        return uint8ArrayConcat(TRANSACTION_TYPE_UINT8ARRAY, RLP.encode(base));\n    }\n    /**\n     * Returns the serialized unsigned tx (hashed or raw), which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n     * ```\n     *\n     * @param hashMessage - Return hashed message if set to true (default: true)\n     */\n    getMessageToSign(hashMessage = true) {\n        const base = this.raw().slice(0, 9);\n        const message = uint8ArrayConcat(TRANSACTION_TYPE_UINT8ARRAY, RLP.encode(base));\n        if (hashMessage) {\n            return keccak256(message);\n        }\n        return message;\n    }\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    hash() {\n        if (!this.isSigned()) {\n            const msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = keccak256(this.serialize());\n            }\n            return this.cache.hash;\n        }\n        return keccak256(this.serialize());\n    }\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    getMessageToVerifySignature() {\n        return this.getMessageToSign();\n    }\n    /**\n     * Returns the public key of the sender\n     */\n    getSenderPublicKey() {\n        if (!this.isSigned()) {\n            const msg = this._errorMsg('Cannot call this method if transaction is not signed');\n            throw new Error(msg);\n        }\n        const msgHash = this.getMessageToVerifySignature();\n        const { v, r, s } = this;\n        this._validateHighS();\n        try {\n            return ecrecover(msgHash, v + BigInt(27), // Recover the 27 which was stripped from ecsign\n            bigIntToUnpaddedUint8Array(r), bigIntToUnpaddedUint8Array(s));\n        }\n        catch (e) {\n            const msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    }\n    _processSignature(v, r, s) {\n        const opts = Object.assign(Object.assign({}, this.txOptions), { common: this.common });\n        return FeeMarketEIP1559Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n            maxFeePerGas: this.maxFeePerGas,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: v - BigInt(27), // This looks extremely hacky: /util actually adds 27 to the value, the recovery bit is either 0 or 1.\n            r: uint8ArrayToBigInt(r),\n            s: uint8ArrayToBigInt(s),\n        }, opts);\n    }\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    toJSON() {\n        const accessListJSON = getAccessListJSON(this.accessList);\n        return {\n            chainId: bigIntToHex(this.chainId),\n            nonce: bigIntToHex(this.nonce),\n            maxPriorityFeePerGas: bigIntToHex(this.maxPriorityFeePerGas),\n            maxFeePerGas: bigIntToHex(this.maxFeePerGas),\n            gasLimit: bigIntToHex(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: bigIntToHex(this.value),\n            data: bytesToHex(this.data),\n            accessList: accessListJSON,\n            v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n            r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n            s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n        };\n    }\n    /**\n     * Return a compact error string representation of the object\n     */\n    errorStr() {\n        let errorStr = this._getSharedErrorPostfix();\n        errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`;\n        return errorStr;\n    }\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    _errorMsg(msg) {\n        return `${msg} (${this.errorStr()})`;\n    }\n}\n//# sourceMappingURL=eip1559Transaction.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { validateNoLeadingZeroes } from 'web3-validator';\nimport { RLP } from '@ethereumjs/rlp';\nimport { bytesToHex, hexToBytes, uint8ArrayConcat, uint8ArrayEquals } from 'web3-utils';\nimport { MAX_INTEGER } from './constants.js';\nimport { getAccessListData, verifyAccessList, getAccessListJSON, getDataFeeEIP2930, } from './utils.js';\nimport { bigIntToHex, toUint8Array, ecrecover, uint8ArrayToBigInt, bigIntToUnpaddedUint8Array, } from '../common/utils.js';\nimport { BaseTransaction } from './baseTransaction.js';\nconst TRANSACTION_TYPE = 1;\nconst TRANSACTION_TYPE_UINT8ARRAY = hexToBytes(TRANSACTION_TYPE.toString(16).padStart(2, '0'));\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\n// eslint-disable-next-line no-use-before-define\nexport class AccessListEIP2930Transaction extends BaseTransaction {\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */\n    static fromTxData(txData, opts = {}) {\n        return new AccessListEIP2930Transaction(txData, opts);\n    }\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     */\n    static fromSerializedTx(serialized, opts = {}) {\n        if (!uint8ArrayEquals(serialized.subarray(0, 1), TRANSACTION_TYPE_UINT8ARRAY)) {\n            throw new Error(`Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${bytesToHex(serialized.subarray(0, 1))}`);\n        }\n        const values = RLP.decode(Uint8Array.from(serialized.subarray(1)));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return AccessListEIP2930Transaction.fromValuesArray(values, opts);\n    }\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     */\n    static fromValuesArray(values, opts = {}) {\n        if (values.length !== 8 && values.length !== 11) {\n            throw new Error('Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).');\n        }\n        const [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values;\n        this._validateNotArray({ chainId, v });\n        validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s });\n        const emptyAccessList = [];\n        return new AccessListEIP2930Transaction({\n            chainId: uint8ArrayToBigInt(chainId),\n            nonce,\n            gasPrice,\n            gasLimit,\n            to,\n            value,\n            data,\n            accessList: accessList !== null && accessList !== void 0 ? accessList : emptyAccessList,\n            v: v !== undefined ? uint8ArrayToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Uint8Array)\n            r,\n            s,\n        }, opts);\n    }\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    constructor(txData, opts = {}) {\n        var _a;\n        super(Object.assign(Object.assign({}, txData), { type: TRANSACTION_TYPE }), opts);\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        this.DEFAULT_HARDFORK = 'berlin';\n        const { chainId, accessList, gasPrice } = txData;\n        this.common = this._getCommon(opts.common, chainId);\n        this.chainId = this.common.chainId();\n        // EIP-2718 check is done in Common\n        if (!this.common.isActivatedEIP(2930)) {\n            throw new Error('EIP-2930 not enabled on Common');\n        }\n        this.activeCapabilities = this.activeCapabilities.concat([2718, 2930]);\n        // Populate the access list fields\n        const accessListData = getAccessListData(accessList !== null && accessList !== void 0 ? accessList : []);\n        this.accessList = accessListData.accessList;\n        this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        verifyAccessList(this.accessList);\n        this.gasPrice = uint8ArrayToBigInt(toUint8Array(gasPrice === '' ? '0x' : gasPrice));\n        this._validateCannotExceedMaxInteger({\n            gasPrice: this.gasPrice,\n        });\n        BaseTransaction._validateNotArray(txData);\n        if (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n            const msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER');\n            throw new Error(msg);\n        }\n        this._validateYParity();\n        this._validateHighS();\n        const freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;\n        if (freeze) {\n            Object.freeze(this);\n        }\n    }\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    getDataFee() {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        let cost = super.getDataFee();\n        cost += BigInt(getDataFeeEIP2930(this.accessList, this.common));\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: cost,\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return cost;\n    }\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    getUpfrontCost() {\n        return this.gasLimit * this.gasPrice + this.value;\n    }\n    /**\n     * Returns a Uint8Array Array of the raw Uint8Arrays of the EIP-2930 transaction, in order.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     *\n     * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty UINT8ARRAY values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n     */\n    raw() {\n        return [\n            bigIntToUnpaddedUint8Array(this.chainId),\n            bigIntToUnpaddedUint8Array(this.nonce),\n            bigIntToUnpaddedUint8Array(this.gasPrice),\n            bigIntToUnpaddedUint8Array(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Uint8Array.from([]),\n            bigIntToUnpaddedUint8Array(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? bigIntToUnpaddedUint8Array(this.v) : Uint8Array.from([]),\n            this.r !== undefined ? bigIntToUnpaddedUint8Array(this.r) : Uint8Array.from([]),\n            this.s !== undefined ? bigIntToUnpaddedUint8Array(this.s) : Uint8Array.from([]),\n        ];\n    }\n    /**\n     * Returns the serialized encoding of the EIP-2930 transaction.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */\n    serialize() {\n        const base = this.raw();\n        return uint8ArrayConcat(TRANSACTION_TYPE_UINT8ARRAY, RLP.encode(base));\n    }\n    /**\n     * Returns the serialized unsigned tx (hashed or raw), which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n     * ```\n     *\n     * @param hashMessage - Return hashed message if set to true (default: true)\n     */\n    getMessageToSign(hashMessage = true) {\n        const base = this.raw().slice(0, 8);\n        const message = uint8ArrayConcat(TRANSACTION_TYPE_UINT8ARRAY, RLP.encode(base));\n        if (hashMessage) {\n            return keccak256(message);\n        }\n        return message;\n    }\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    hash() {\n        if (!this.isSigned()) {\n            const msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = keccak256(this.serialize());\n            }\n            return this.cache.hash;\n        }\n        return keccak256(this.serialize());\n    }\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    getMessageToVerifySignature() {\n        return this.getMessageToSign();\n    }\n    /**\n     * Returns the public key of the sender\n     */\n    getSenderPublicKey() {\n        if (!this.isSigned()) {\n            const msg = this._errorMsg('Cannot call this method if transaction is not signed');\n            throw new Error(msg);\n        }\n        const msgHash = this.getMessageToVerifySignature();\n        const { v, r, s } = this;\n        this._validateHighS();\n        try {\n            return ecrecover(msgHash, v + BigInt(27), // Recover the 27 which was stripped from ecsign\n            bigIntToUnpaddedUint8Array(r), bigIntToUnpaddedUint8Array(s));\n        }\n        catch (e) {\n            const msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    }\n    _processSignature(v, r, s) {\n        const opts = Object.assign(Object.assign({}, this.txOptions), { common: this.common });\n        return AccessListEIP2930Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: v - BigInt(27), // This looks extremely hacky: /util actually adds 27 to the value, the recovery bit is either 0 or 1.\n            r: uint8ArrayToBigInt(r),\n            s: uint8ArrayToBigInt(s),\n        }, opts);\n    }\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    toJSON() {\n        const accessListJSON = getAccessListJSON(this.accessList);\n        return {\n            chainId: bigIntToHex(this.chainId),\n            nonce: bigIntToHex(this.nonce),\n            gasPrice: bigIntToHex(this.gasPrice),\n            gasLimit: bigIntToHex(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: bigIntToHex(this.value),\n            data: bytesToHex(this.data),\n            accessList: accessListJSON,\n            v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n            r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n            s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n        };\n    }\n    /**\n     * Return a compact error string representation of the object\n     */\n    errorStr() {\n        var _a, _b;\n        let errorStr = this._getSharedErrorPostfix();\n        // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n        errorStr += ` gasPrice=${this.gasPrice} accessListCount=${(_b = (_a = this.accessList) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0}`;\n        return errorStr;\n    }\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    _errorMsg(msg) {\n        return `${msg} (${this.errorStr()})`;\n    }\n}\n//# sourceMappingURL=eip2930Transaction.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { RLP } from '@ethereumjs/rlp';\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { bytesToHex } from 'web3-utils';\nimport { validateNoLeadingZeroes } from 'web3-validator';\nimport { bigIntToHex, bigIntToUnpaddedUint8Array, ecrecover, toUint8Array, uint8ArrayToBigInt, unpadUint8Array, } from '../common/utils.js';\nimport { MAX_INTEGER } from './constants.js';\nimport { BaseTransaction } from './baseTransaction.js';\nimport { Capability } from './types.js';\nconst TRANSACTION_TYPE = 0;\nfunction meetsEIP155(_v, chainId) {\n    const v = Number(_v);\n    const chainIdDoubled = Number(chainId) * 2;\n    return v === chainIdDoubled + 35 || v === chainIdDoubled + 36;\n}\n/**\n * An Ethereum non-typed (legacy) transaction\n */\n// eslint-disable-next-line no-use-before-define\nexport class Transaction extends BaseTransaction {\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n     *\n     * Notes:\n     * - All parameters are optional and have some basic default values\n     */\n    static fromTxData(txData, opts = {}) {\n        return new Transaction(txData, opts);\n    }\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     */\n    static fromSerializedTx(serialized, opts = {}) {\n        const values = RLP.decode(serialized);\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input. Must be array');\n        }\n        return this.fromValuesArray(values, opts);\n    }\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     */\n    static fromValuesArray(values, opts = {}) {\n        // If length is not 6, it has length 9. If v/r/s are empty Uint8Array, it is still an unsigned transaction\n        // This happens if you get the RLP data from `raw()`\n        if (values.length !== 6 && values.length !== 9) {\n            throw new Error('Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).');\n        }\n        const [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values;\n        validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s });\n        return new Transaction({\n            nonce,\n            gasPrice,\n            gasLimit,\n            to,\n            value,\n            data,\n            v,\n            r,\n            s,\n        }, opts);\n    }\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    constructor(txData, opts = {}) {\n        var _a;\n        super(Object.assign(Object.assign({}, txData), { type: TRANSACTION_TYPE }), opts);\n        this.common = this._validateTxV(this.v, opts.common);\n        this.gasPrice = uint8ArrayToBigInt(toUint8Array(txData.gasPrice === '' ? '0x' : txData.gasPrice));\n        if (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n            const msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)');\n            throw new Error(msg);\n        }\n        this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice });\n        BaseTransaction._validateNotArray(txData);\n        if (this.common.gteHardfork('spuriousDragon')) {\n            if (!this.isSigned()) {\n                this.activeCapabilities.push(Capability.EIP155ReplayProtection);\n            }\n            else {\n                // EIP155 spec:\n                // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n                // then when computing the hash of a transaction for purposes of signing or recovering\n                // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n                // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n                // v and chain ID meet EIP-155 conditions\n                // eslint-disable-next-line no-lonely-if\n                if (meetsEIP155(this.v, this.common.chainId())) {\n                    this.activeCapabilities.push(Capability.EIP155ReplayProtection);\n                }\n            }\n        }\n        const freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;\n        if (freeze) {\n            Object.freeze(this);\n        }\n    }\n    /**\n     * Returns a Uint8Array Array of the raw Uint8Arrays of the legacy transaction, in order.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     *\n     * For legacy txs this is also the correct format to add transactions\n     * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n     * for typed txs).\n     *\n     * For an unsigned tx this method returns the empty Uint8Array values\n     * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n     * representation have a look at {@link Transaction.getMessageToSign}.\n     */\n    raw() {\n        return [\n            bigIntToUnpaddedUint8Array(this.nonce),\n            bigIntToUnpaddedUint8Array(this.gasPrice),\n            bigIntToUnpaddedUint8Array(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Uint8Array.from([]),\n            bigIntToUnpaddedUint8Array(this.value),\n            this.data,\n            this.v !== undefined ? bigIntToUnpaddedUint8Array(this.v) : Uint8Array.from([]),\n            this.r !== undefined ? bigIntToUnpaddedUint8Array(this.r) : Uint8Array.from([]),\n            this.s !== undefined ? bigIntToUnpaddedUint8Array(this.s) : Uint8Array.from([]),\n        ];\n    }\n    /**\n     * Returns the serialized encoding of the legacy transaction.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     *\n     * For an unsigned tx this method uses the empty Uint8Array values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link Transaction.getMessageToSign}.\n     */\n    serialize() {\n        return RLP.encode(this.raw());\n    }\n    _getMessageToSign() {\n        const values = [\n            bigIntToUnpaddedUint8Array(this.nonce),\n            bigIntToUnpaddedUint8Array(this.gasPrice),\n            bigIntToUnpaddedUint8Array(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Uint8Array.from([]),\n            bigIntToUnpaddedUint8Array(this.value),\n            this.data,\n        ];\n        if (this.supports(Capability.EIP155ReplayProtection)) {\n            values.push(toUint8Array(this.common.chainId()));\n            values.push(unpadUint8Array(toUint8Array(0)));\n            values.push(unpadUint8Array(toUint8Array(0)));\n        }\n        return values;\n    }\n    getMessageToSign(hashMessage = true) {\n        const message = this._getMessageToSign();\n        if (hashMessage) {\n            return keccak256(RLP.encode(message));\n        }\n        return message;\n    }\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    getDataFee() {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: super.getDataFee(),\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return super.getDataFee();\n    }\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    getUpfrontCost() {\n        return this.gasLimit * this.gasPrice + this.value;\n    }\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    hash() {\n        if (!this.isSigned()) {\n            const msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = keccak256(RLP.encode(this.raw()));\n            }\n            return this.cache.hash;\n        }\n        return keccak256(RLP.encode(this.raw()));\n    }\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    getMessageToVerifySignature() {\n        if (!this.isSigned()) {\n            const msg = this._errorMsg('This transaction is not signed');\n            throw new Error(msg);\n        }\n        const message = this._getMessageToSign();\n        return keccak256(RLP.encode(message));\n    }\n    /**\n     * Returns the public key of the sender\n     */\n    getSenderPublicKey() {\n        const msgHash = this.getMessageToVerifySignature();\n        const { v, r, s } = this;\n        this._validateHighS();\n        try {\n            return ecrecover(msgHash, v, bigIntToUnpaddedUint8Array(r), bigIntToUnpaddedUint8Array(s), this.supports(Capability.EIP155ReplayProtection)\n                ? this.common.chainId()\n                : undefined);\n        }\n        catch (e) {\n            const msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    }\n    /**\n     * Process the v, r, s values from the `sign` method of the base transaction.\n     */\n    _processSignature(_v, r, s) {\n        let v = _v;\n        if (this.supports(Capability.EIP155ReplayProtection)) {\n            v += this.common.chainId() * BigInt(2) + BigInt(8);\n        }\n        const opts = Object.assign(Object.assign({}, this.txOptions), { common: this.common });\n        return Transaction.fromTxData({\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            v,\n            r: uint8ArrayToBigInt(r),\n            s: uint8ArrayToBigInt(s),\n        }, opts);\n    }\n    /**\n     * Returns an object with the JSON representation of the transaction.\n     */\n    toJSON() {\n        return {\n            nonce: bigIntToHex(this.nonce),\n            gasPrice: bigIntToHex(this.gasPrice),\n            gasLimit: bigIntToHex(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: bigIntToHex(this.value),\n            data: bytesToHex(this.data),\n            v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n            r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n            s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n        };\n    }\n    /**\n     * Validates tx's `v` value\n     */\n    _validateTxV(_v, common) {\n        let chainIdBigInt;\n        const v = _v !== undefined ? Number(_v) : undefined;\n        // Check for valid v values in the scope of a signed legacy tx\n        if (v !== undefined) {\n            // v is 1. not matching the EIP-155 chainId included case and...\n            // v is 2. not matching the classic v=27 or v=28 case\n            if (v < 37 && v !== 27 && v !== 28) {\n                throw new Error(`Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${v}`);\n            }\n        }\n        // No unsigned tx and EIP-155 activated and chain ID included\n        if (v !== undefined &&\n            v !== 0 &&\n            (!common || common.gteHardfork('spuriousDragon')) &&\n            v !== 27 &&\n            v !== 28) {\n            if (common) {\n                if (!meetsEIP155(BigInt(v), common.chainId())) {\n                    throw new Error(`Incompatible EIP155-based V ${v} and chain id ${common.chainId()}. See the Common parameter of the Transaction constructor to set the chain id.`);\n                }\n            }\n            else {\n                // Derive the original chain ID\n                let numSub;\n                if ((v - 35) % 2 === 0) {\n                    numSub = 35;\n                }\n                else {\n                    numSub = 36;\n                }\n                // Use derived chain ID to create a proper Common\n                chainIdBigInt = BigInt(v - numSub) / BigInt(2);\n            }\n        }\n        return this._getCommon(common, chainIdBigInt);\n    }\n    /**\n     * Return a compact error string representation of the object\n     */\n    errorStr() {\n        let errorStr = this._getSharedErrorPostfix();\n        errorStr += ` gasPrice=${this.gasPrice}`;\n        return errorStr;\n    }\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    _errorMsg(msg) {\n        return `${msg} (${this.errorStr()})`;\n    }\n}\n//# sourceMappingURL=legacyTransaction.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { isUint8Array } from 'web3-utils';\nimport { toUint8Array, uint8ArrayToBigInt } from '../common/utils.js';\nimport { FeeMarketEIP1559Transaction } from './eip1559Transaction.js';\nimport { AccessListEIP2930Transaction } from './eip2930Transaction.js';\nimport { Transaction } from './legacyTransaction.js';\nconst extraTxTypes = new Map();\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class TransactionFactory {\n    // It is not possible to instantiate a TransactionFactory object.\n    // eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n    constructor() { }\n    static typeToInt(txType) {\n        return Number(uint8ArrayToBigInt(toUint8Array(txType)));\n    }\n    static registerTransactionType(type, txClass) {\n        const txType = TransactionFactory.typeToInt(type);\n        extraTxTypes.set(txType, txClass);\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param txOptions - Options to pass on to the constructor of the transaction\n     */\n    static fromTxData(txData, txOptions = {}) {\n        if (!('type' in txData) || txData.type === undefined) {\n            // Assume legacy transaction\n            return Transaction.fromTxData(txData, txOptions);\n        }\n        const txType = TransactionFactory.typeToInt(txData.type);\n        if (txType === 0) {\n            return Transaction.fromTxData(txData, txOptions);\n        }\n        if (txType === 1) {\n            // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n            return AccessListEIP2930Transaction.fromTxData(\n            // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n            txData, txOptions);\n        }\n        if (txType === 2) {\n            return FeeMarketEIP1559Transaction.fromTxData(\n            // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n            txData, txOptions);\n        }\n        const ExtraTransaction = extraTxTypes.get(txType);\n        if (ExtraTransaction === null || ExtraTransaction === void 0 ? void 0 : ExtraTransaction.fromTxData) {\n            return ExtraTransaction.fromTxData(txData, txOptions);\n        }\n        throw new Error(`Tx instantiation with type ${txType} not supported`);\n    }\n    /**\n     * This method tries to decode serialized data.\n     *\n     * @param data - The data Uint8Array\n     * @param txOptions - The transaction options\n     */\n    static fromSerializedData(data, txOptions = {}) {\n        if (data[0] <= 0x7f) {\n            // Determine the type.\n            switch (data[0]) {\n                case 1:\n                    return AccessListEIP2930Transaction.fromSerializedTx(data, txOptions);\n                case 2:\n                    return FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions);\n                default: {\n                    const ExtraTransaction = extraTxTypes.get(Number(data[0]));\n                    if (ExtraTransaction === null || ExtraTransaction === void 0 ? void 0 : ExtraTransaction.fromSerializedTx) {\n                        return ExtraTransaction.fromSerializedTx(data, txOptions);\n                    }\n                    throw new Error(`TypedTransaction with ID ${data[0]} unknown`);\n                }\n            }\n        }\n        else {\n            return Transaction.fromSerializedTx(data, txOptions);\n        }\n    }\n    /**\n     * When decoding a BlockBody, in the transactions field, a field is either:\n     * A Uint8Array (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n     * A Uint8Array[] (Legacy Transaction)\n     * This method returns the right transaction.\n     *\n     * @param data - A Uint8Array or Uint8Array[]\n     * @param txOptions - The transaction options\n     */\n    static fromBlockBodyData(data, txOptions = {}) {\n        if (isUint8Array(data)) {\n            return this.fromSerializedData(data, txOptions);\n        }\n        if (Array.isArray(data)) {\n            // It is a legacy transaction\n            return Transaction.fromValuesArray(data, txOptions);\n        }\n        throw new Error('Cannot decode transaction: unknown type input');\n    }\n}\n//# sourceMappingURL=transactionFactory.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * The web3 accounts package contains functions to generate Ethereum accounts and sign transactions & data.\n *\n * For using accounts functions, first install Web3 package using `npm i web3` or `yarn add web3` based on your package manager usage.\n * After that, Accounts functions will be available as mentioned in following snippet.\n * ```ts\n * import {Web3} from 'web3';\n *\n * const web3 = new Web3();\n * const account = web3.eth.accounts.create();\n * const result = web3.eth.accounts.hashMessage(\"Test Message\");\n *\n * ```\n *\n * For using individual package install `web3-eth-accounts` package using `npm i web3-eth-accounts` or `yarn add web3-eth-accounts` and only import required functions.\n * This is more efficient approach for building lightweight applications.\n * ```ts\n * import {create,hashMessage} from 'web3-eth-accounts';\n *\n * const account = create();\n * const result = hashMessage(\"Test Message\");\n *\n * ```\n * @module Accounts\n *\n */\nimport { decrypt as createDecipheriv, encrypt as createCipheriv, } from 'ethereum-cryptography/aes.js';\nimport { pbkdf2Sync } from 'ethereum-cryptography/pbkdf2.js';\nimport { scryptSync } from 'ethereum-cryptography/scrypt.js';\nimport { InvalidKdfError, InvalidPasswordError, InvalidPrivateKeyError, InvalidSignatureError, IVLengthError, KeyDerivationError, KeyStoreVersionError, PBKDF2IterationsError, PrivateKeyLengthError, TransactionSigningError, UndefinedRawTransactionError, } from 'web3-errors';\nimport { bytesToUint8Array, bytesToHex, fromUtf8, hexToBytes, isUint8Array, numberToHex, randomBytes, sha3Raw, toChecksumAddress, uint8ArrayConcat, utf8ToHex, uuidV4, } from 'web3-utils';\nimport { isHexStrict, isNullish, isString, validator } from 'web3-validator';\nimport { secp256k1 } from './tx/constants.js';\nimport { keyStoreSchema } from './schemas.js';\nimport { TransactionFactory } from './tx/transactionFactory.js';\n/**\n * Get the private key Uint8Array after the validation.\n * Note: This function is not exported through main web3 package, so for using it directly import from accounts package.\n * @param data - Private key\n * @param ignoreLength - Optional, ignore length check during validation\n * @returns The Uint8Array private key\n *\n * ```ts\n * parseAndValidatePrivateKey(\"0x08c673022000ece7964ea4db2d9369c50442b2869cbd8fc21baaca59e18f642c\")\n *\n * > Uint8Array(32) [\n * 186,  26, 143, 168, 235, 179,  90,  75,\n * 101,  63,  84, 221, 152, 150,  30, 203,\n *   8, 113,  94, 226,  53, 213, 216,   5,\n * 194, 159,  17,  53, 219,  97, 121, 248\n * ]\n *\n * ```\n */\nexport const parseAndValidatePrivateKey = (data, ignoreLength) => {\n    let privateKeyUint8Array;\n    // To avoid the case of 1 character less in a hex string which is prefixed with '0' by using 'bytesToUint8Array'\n    if (!ignoreLength && typeof data === 'string' && isHexStrict(data) && data.length !== 66) {\n        throw new PrivateKeyLengthError();\n    }\n    try {\n        privateKeyUint8Array = isUint8Array(data) ? data : bytesToUint8Array(data);\n    }\n    catch (_a) {\n        throw new InvalidPrivateKeyError();\n    }\n    if (!ignoreLength && privateKeyUint8Array.byteLength !== 32) {\n        throw new PrivateKeyLengthError();\n    }\n    return privateKeyUint8Array;\n};\n/**\n *\n * Hashes the given message. The data will be `UTF-8 HEX` decoded and enveloped as follows:\n * `\"\\x19Ethereum Signed Message:\\n\" + message.length + message` and hashed using keccak256.\n *\n * @param message - A message to hash, if its HEX it will be UTF8 decoded.\n * @param skipPrefix - (default: false) If true, the message will be not prefixed with \"\\x19Ethereum Signed Message:\\n\" + message.length\n * @returns The hashed message\n *\n * ```ts\n * web3.eth.accounts.hashMessage(\"Hello world\")\n *\n * > \"0x8144a6fa26be252b86456491fbcd43c1de7e022241845ffea1c3df066f7cfede\"\n *\n * web3.eth.accounts.hashMessage(web3.utils.utf8ToHex(\"Hello world\")) // Will be hex decoded in hashMessage\n *\n * > \"0x8144a6fa26be252b86456491fbcd43c1de7e022241845ffea1c3df066f7cfede\"\n *\n * web3.eth.accounts.hashMessage(\"Hello world\", true)\n *\n * > \"0xed6c11b0b5b808960df26f5bfc471d04c1995b0ffd2055925ad1be28d6baadfd\"\n * ```\n */\nexport const hashMessage = (message, skipPrefix = false) => {\n    const messageHex = isHexStrict(message) ? message : utf8ToHex(message);\n    const messageBytes = hexToBytes(messageHex);\n    const preamble = hexToBytes(fromUtf8(`\\x19Ethereum Signed Message:\\n${messageBytes.byteLength}`));\n    const ethMessage = skipPrefix ? messageBytes : uint8ArrayConcat(preamble, messageBytes);\n    return sha3Raw(ethMessage); // using keccak in web3-utils.sha3Raw instead of SHA3 (NIST Standard) as both are different\n};\n/**\n * Takes a hash of a message and a private key, signs the message using the SECP256k1 elliptic curve algorithm, and returns the signature components.\n * @param hash - The hash of the message to be signed, represented as a hexadecimal string.\n * @param privateKey - The private key used to sign the message, represented as a byte array.\n * @returns - The signature Object containing the message, messageHash, signature r, s, v\n */\nexport const signMessageWithPrivateKey = (hash, privateKey) => {\n    const privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);\n    const signature = secp256k1.sign(hash.substring(2), privateKeyUint8Array);\n    const signatureBytes = signature.toCompactRawBytes();\n    const r = signature.r.toString(16).padStart(64, '0');\n    const s = signature.s.toString(16).padStart(64, '0');\n    const v = signature.recovery + 27;\n    return {\n        messageHash: hash,\n        v: numberToHex(v),\n        r: `0x${r}`,\n        s: `0x${s}`,\n        signature: `${bytesToHex(signatureBytes)}${v.toString(16)}`,\n    };\n};\n/**\n * Signs arbitrary data with a given private key.\n * :::info\n * The value passed as the data parameter will be UTF-8 HEX decoded and wrapped as follows: \"\\\\x19Ethereum Signed Message:\\\\n\" + message.length + message\n * :::\n\n * @param data - The data to sign\n * @param privateKey - The 32 byte private key to sign with\n * @returns The signature Object containing the message, messageHash, signature r, s, v\n *\n * ```ts\n * web3.eth.accounts.sign('Some data', '0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318')\n * > {\n * message: 'Some data',\n * messageHash: '0x1da44b586eb0729ff70a73c326926f6ed5a25f5b056e7f47fbc6e58d86871655',\n * v: '0x1c',\n * r: '0xb91467e570a6466aa9e9876cbcd013baba02900b8979d43fe208a4a4f339f5fd',\n * s: '0x6007e74cd82e037b800186422fc2da167c747ef045e5d18a5f5d4300f8e1a029',\n * signature: '0xb91467e570a6466aa9e9876cbcd013baba02900b8979d43fe208a4a4f339f5fd6007e74cd82e037b800186422fc2da167c747ef045e5d18a5f5d4300f8e1a0291c'\n * }\n * ```\n */\nexport const sign = (data, privateKey) => {\n    const hash = hashMessage(data);\n    const { messageHash, v, r, s, signature } = signMessageWithPrivateKey(hash, privateKey);\n    return {\n        message: data,\n        messageHash,\n        v,\n        r,\n        s,\n        signature,\n    };\n};\n/**\n * Signs raw data with a given private key without adding the Ethereum-specific prefix.\n *\n * @param data - The raw data to sign. If it's a hex string, it will be used as-is. Otherwise, it will be UTF-8 encoded.\n * @param privateKey - The 32 byte private key to sign with\n * @returns The signature Object containing the message, messageHash, signature r, s, v\n *\n * ```ts\n * web3.eth.accounts.signRaw('Some data', '0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318')\n * > {\n *   message: 'Some data',\n *   messageHash: '0x43a26051362b8040b289abe93334a5e3662751aa691185ae9e9a2e1e0c169350',\n *   v: '0x1b',\n *   r: '0x93da7e2ddd6b2ff1f5af0c752f052ed0d7d5bff19257db547a69cd9a879b37d4',\n *   s: '0x334485e42b33815fd2cf8a245a5393b282214060844a9681495df2257140e75c',\n *   signature: '0x93da7e2ddd6b2ff1f5af0c752f052ed0d7d5bff19257db547a69cd9a879b37d4334485e42b33815fd2cf8a245a5393b282214060844a9681495df2257140e75c1b'\n * }\n * ```\n */\nexport const signRaw = (data, privateKey) => {\n    // Hash the message without the Ethereum-specific prefix\n    const hash = hashMessage(data, true);\n    // Sign the hash with the private key\n    const { messageHash, v, r, s, signature } = signMessageWithPrivateKey(hash, privateKey);\n    return {\n        message: data,\n        messageHash,\n        v,\n        r,\n        s,\n        signature,\n    };\n};\n/**\n * Signs an Ethereum transaction with a given private key.\n *\n * @param transaction - The transaction, must be a legacy, EIP2930 or EIP 1559 transaction type\n * @param privateKey -  The private key to import. This is 32 bytes of random data.\n * @returns A signTransactionResult object that contains message hash, r, s, v, transaction hash and raw transaction.\n *\n * This function is not stateful here. We need network access to get the account `nonce` and `chainId` to sign the transaction.\n * This function will rely on user to provide the full transaction to be signed. If you want to sign a partial transaction object\n * Use {@link Web3.eth.accounts.sign} instead.\n *\n * Signing a legacy transaction\n * ```ts\n * import {signTransaction, Transaction} from 'web3-eth-accounts';\n *\n * signTransaction(new Transaction({\n *\tto: '0x118C2E5F57FD62C2B5b46a5ae9216F4FF4011a07',\n *\tvalue: '0x186A0',\n *\tgasLimit: '0x520812',\n *\tgasPrice: '0x09184e72a000',\n *\tdata: '',\n *\tchainId: 1,\n *\tnonce: 0 }),\n * '0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318')\n *\n * > {\n * messageHash: '0x28b7b75f7ba48d588a902c1ff4d5d13cc0ca9ac0aaa39562368146923fb853bf',\n * v: '0x25',\n * r: '0x601b0017b0e20dd0eeda4b895fbc1a9e8968990953482214f880bae593e71b5',\n * s: '0x690d984493560552e3ebdcc19a65b9c301ea9ddc82d3ab8cfde60485fd5722ce',\n * rawTransaction: '0xf869808609184e72a0008352081294118c2e5f57fd62c2b5b46a5ae9216f4ff4011a07830186a08025a00601b0017b0e20dd0eeda4b895fbc1a9e8968990953482214f880bae593e71b5a0690d984493560552e3ebdcc19a65b9c301ea9ddc82d3ab8cfde60485fd5722ce',\n * transactionHash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n * ```\n *\n * Signing an eip 1559 transaction\n * ```ts\n * import {signTransaction, Transaction} from 'web3-eth-accounts';\n *\n * signTransaction(new Transaction({\n *\tto: '0xF0109fC8DF283027b6285cc889F5aA624EaC1F55',\n *\tmaxPriorityFeePerGas: '0x3B9ACA00',\n *\tmaxFeePerGas: '0xB2D05E00',\n *\tgasLimit: '0x6A4012',\n *\tvalue: '0x186A0',\n *\tdata: '',\n *\tchainId: 1,\n *\tnonce: 0}),\n * \"0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318\")\n * > {\n *  messageHash: '0x5744f24d5f0aff6c70487c8e85adf07d8564e50b08558788f00479611d7bae5f',\n * v: '0x25',\n * r: '0x78a5a6b2876c3985f90f82073d18d57ac299b608cc76a4ba697b8bb085048347',\n * s: '0x9cfcb40cc7d505ed17ff2d3337b51b066648f10c6b7e746117de69b2eb6358d',\n * rawTransaction: '0xf8638080836a401294f0109fc8df283027b6285cc889f5aa624eac1f55830186a08025a078a5a6b2876c3985f90f82073d18d57ac299b608cc76a4ba697b8bb085048347a009cfcb40cc7d505ed17ff2d3337b51b066648f10c6b7e746117de69b2eb6358d',\n * transactionHash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n * }\n * ```\n *\n * Signing an eip 2930 transaction\n * ```ts\n * import {signTransaction, Transaction} from 'web3-eth-accounts';\n *\n * signTransaction(new Transaction ({\n *\tchainId: 1,\n *\tnonce: 0,\n *\tgasPrice: '0x09184e72a000',\n *\tgasLimit: '0x2710321',\n *\tto: '0xF0109fC8DF283027b6285cc889F5aA624EaC1F55',\n *\tvalue: '0x186A0',\n *\tdata: '',\n *\taccessList: [\n *\t\t{\n *\t\t\taddress: '0x0000000000000000000000000000000000000101',\n *\t\t\tstorageKeys: [\n *\t\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000000',\n *\t\t\t\t'0x00000000000000000000000000000000000000000000000000000000000060a7',\n *\t\t\t],\n *\t\t},\n *\t],\n * }),\"0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318\")\n *\n * > {\n * messageHash: '0xc55ea24bdb4c379550a7c9a6818ac39ca33e75bc78ddb862bd82c31cc1c7a073',\n * v: '0x26',\n * r: '0x27344e77871c8b2068bc998bf28e0b5f9920867a69c455b2ed0c1c150fec098e',\n * s: '0x519f0130a1d662841d4a28082e9c9bb0a15e0e59bb46cfc39a52f0e285dec6b9',\n * rawTransaction: '0xf86a808609184e72a000840271032194f0109fc8df283027b6285cc889f5aa624eac1f55830186a08026a027344e77871c8b2068bc998bf28e0b5f9920867a69c455b2ed0c1c150fec098ea0519f0130a1d662841d4a28082e9c9bb0a15e0e59bb46cfc39a52f0e285dec6b9',\n * transactionHash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n * }\n * ```\n */\nexport const signTransaction = (transaction, privateKey) => __awaiter(void 0, void 0, void 0, function* () {\n    const signedTx = transaction.sign(hexToBytes(privateKey));\n    if (isNullish(signedTx.v) || isNullish(signedTx.r) || isNullish(signedTx.s))\n        throw new TransactionSigningError('Signer Error');\n    const validationErrors = signedTx.validate(true);\n    if (validationErrors.length > 0) {\n        let errorString = 'Signer Error ';\n        for (const validationError of validationErrors) {\n            errorString += `${errorString} ${validationError}.`;\n        }\n        throw new TransactionSigningError(errorString);\n    }\n    const rawTx = bytesToHex(signedTx.serialize());\n    const txHash = sha3Raw(rawTx); // using keccak in web3-utils.sha3Raw instead of SHA3 (NIST Standard) as both are different\n    return {\n        messageHash: bytesToHex(signedTx.getMessageToSign(true)),\n        v: `0x${signedTx.v.toString(16)}`,\n        r: `0x${signedTx.r.toString(16).padStart(64, '0')}`,\n        s: `0x${signedTx.s.toString(16).padStart(64, '0')}`,\n        rawTransaction: rawTx,\n        transactionHash: bytesToHex(txHash),\n    };\n});\n/**\n * Recovers the Ethereum address which was used to sign the given RLP encoded transaction.\n *\n * @param rawTransaction - The hex string having RLP encoded transaction\n * @returns The Ethereum address used to sign this transaction\n * ```ts\n * web3.eth.accounts.recoverTransaction('0xf869808504e3b29200831e848094f0109fc8df283027b6285cc889f5aa624eac1f55843b9aca008025a0c9cf86333bcb065d140032ecaab5d9281bde80f21b9687b3e94161de42d51895a0727a108a0b8d101465414033c3f705a9c7b826e596766046ee1183dbc8aeaa68');\n * > \"0x2c7536E3605D9C16a7a3D7b1898e529396a65c23\"\n * ```\n */\nexport const recoverTransaction = (rawTransaction) => {\n    if (isNullish(rawTransaction))\n        throw new UndefinedRawTransactionError();\n    const tx = TransactionFactory.fromSerializedData(hexToBytes(rawTransaction));\n    return toChecksumAddress(tx.getSenderAddress().toString());\n};\n/**\n * Recovers the Ethereum address which was used to sign the given data\n *\n * @param data - Either a signed message, hash, or the {@link signatureObject}\n * @param signature - The raw RLP encoded signature\n * @param signatureOrV - signature or V\n * @param prefixedOrR - prefixed or R\n * @param s - S value in signature\n * @param prefixed - (default: false) If the last parameter is true, the given message will NOT automatically be prefixed with `\"\\\\x19Ethereum Signed Message:\\\\n\" + message.length + message`, and assumed to be already prefixed and hashed.\n * @returns The Ethereum address used to sign this data\n *\n * ```ts\n * const data = 'Some data';\n * const sigObj = web3.eth.accounts.sign(data, '0xbe6383dad004f233317e46ddb46ad31b16064d14447a95cc1d8c8d4bc61c3728')\n *\n * > {\n *   message: 'Some data',\n *   messageHash: '0x1da44b586eb0729ff70a73c326926f6ed5a25f5b056e7f47fbc6e58d86871655',\n *   v: '0x1b',\n *   r: '0xa8037a6116c176a25e6fc224947fde9e79a2deaa0dd8b67b366fbdfdbffc01f9',\n *   s: '0x53e41351267b20d4a89ebfe9c8f03c04de9b345add4a52f15bd026b63c8fb150',\n *   signature: '0xa8037a6116c176a25e6fc224947fde9e79a2deaa0dd8b67b366fbdfdbffc01f953e41351267b20d4a89ebfe9c8f03c04de9b345add4a52f15bd026b63c8fb1501b'\n * }\n *\n * // now recover\n * web3.eth.accounts.recover(data, sigObj.v, sigObj.r, sigObj.s)\n *\n * > 0xEB014f8c8B418Db6b45774c326A0E64C78914dC0\n * ```\n */\nexport const recover = (data, signatureOrV, prefixedOrR, s, prefixed) => {\n    if (typeof data === 'object') {\n        const signatureStr = `${data.r}${data.s.slice(2)}${data.v.slice(2)}`;\n        return recover(data.messageHash, signatureStr, prefixedOrR);\n    }\n    if (typeof signatureOrV === 'string' && typeof prefixedOrR === 'string' && !isNullish(s)) {\n        const signatureStr = `${prefixedOrR}${s.slice(2)}${signatureOrV.slice(2)}`;\n        return recover(data, signatureStr, prefixed);\n    }\n    if (isNullish(signatureOrV))\n        throw new InvalidSignatureError('signature string undefined');\n    const V_INDEX = 130; // r = first 32 bytes, s = second 32 bytes, v = last byte of signature\n    const hashedMessage = prefixedOrR ? data : hashMessage(data);\n    let v = parseInt(signatureOrV.substring(V_INDEX), 16); // 0x + r + s + v\n    if (v > 26) {\n        v -= 27;\n    }\n    const ecPublicKey = secp256k1.Signature.fromCompact(signatureOrV.slice(2, V_INDEX))\n        .addRecoveryBit(v)\n        .recoverPublicKey(hashedMessage.replace('0x', ''))\n        .toRawBytes(false);\n    const publicHash = sha3Raw(ecPublicKey.subarray(1));\n    const address = toChecksumAddress(`0x${publicHash.slice(-40)}`);\n    return address;\n};\n/**\n * Get the ethereum Address from a private key\n *\n * @param privateKey - String or Uint8Array of 32 bytes\n * @param ignoreLength - if true, will not error check length\n * @returns The Ethereum address\n * @example\n * ```ts\n * web3.eth.accounts.privateKeyToAddress(\"0xbe6383dad004f233317e46ddb46ad31b16064d14447a95cc1d8c8d4bc61c3728\")\n *\n * > \"0xEB014f8c8B418Db6b45774c326A0E64C78914dC0\"\n * ```\n */\nexport const privateKeyToAddress = (privateKey) => {\n    const privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);\n    // Get public key from private key in compressed format\n    const publicKey = secp256k1.getPublicKey(privateKeyUint8Array, false);\n    // Uncompressed ECDSA public key contains the prefix `0x04` which is not used in the Ethereum public key\n    const publicKeyHash = sha3Raw(publicKey.slice(1));\n    // The hash is returned as 256 bits (32 bytes) or 64 hex characters\n    // To get the address, take the last 20 bytes of the public hash\n    const address = publicKeyHash.slice(-40);\n    return toChecksumAddress(`0x${address}`);\n};\n/**\n * Get the public key from a private key\n *\n * @param privateKey - String or Uint8Array of 32 bytes\n * @param isCompressed - if true, will generate a 33 byte compressed public key instead of a 65 byte public key\n * @returns The public key\n * @example\n * ```ts\n * web3.eth.accounts.privateKeyToPublicKey(\"0x1e046a882bb38236b646c9f135cf90ad90a140810f439875f2a6dd8e50fa261f\", true)\n *\n * > \"0x42beb65f179720abaa3ec9a70a539629cbbc5ec65bb57e7fc78977796837e537662dd17042e6449dc843c281067a4d6d8d1a1775a13c41901670d5de7ee6503a\" // uncompressed public key\n * ```\n */\nexport const privateKeyToPublicKey = (privateKey, isCompressed) => {\n    const privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);\n    // Get public key from private key in compressed format\n    return `0x${bytesToHex(secp256k1.getPublicKey(privateKeyUint8Array, isCompressed)).slice(4)}`; // 0x and removing compression byte\n};\n/**\n * encrypt a private key with a password, returns a V3 JSON Keystore\n *\n * Read more: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n *\n * @param privateKey - The private key to encrypt, 32 bytes.\n * @param password - The password used for encryption.\n * @param options - Options to configure to encrypt the keystore either scrypt or pbkdf2\n * @returns Returns a V3 JSON Keystore\n *\n * Encrypt using scrypt options:\n * ```ts\n *\n * web3.eth.accounts.encrypt(\n *    '0x67f476289210e3bef3c1c75e4de993ff0a00663df00def84e73aa7411eac18a6',\n *    '123',\n *    {\n *        n: 8192,\n *\t    iv: web3.utils.hexToBytes('0xbfb43120ae00e9de110f8325143a2709'),\n *\t    salt: web3.utils.hexToBytes('0x210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd'),\n *\t}).then(console.log)\n *\n * > {\n * version: 3,\n * id: 'c0cb0a94-4702-4492-b6e6-eb2ac404344a',\n * address: 'cda9a91875fc35c8ac1320e098e584495d66e47c',\n * crypto: {\n *   ciphertext: 'cb3e13e3281ff3861a3f0257fad4c9a51b0eb046f9c7821825c46b210f040b8f',\n *   cipherparams: { iv: 'bfb43120ae00e9de110f8325143a2709' },\n *   cipher: 'aes-128-ctr',\n *   kdf: 'scrypt',\n *   kdfparams: {\n *     n: 8192,\n *     r: 8,\n *     p: 1,\n *     dklen: 32,\n *     salt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd'\n *   },\n *   mac: 'efbf6d3409f37c0084a79d5fdf9a6f5d97d11447517ef1ea8374f51e581b7efd'\n * }\n *}\n *```\n *\n * Encrypting using pbkdf2 options:\n * ```ts\n * web3.eth.accounts.encrypt('0x348ce564d427a3311b6536bbcff9390d69395b06ed6c486954e971d960fe8709',\n *'123',\n *{\n *\tiv: 'bfb43120ae00e9de110f8325143a2709',\n *\tsalt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd',\n *\tc: 262144,\n *\tkdf: 'pbkdf2',\n *}).then(console.log)\n *\n * >\n * {\n *   version: 3,\n *   id: '77381417-0973-4e4b-b590-8eb3ace0fe2d',\n *   address: 'b8ce9ab6943e0eced004cde8e3bbed6568b2fa01',\n *   crypto: {\n *     ciphertext: '76512156a34105fa6473ad040c666ae7b917d14c06543accc0d2dc28e6073b12',\n *     cipherparams: { iv: 'bfb43120ae00e9de110f8325143a2709' },\n *     cipher: 'aes-128-ctr',\n *     kdf: 'pbkdf2',\n *     kdfparams: {\n *       dklen: 32,\n *       salt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd',\n *       c: 262144,\n *       prf: 'hmac-sha256'\n *     },\n *   mac: '46eb4884e82dc43b5aa415faba53cc653b7038e9d61cc32fd643cf8c396189b7'\n *   }\n * }\n *```\n */\nexport const encrypt = (privateKey, password, options) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);\n    // if given salt or iv is a string, convert it to a Uint8Array\n    let salt;\n    if (options === null || options === void 0 ? void 0 : options.salt) {\n        salt = typeof options.salt === 'string' ? hexToBytes(options.salt) : options.salt;\n    }\n    else {\n        salt = randomBytes(32);\n    }\n    if (!(isString(password) || isUint8Array(password))) {\n        throw new InvalidPasswordError();\n    }\n    const uint8ArrayPassword = typeof password === 'string' ? hexToBytes(utf8ToHex(password)) : password;\n    let initializationVector;\n    if (options === null || options === void 0 ? void 0 : options.iv) {\n        initializationVector = typeof options.iv === 'string' ? hexToBytes(options.iv) : options.iv;\n        if (initializationVector.length !== 16) {\n            throw new IVLengthError();\n        }\n    }\n    else {\n        initializationVector = randomBytes(16);\n    }\n    const kdf = (_a = options === null || options === void 0 ? void 0 : options.kdf) !== null && _a !== void 0 ? _a : 'scrypt';\n    let derivedKey;\n    let kdfparams;\n    // derive key from key derivation function\n    if (kdf === 'pbkdf2') {\n        kdfparams = {\n            dklen: (_b = options === null || options === void 0 ? void 0 : options.dklen) !== null && _b !== void 0 ? _b : 32,\n            salt: bytesToHex(salt).replace('0x', ''),\n            c: (_c = options === null || options === void 0 ? void 0 : options.c) !== null && _c !== void 0 ? _c : 262144,\n            prf: 'hmac-sha256',\n        };\n        if (kdfparams.c < 1000) {\n            // error when c < 1000, pbkdf2 is less secure with less iterations\n            throw new PBKDF2IterationsError();\n        }\n        derivedKey = pbkdf2Sync(uint8ArrayPassword, salt, kdfparams.c, kdfparams.dklen, 'sha256');\n    }\n    else if (kdf === 'scrypt') {\n        kdfparams = {\n            n: (_d = options === null || options === void 0 ? void 0 : options.n) !== null && _d !== void 0 ? _d : 8192,\n            r: (_e = options === null || options === void 0 ? void 0 : options.r) !== null && _e !== void 0 ? _e : 8,\n            p: (_f = options === null || options === void 0 ? void 0 : options.p) !== null && _f !== void 0 ? _f : 1,\n            dklen: (_g = options === null || options === void 0 ? void 0 : options.dklen) !== null && _g !== void 0 ? _g : 32,\n            salt: bytesToHex(salt).replace('0x', ''),\n        };\n        derivedKey = scryptSync(uint8ArrayPassword, salt, kdfparams.n, kdfparams.p, kdfparams.r, kdfparams.dklen);\n    }\n    else {\n        throw new InvalidKdfError();\n    }\n    const cipher = yield createCipheriv(privateKeyUint8Array, derivedKey.slice(0, 16), initializationVector, 'aes-128-ctr');\n    const ciphertext = bytesToHex(cipher).slice(2);\n    const mac = sha3Raw(uint8ArrayConcat(derivedKey.slice(16, 32), cipher)).replace('0x', '');\n    return {\n        version: 3,\n        id: uuidV4(),\n        address: privateKeyToAddress(privateKeyUint8Array).toLowerCase().replace('0x', ''),\n        crypto: {\n            ciphertext,\n            cipherparams: {\n                iv: bytesToHex(initializationVector).replace('0x', ''),\n            },\n            cipher: 'aes-128-ctr',\n            kdf,\n            kdfparams,\n            mac,\n        },\n    };\n});\n/**\n * Get an Account object from the privateKey\n *\n * @param privateKey - String or Uint8Array of 32 bytes\n * @param ignoreLength - if true, will not error check length\n * @returns A Web3Account object\n *\n * :::info\n * The `Web3Account.signTransaction` is not stateful if directly imported from accounts package and used. Network access is required to get the account `nonce` and `chainId` to sign the transaction, so use {@link Web3.eth.accounts.signTransaction} for signing transactions.\n * ::::\n *\n * ```ts\n * web3.eth.accounts.privateKeyToAccount(\"0x348ce564d427a3311b6536bbcff9390d69395b06ed6c486954e971d960fe8709\");\n *\n * >    {\n * \t\t\taddress: '0xb8CE9ab6943e0eCED004cDe8e3bBed6568B2Fa01',\n * \t\t\tprivateKey: '0x348ce564d427a3311b6536bbcff9390d69395b06ed6c486954e971d960fe8709',\n * \t\t\tsign,\n * \t\t\tsignTransaction,\n * \t\t\tencrypt,\n * \t}\n * ```\n */\nexport const privateKeyToAccount = (privateKey, ignoreLength) => {\n    const privateKeyUint8Array = parseAndValidatePrivateKey(privateKey, ignoreLength);\n    return {\n        address: privateKeyToAddress(privateKeyUint8Array),\n        privateKey: bytesToHex(privateKeyUint8Array),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        signTransaction: (_tx) => {\n            throw new TransactionSigningError('Do not have network access to sign the transaction');\n        },\n        sign: (data) => sign(typeof data === 'string' ? data : JSON.stringify(data), privateKeyUint8Array),\n        encrypt: (password, options) => __awaiter(void 0, void 0, void 0, function* () { return encrypt(privateKeyUint8Array, password, options); }),\n    };\n};\n/**\n *\n * Generates and returns a Web3Account object that includes the private and public key\n * For creation of private key, it uses an audited package ethereum-cryptography/secp256k1\n * that is cryptographically secure random number with certain characteristics.\n * Read more: https://www.npmjs.com/package/ethereum-cryptography#secp256k1-curve\n *\n * @returns A Web3Account object\n * ```ts\n * web3.eth.accounts.create();\n * {\n * address: '0xbD504f977021b5E5DdccD8741A368b147B3B38bB',\n * privateKey: '0x964ced1c69ad27a311c432fdc0d8211e987595f7eb34ab405a5f16bdc9563ec5',\n * signTransaction: [Function: signTransaction],\n * sign: [Function: sign],\n * encrypt: [AsyncFunction: encrypt]\n * }\n * ```\n */\nexport const create = () => {\n    const privateKey = secp256k1.utils.randomPrivateKey();\n    return privateKeyToAccount(`${bytesToHex(privateKey)}`);\n};\n/**\n * Decrypts a v3 keystore JSON, and creates the account.\n *\n * @param keystore - the encrypted Keystore object or string to decrypt\n * @param password - The password that was used for encryption\n * @param nonStrict - if true and given a json string, the keystore will be parsed as lowercase.\n * @returns Returns the decrypted Web3Account object\n * Decrypting scrypt\n *\n * ```ts\n * web3.eth.accounts.decrypt({\n *   version: 3,\n *   id: 'c0cb0a94-4702-4492-b6e6-eb2ac404344a',\n *   address: 'cda9a91875fc35c8ac1320e098e584495d66e47c',\n *   crypto: {\n *   ciphertext: 'cb3e13e3281ff3861a3f0257fad4c9a51b0eb046f9c7821825c46b210f040b8f',\n *      cipherparams: { iv: 'bfb43120ae00e9de110f8325143a2709' },\n *      cipher: 'aes-128-ctr',\n *      kdf: 'scrypt',\n *      kdfparams: {\n *        n: 8192,\n *        r: 8,\n *        p: 1,\n *        dklen: 32,\n *        salt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd'\n *      },\n *      mac: 'efbf6d3409f37c0084a79d5fdf9a6f5d97d11447517ef1ea8374f51e581b7efd'\n *    }\n *   }, '123').then(console.log);\n *\n *\n * > {\n * address: '0xcdA9A91875fc35c8Ac1320E098e584495d66e47c',\n * privateKey: '67f476289210e3bef3c1c75e4de993ff0a00663df00def84e73aa7411eac18a6',\n * signTransaction: [Function: signTransaction],\n * sign: [Function: sign],\n * encrypt: [AsyncFunction: encrypt]\n * }\n * ```\n */\nexport const decrypt = (keystore, password, nonStrict) => __awaiter(void 0, void 0, void 0, function* () {\n    const json = typeof keystore === 'object'\n        ? keystore\n        : JSON.parse(nonStrict ? keystore.toLowerCase() : keystore);\n    validator.validateJSONSchema(keyStoreSchema, json);\n    if (json.version !== 3)\n        throw new KeyStoreVersionError();\n    const uint8ArrayPassword = typeof password === 'string' ? hexToBytes(utf8ToHex(password)) : password;\n    validator.validate(['bytes'], [uint8ArrayPassword]);\n    let derivedKey;\n    if (json.crypto.kdf === 'scrypt') {\n        const kdfparams = json.crypto.kdfparams;\n        const uint8ArraySalt = typeof kdfparams.salt === 'string' ? hexToBytes(kdfparams.salt) : kdfparams.salt;\n        derivedKey = scryptSync(uint8ArrayPassword, uint8ArraySalt, kdfparams.n, kdfparams.p, kdfparams.r, kdfparams.dklen);\n    }\n    else if (json.crypto.kdf === 'pbkdf2') {\n        const kdfparams = json.crypto.kdfparams;\n        const uint8ArraySalt = typeof kdfparams.salt === 'string' ? hexToBytes(kdfparams.salt) : kdfparams.salt;\n        derivedKey = pbkdf2Sync(uint8ArrayPassword, uint8ArraySalt, kdfparams.c, kdfparams.dklen, 'sha256');\n    }\n    else {\n        throw new InvalidKdfError();\n    }\n    const ciphertext = hexToBytes(json.crypto.ciphertext);\n    const mac = sha3Raw(uint8ArrayConcat(derivedKey.slice(16, 32), ciphertext)).replace('0x', '');\n    if (mac !== json.crypto.mac) {\n        throw new KeyDerivationError();\n    }\n    const seed = yield createDecipheriv(hexToBytes(json.crypto.ciphertext), derivedKey.slice(0, 16), hexToBytes(json.crypto.cipherparams.iv));\n    return privateKeyToAccount(seed);\n});\n//# sourceMappingURL=account.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { jsonRpc, Web3DeferredPromise } from 'web3-utils';\nimport { OperationAbortError, OperationTimeoutError, ResponseError } from 'web3-errors';\nexport const DEFAULT_BATCH_REQUEST_TIMEOUT = 1000;\nexport class Web3BatchRequest {\n    constructor(requestManager) {\n        this._requestManager = requestManager;\n        this._requests = new Map();\n    }\n    get requests() {\n        return [...this._requests.values()].map(r => r.payload);\n    }\n    add(request) {\n        const payload = jsonRpc.toPayload(request);\n        const promise = new Web3DeferredPromise();\n        this._requests.set(payload.id, { payload, promise });\n        return promise;\n    }\n    // eslint-disable-next-line class-methods-use-this\n    execute(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            if (this.requests.length === 0) {\n                return Promise.resolve([]);\n            }\n            const request = new Web3DeferredPromise({\n                timeout: (_a = options === null || options === void 0 ? void 0 : options.timeout) !== null && _a !== void 0 ? _a : DEFAULT_BATCH_REQUEST_TIMEOUT,\n                eagerStart: true,\n                timeoutMessage: 'Batch request timeout',\n            });\n            this._processBatchRequest(request).catch(err => request.reject(err));\n            request.catch((err) => {\n                if (err instanceof OperationTimeoutError) {\n                    this._abortAllRequests('Batch request timeout');\n                }\n                request.reject(err);\n            });\n            return request;\n        });\n    }\n    _processBatchRequest(promise) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            const response = yield this._requestManager.sendBatch([...this._requests.values()].map(r => r.payload));\n            if (response.length !== this._requests.size) {\n                this._abortAllRequests('Invalid batch response');\n                throw new ResponseError(response, `Batch request size mismatch the results size. Requests: ${this._requests.size}, Responses: ${response.length}`);\n            }\n            const requestIds = this.requests\n                .map(r => r.id)\n                .map(Number)\n                .sort((a, b) => a - b);\n            const responseIds = response\n                .map(r => r.id)\n                .map(Number)\n                .sort((a, b) => a - b);\n            if (JSON.stringify(requestIds) !== JSON.stringify(responseIds)) {\n                this._abortAllRequests('Invalid batch response');\n                throw new ResponseError(response, `Batch request mismatch the results. Requests: [${requestIds.join()}], Responses: [${responseIds.join()}]`);\n            }\n            for (const res of response) {\n                if (jsonRpc.isResponseWithResult(res)) {\n                    (_a = this._requests.get(res.id)) === null || _a === void 0 ? void 0 : _a.promise.resolve(res.result);\n                }\n                else if (jsonRpc.isResponseWithError(res)) {\n                    (_b = this._requests.get(res.id)) === null || _b === void 0 ? void 0 : _b.promise.reject(res.error);\n                }\n            }\n            promise.resolve(response);\n        });\n    }\n    _abortAllRequests(msg) {\n        for (const { promise } of this._requests.values()) {\n            promise.reject(new OperationAbortError(msg));\n        }\n    }\n}\n//# sourceMappingURL=web3_batch_request.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line max-classes-per-file\nimport { ExistingPluginNamespaceError } from 'web3-errors';\nimport { isNullish } from 'web3-utils';\nimport { TransactionFactory } from 'web3-eth-accounts';\nimport { isSupportedProvider } from './utils.js';\nimport { Web3BatchRequest } from './web3_batch_request.js';\n// eslint-disable-next-line import/no-cycle\nimport { Web3Config, Web3ConfigEvent } from './web3_config.js';\nimport { Web3RequestManager } from './web3_request_manager.js';\nimport { Web3SubscriptionManager } from './web3_subscription_manager.js';\nexport class Web3Context extends Web3Config {\n    constructor(providerOrContext) {\n        var _a;\n        super();\n        this.providers = Web3RequestManager.providers;\n        // If \"providerOrContext\" is provided as \"string\" or an objects matching \"SupportedProviders\" interface\n        if (isNullish(providerOrContext) ||\n            (typeof providerOrContext === 'string' && providerOrContext.trim() !== '') ||\n            isSupportedProvider(providerOrContext)) {\n            this._requestManager = new Web3RequestManager(providerOrContext);\n            this._subscriptionManager = new Web3SubscriptionManager(this._requestManager, {});\n            return;\n        }\n        const { config, provider, requestManager, subscriptionManager, registeredSubscriptions, accountProvider, wallet, requestManagerMiddleware, } = providerOrContext;\n        this.setConfig(config !== null && config !== void 0 ? config : {});\n        this._requestManager =\n            requestManager !== null && requestManager !== void 0 ? requestManager : new Web3RequestManager(provider, (_a = config === null || config === void 0 ? void 0 : config.enableExperimentalFeatures) === null || _a === void 0 ? void 0 : _a.useSubscriptionWhenCheckingBlockTimeout, requestManagerMiddleware);\n        if (subscriptionManager) {\n            this._subscriptionManager = subscriptionManager;\n        }\n        else {\n            this._subscriptionManager = new Web3SubscriptionManager(this.requestManager, registeredSubscriptions !== null && registeredSubscriptions !== void 0 ? registeredSubscriptions : {});\n        }\n        if (accountProvider) {\n            this._accountProvider = accountProvider;\n        }\n        if (wallet) {\n            this._wallet = wallet;\n        }\n    }\n    get requestManager() {\n        return this._requestManager;\n    }\n    /**\n     * Will return the current subscriptionManager ({@link Web3SubscriptionManager})\n     */\n    get subscriptionManager() {\n        return this._subscriptionManager;\n    }\n    get wallet() {\n        return this._wallet;\n    }\n    get accountProvider() {\n        return this._accountProvider;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static fromContextObject(...args) {\n        return new this(...args.reverse());\n    }\n    getContextObject() {\n        var _a;\n        return {\n            config: this.config,\n            provider: this.provider,\n            requestManager: this.requestManager,\n            subscriptionManager: this.subscriptionManager,\n            registeredSubscriptions: (_a = this.subscriptionManager) === null || _a === void 0 ? void 0 : _a.registeredSubscriptions,\n            providers: this.providers,\n            wallet: this.wallet,\n            accountProvider: this.accountProvider,\n        };\n    }\n    /**\n     * Use to create new object of any type extended by `Web3Context`\n     * and link it to current context. This can be used to initiate a global context object\n     * and then use it to create new objects of any type extended by `Web3Context`.\n     */\n    use(ContextRef, ...args) {\n        const newContextChild = new ContextRef(...[...args, this.getContextObject()]);\n        this.on(Web3ConfigEvent.CONFIG_CHANGE, event => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            newContextChild.setConfig({ [event.name]: event.newValue });\n        });\n        // @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n        this[ContextRef.name] = newContextChild;\n        return newContextChild;\n    }\n    /**\n     * Link current context to another context.\n     */\n    link(parentContext) {\n        this.setConfig(parentContext.config);\n        this._requestManager = parentContext.requestManager;\n        this.provider = parentContext.provider;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this._subscriptionManager = parentContext.subscriptionManager;\n        this._wallet = parentContext.wallet;\n        this._accountProvider = parentContext._accountProvider;\n        parentContext.on(Web3ConfigEvent.CONFIG_CHANGE, event => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            this.setConfig({ [event.name]: event.newValue });\n        });\n    }\n    // eslint-disable-next-line no-use-before-define\n    registerPlugin(plugin) {\n        // @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n        if (this[plugin.pluginNamespace] !== undefined)\n            throw new ExistingPluginNamespaceError(plugin.pluginNamespace);\n        const _pluginObject = {\n            [plugin.pluginNamespace]: plugin,\n        };\n        _pluginObject[plugin.pluginNamespace].link(this);\n        Object.assign(this, _pluginObject);\n    }\n    /**\n     * Will return the current provider.\n     *\n     * @returns Returns the current provider\n     * @example\n     * ```ts\n     * const web3 = new Web3Context(\"http://localhost:8545\");\n     * console.log(web3.provider);\n     * > HttpProvider {\n     * \tclientUrl: 'http://localhost:8545',\n     * \thttpProviderOptions: undefined\n     *  }\n     * ```\n     */\n    get provider() {\n        return this.currentProvider;\n    }\n    /**\n     * Will set the current provider.\n     *\n     * @param provider - The provider to set\n     *\n     * Accepted providers are of type {@link SupportedProviders}\n     * @example\n     * ```ts\n     *  const web3Context = new web3ContextContext(\"http://localhost:8545\");\n     * web3Context.provider = \"ws://localhost:8545\";\n     * console.log(web3Context.provider);\n     * > WebSocketProvider {\n     * _eventEmitter: EventEmitter {\n     * _events: [Object: null prototype] {},\n     * _eventsCount: 0,\n     * ...\n     * }\n     * ```\n     */\n    set provider(provider) {\n        this.requestManager.setProvider(provider);\n    }\n    /**\n     * Will return the current provider. (The same as `provider`)\n     *\n     * @returns Returns the current provider\n     * @example\n     * ```ts\n     * const web3Context = new Web3Context(\"http://localhost:8545\");\n     * console.log(web3Context.provider);\n     * > HttpProvider {\n     * \tclientUrl: 'http://localhost:8545',\n     * \thttpProviderOptions: undefined\n     *  }\n     * ```\n     */\n    get currentProvider() {\n        return this.requestManager.provider;\n    }\n    /**\n     * Will set the current provider. (The same as `provider`)\n     *\n     * @param provider - {@link SupportedProviders} The provider to set\n     *\n     * @example\n     * ```ts\n     *  const web3Context = new Web3Context(\"http://localhost:8545\");\n     * web3Context.currentProvider = \"ws://localhost:8545\";\n     * console.log(web3Context.provider);\n     * > WebSocketProvider {\n     * _eventEmitter: EventEmitter {\n     * _events: [Object: null prototype] {},\n     * _eventsCount: 0,\n     * ...\n     * }\n     * ```\n     */\n    set currentProvider(provider) {\n        this.requestManager.setProvider(provider);\n    }\n    /**\n     * Will return the givenProvider if available.\n     *\n     * When using web3.js in an Ethereum compatible browser, it will set with the current native provider by that browser. Will return the given provider by the (browser) environment, otherwise `undefined`.\n     */\n    // eslint-disable-next-line class-methods-use-this\n    get givenProvider() {\n        return Web3Context.givenProvider;\n    }\n    /**\n     * Will set the provider.\n     *\n     * @param provider - {@link SupportedProviders} The provider to set\n     * @returns Returns true if the provider was set\n     */\n    setProvider(provider) {\n        this.provider = provider;\n        return true;\n    }\n    setRequestManagerMiddleware(requestManagerMiddleware) {\n        this.requestManager.setMiddleware(requestManagerMiddleware);\n    }\n    /**\n     * Will return the {@link Web3BatchRequest} constructor.\n     */\n    get BatchRequest() {\n        return Web3BatchRequest.bind(undefined, this._requestManager);\n    }\n    /**\n     * This method allows extending the web3 modules.\n     * Note: This method is only for backward compatibility, and It is recommended to use Web3 v4 Plugin feature for extending web3.js functionality if you are developing something new.\n     */\n    extend(extendObj) {\n        var _a;\n        // @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n        if (extendObj.property && !this[extendObj.property])\n            // @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n            this[extendObj.property] = {};\n        (_a = extendObj.methods) === null || _a === void 0 ? void 0 : _a.forEach(element => {\n            const method = (...givenParams) => __awaiter(this, void 0, void 0, function* () {\n                return this.requestManager.send({\n                    method: element.call,\n                    params: givenParams,\n                });\n            });\n            if (extendObj.property)\n                // @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                this[extendObj.property][element.name] = method;\n            // @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n            else\n                this[element.name] = method;\n        });\n        return this;\n    }\n}\nWeb3Context.providers = Web3RequestManager.providers;\n/**\n * Extend this class when creating a plugin that either doesn't require {@link EthExecutionAPI},\n * or interacts with a RPC node that doesn't fully implement {@link EthExecutionAPI}.\n *\n * To add type support for RPC methods to the {@link Web3RequestManager},\n * define a {@link Web3APISpec} and pass it as a generic to Web3PluginBase like so:\n *\n * @example\n * ```ts\n * type CustomRpcApi = {\n *\tcustom_rpc_method: () => string;\n *\tcustom_rpc_method_with_parameters: (parameter1: string, parameter2: number) => string;\n * };\n *\n * class CustomPlugin extends Web3PluginBase<CustomRpcApi> {...}\n * ```\n */\nexport class Web3PluginBase extends Web3Context {\n    // eslint-disable-next-line class-methods-use-this\n    registerNewTransactionType(type, txClass) {\n        TransactionFactory.registerTransactionType(type, txClass);\n    }\n}\n/**\n * Extend this class when creating a plugin that makes use of {@link EthExecutionAPI},\n * or depends on other Web3 packages (such as `web3-eth-contract`) that depend on {@link EthExecutionAPI}.\n *\n * To add type support for RPC methods to the {@link Web3RequestManager} (in addition to {@link EthExecutionAPI}),\n * define a {@link Web3APISpec} and pass it as a generic to Web3PluginBase like so:\n *\n * @example\n * ```ts\n * type CustomRpcApi = {\n *\tcustom_rpc_method: () => string;\n *\tcustom_rpc_method_with_parameters: (parameter1: string, parameter2: number) => string;\n * };\n *\n * class CustomPlugin extends Web3PluginBase<CustomRpcApi> {...}\n * ```\n */\nexport class Web3EthPluginBase extends Web3PluginBase {\n}\n//# sourceMappingURL=web3_context.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { toChecksumAddress, leftPad, hexToNumber } from 'web3-utils';\nimport { isAddress } from 'web3-validator';\nimport { InvalidAddressError } from 'web3-errors';\n/**\n * Converts Ethereum addresses to IBAN or BBAN addresses and vice versa.\n */\nexport class Iban {\n    /**\n     * Construct a direct or indirect IBAN that has conversion methods and validity checks.\n     * If the provided string was not of either the length of a direct IBAN (34 or 35),\n     * nor the length of an indirect IBAN (20), an Error will be thrown ('Invalid IBAN was provided').\n     *\n     * @param iban - a Direct or an Indirect IBAN\n     * @returns - Iban instance\n     *\n     * @example\n     * ```ts\n     * const iban = new web3.eth.Iban(\"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\");\n     * > Iban { _iban: 'XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS' }\n     * ```\n     */\n    constructor(iban) {\n        /**\n         * This method should be used to create the equivalent ethereum address for the early provided Direct IBAN address.\n         * If the provided string was not a direct IBAN (has the length of 34 or 35), an Error will be thrown:\n         * ('Iban is indirect and cannot be converted. Must be length of 34 or 35').\n         * Note: this is also available as a static method.\n         *\n         * @return the equivalent ethereum address\n         *\n         * @example\n         * ```ts\n         * const iban = new web3.eth.Iban(\"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\");\n         * iban.toAddress();\n         * > \"0x00c5496aEe77C1bA1f0854206A26DdA82a81D6D8\"\n         * ```\n         */\n        this.toAddress = () => {\n            if (this.isDirect()) {\n                // check if Iban can be converted to an address\n                const base36 = this._iban.slice(4);\n                const parsedBigInt = Iban._parseInt(base36, 36); // convert the base36 string to a bigint\n                const paddedBigInt = leftPad(parsedBigInt, 40);\n                return toChecksumAddress(paddedBigInt);\n            }\n            throw new Error('Iban is indirect and cannot be converted. Must be length of 34 or 35');\n        };\n        if (Iban.isIndirect(iban) || Iban.isDirect(iban)) {\n            this._iban = iban;\n        }\n        else {\n            throw new Error('Invalid IBAN was provided');\n        }\n    }\n    /**\n     * A static method that checks if an IBAN is Direct.\n     * It actually check the length of the provided variable and, only if it is 34 or 35, it returns true.\n     * Note: this is also available as a method at an Iban instance.\n     * @param iban - an IBAN to be checked\n     * @returns - `true` if the provided `iban` is a Direct IBAN, and `false` otherwise.\n     *\n     * @example\n     * ```ts\n     * web3.eth.Iban.isDirect(\"XE81ETHXREGGAVOFYORK\");\n     * > false\n     * ```\n     */\n    static isDirect(iban) {\n        return iban.length === 34 || iban.length === 35;\n    }\n    /**\n     * An instance method that checks if iban number is Direct.\n     * It actually check the length of the provided variable and, only if it is 34 or 35, it returns true.\n     * Note: this is also available as a static method.\n     * @param iban - an IBAN to be checked\n     * @returns - `true` if the provided `iban` is a Direct IBAN, and `false` otherwise.\n     *\n     * @example\n     * ```ts\n     * const iban = new web3.eth.Iban(\"XE81ETHXREGGAVOFYORK\");\n     * iban.isDirect();\n     * > false\n     * ```\n     */\n    isDirect() {\n        return Iban.isDirect(this._iban);\n    }\n    /**\n     * A static method that checks if an IBAN is Indirect.\n     * It actually check the length of the provided variable and, only if it is 20, it returns true.\n     * Note: this is also available as a method at an Iban instance.\n     * @param iban - an IBAN to be checked\n     * @returns - `true` if the provided `iban` is an Indirect IBAN, and `false` otherwise.\n     *\n     * @example\n     * ```ts\n     * web3.eth.Iban.isIndirect(\"XE81ETHXREGGAVOFYORK\");\n     * > true\n     * ```\n     */\n    static isIndirect(iban) {\n        return iban.length === 20;\n    }\n    /**\n     * check if iban number if indirect\n     * It actually check the length of the provided variable and, only if it is 20, it returns true.\n     * Note: this is also available as a static method.\n     * @param iban - an IBAN to be checked\n     * @returns - `true` if the provided `iban` is an Indirect IBAN, and `false` otherwise.\n     *\n     * @example\n     * ```ts\n     * const iban = new web3.eth.Iban(\"XE81ETHXREGGAVOFYORK\");\n     * iban.isIndirect();\n     * > true\n     * ```\n     */\n    isIndirect() {\n        return Iban.isIndirect(this._iban);\n    }\n    /**\n     * This method could be used to check if a given string is valid IBAN object.\n     * Note: this is also available as a method at an Iban instance.\n     *\n     * @param iban - a string to be checked if it is in IBAN\n     * @returns - true if it is valid IBAN\n     *\n     * @example\n     * ```ts\n     * web3.eth.Iban.isValid(\"XE81ETHXREGGAVOFYORK\");\n     * > true\n     *\n     * web3.eth.Iban.isValid(\"XE82ETHXREGGAVOFYORK\");\n     * > false // because the checksum is incorrect\n     * ```\n     */\n    static isValid(iban) {\n        return (/^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(iban) &&\n            Iban._mod9710(Iban._iso13616Prepare(iban)) === 1);\n    }\n    /**\n     * Should be called to check if the early provided IBAN is correct.\n     * Note: this is also available as a static method.\n     *\n     * @example\n     * ```ts\n     * const iban = new web3.eth.Iban(\"XE81ETHXREGGAVOFYORK\");\n     * iban.isValid();\n     * > true\n     *\n     * const iban = new web3.eth.Iban(\"XE82ETHXREGGAVOFYORK\");\n     * iban.isValid();\n     * > false // because the checksum is incorrect\n     * ```\n     */\n    isValid() {\n        return Iban.isValid(this._iban);\n    }\n    /**\n     * Convert the passed BBAN to an IBAN for this country specification.\n     * Please note that <i>\"generation of the IBAN shall be the exclusive responsibility of the bank/branch servicing the account\"</i>.\n     * This method implements the preferred algorithm described in http://en.wikipedia.org/wiki/International_Bank_Account_Number#Generating_IBAN_check_digits\n     *\n     * @param bban - the BBAN to convert to IBAN\n     * @returns an Iban class instance that holds the equivalent IBAN\n     *\n     * @example\n     * ```ts\n     * web3.eth.Iban.fromBban('ETHXREGGAVOFYORK');\n     * > Iban {_iban: \"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\"}\n     * ```\n     */\n    static fromBban(bban) {\n        const countryCode = 'XE';\n        const remainder = this._mod9710(this._iso13616Prepare(`${countryCode}00${bban}`));\n        const checkDigit = `0${(98 - remainder).toString()}`.slice(-2);\n        return new Iban(`${countryCode}${checkDigit}${bban}`);\n    }\n    /**\n     * Should be used to create IBAN object for given institution and identifier\n     *\n     * @param options - an object holds the `institution` and the `identifier` which will be composed to create an `Iban` object from.\n     * @returns an Iban class instance that holds the equivalent IBAN\n     *\n     * @example\n     * ```ts\n     * web3.eth.Iban.createIndirect({\n     *     institution: \"XREG\",\n     *     identifier: \"GAVOFYORK\"\n     * });\n     * > Iban {_iban: \"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\"}\n     * ```\n     */\n    static createIndirect(options) {\n        return Iban.fromBban(`ETH${options.institution}${options.identifier}`);\n    }\n    /**\n     * This method should be used to create iban object from an Ethereum address.\n     *\n     * @param address - an Ethereum address\n     * @returns an Iban class instance that holds the equivalent IBAN\n     *\n     * @example\n     * ```ts\n     * web3.eth.Iban.fromAddress(\"0x00c5496aEe77C1bA1f0854206A26DdA82a81D6D8\");\n     * > Iban {_iban: \"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\"}\n     * ```\n     */\n    static fromAddress(address) {\n        if (!isAddress(address)) {\n            throw new InvalidAddressError(address);\n        }\n        const num = BigInt(hexToNumber(address));\n        const base36 = num.toString(36);\n        const padded = leftPad(base36, 15);\n        return Iban.fromBban(padded.toUpperCase());\n    }\n    /**\n     * This method should be used to create IBAN address from an Ethereum address\n     *\n     * @param address - an Ethereum address\n     * @return the equivalent IBAN address\n     *\n     * @example\n     * ```ts\n     * web3.eth.Iban.toIban(\"0x00c5496aEe77C1bA1f0854206A26DdA82a81D6D8\");\n     * > \"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\"\n     * ```\n     */\n    static toIban(address) {\n        return Iban.fromAddress(address).toString();\n    }\n    /**\n     * Should be called to get client identifier within institution\n     *\n     * @return the client of the IBAN instance.\n     *\n     * @example\n     * ```ts\n     * const iban = new web3.eth.Iban(\"XE81ETHXREGGAVOFYORK\");\n     * iban.client();\n     * > 'GAVOFYORK'\n     * ```\n     */\n    client() {\n        return this.isIndirect() ? this._iban.slice(11) : '';\n    }\n    /**\n     * Returns the IBAN checksum of the early provided IBAN\n     *\n     * @example\n     * ```ts\n     * const iban = new web3.eth.Iban(\"XE81ETHXREGGAVOFYORK\");\n     * iban.checksum();\n     * > \"81\"\n     * ```\n     *\n     */\n    checksum() {\n        return this._iban.slice(2, 4);\n    }\n    /**\n     * Returns institution identifier from the early provided  IBAN\n     *\n     * @example\n     * ```ts\n     * const iban = new web3.eth.Iban(\"XE81ETHXREGGAVOFYORK\");\n     * iban.institution();\n     * > 'XREG'\n     * ```\n     */\n    institution() {\n        return this.isIndirect() ? this._iban.slice(7, 11) : '';\n    }\n    /**\n     * Simply returns the early provided IBAN\n     *\n     * @example\n     * ```ts\n     * const iban = new web3.eth.Iban('XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS');\n     * iban.toString();\n     * > 'XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS'\n     * ```\n     */\n    toString() {\n        return this._iban;\n    }\n}\n/**\n * Prepare an IBAN for mod 97 computation by moving the first 4 chars to the end and transforming the letters to\n * numbers (A = 10, B = 11, ..., Z = 35), as specified in ISO13616.\n */\nIban._iso13616Prepare = (iban) => {\n    const A = 'A'.charCodeAt(0);\n    const Z = 'Z'.charCodeAt(0);\n    const upperIban = iban.toUpperCase();\n    const modifiedIban = `${upperIban.slice(4)}${upperIban.slice(0, 4)}`;\n    return modifiedIban\n        .split('')\n        .map(n => {\n        const code = n.charCodeAt(0);\n        if (code >= A && code <= Z) {\n            // A = 10, B = 11, ... Z = 35\n            return code - A + 10;\n        }\n        return n;\n    })\n        .join('');\n};\n/**\n * return the bigint of the given string with the specified base\n */\nIban._parseInt = (str, base) => [...str].reduce((acc, curr) => BigInt(parseInt(curr, base)) + BigInt(base) * acc, BigInt(0));\n/**\n * Calculates the MOD 97 10 of the passed IBAN as specified in ISO7064.\n */\nIban._mod9710 = (iban) => {\n    let remainder = iban;\n    let block;\n    while (remainder.length > 2) {\n        block = remainder.slice(0, 9);\n        remainder = `${(parseInt(block, 10) % 97).toString()}${remainder.slice(block.length)}`;\n    }\n    return parseInt(remainder, 10) % 97;\n};\n/**\n * This method should be used to create an ethereum address from a Direct IBAN address.\n * If the provided string was not a direct IBAN (has the length of 34 or 35), an Error will be thrown:\n * ('Iban is indirect and cannot be converted. Must be length of 34 or 35').\n * Note: this is also available as a method at an Iban instance.\n *\n * @param iban - a Direct IBAN address\n * @return the equivalent ethereum address\n *\n * @example\n * ```ts\n * web3.eth.Iban.toAddress(\"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\");\n * > \"0x00c5496aEe77C1bA1f0854206A26DdA82a81D6D8\"\n * ```\n */\nIban.toAddress = (iban) => {\n    const ibanObject = new Iban(iban);\n    return ibanObject.toAddress();\n};\n//# sourceMappingURL=iban.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\nimport { Web3EventEmitter, } from './web3_event_emitter.js';\nexport class Web3PromiEvent extends Web3EventEmitter {\n    constructor(executor) {\n        super();\n        // public tag to treat object as promise by different libs\n        // eslint-disable-next-line @typescript-eslint/prefer-as-const\n        this[_a] = 'Promise';\n        this._promise = new Promise(executor);\n    }\n    then(onfulfilled, onrejected) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._promise.then(onfulfilled, onrejected);\n        });\n    }\n    catch(onrejected) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._promise.catch(onrejected);\n        });\n    }\n    finally(onfinally) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._promise.finally(onfinally);\n        });\n    }\n    on(eventName, fn) {\n        super.on(eventName, fn);\n        return this;\n    }\n    once(eventName, fn) {\n        super.once(eventName, fn);\n        return this;\n    }\n}\n_a = Symbol.toStringTag;\n//# sourceMappingURL=web3_promi_event.js.map","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { validator } from 'web3-validator';\nexport function getProtocolVersion(requestManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'eth_protocolVersion',\n            params: [],\n        });\n    });\n}\nexport function getSyncing(requestManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'eth_syncing',\n            params: [],\n        });\n    });\n}\nexport function getCoinbase(requestManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'eth_coinbase',\n            params: [],\n        });\n    });\n}\nexport function getMining(requestManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'eth_mining',\n            params: [],\n        });\n    });\n}\nexport function getHashRate(requestManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'eth_hashrate',\n            params: [],\n        });\n    });\n}\nexport function getGasPrice(requestManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'eth_gasPrice',\n            params: [],\n        });\n    });\n}\nexport function getMaxPriorityFeePerGas(requestManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'eth_maxPriorityFeePerGas',\n            params: [],\n        });\n    });\n}\nexport function getAccounts(requestManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'eth_accounts',\n            params: [],\n        });\n    });\n}\nexport function getBlockNumber(requestManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'eth_blockNumber',\n            params: [],\n        });\n    });\n}\nexport function getBalance(requestManager, address, blockNumber) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['address', 'blockNumberOrTag'], [address, blockNumber]);\n        return requestManager.send({\n            method: 'eth_getBalance',\n            params: [address, blockNumber],\n        });\n    });\n}\nexport function getStorageAt(requestManager, address, storageSlot, blockNumber) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['address', 'hex', 'blockNumberOrTag'], [address, storageSlot, blockNumber]);\n        return requestManager.send({\n            method: 'eth_getStorageAt',\n            params: [address, storageSlot, blockNumber],\n        });\n    });\n}\nexport function getTransactionCount(requestManager, address, blockNumber) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['address', 'blockNumberOrTag'], [address, blockNumber]);\n        return requestManager.send({\n            method: 'eth_getTransactionCount',\n            params: [address, blockNumber],\n        });\n    });\n}\nexport function getBlockTransactionCountByHash(requestManager, blockHash) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['bytes32'], [blockHash]);\n        return requestManager.send({\n            method: 'eth_getBlockTransactionCountByHash',\n            params: [blockHash],\n        });\n    });\n}\nexport function getBlockTransactionCountByNumber(requestManager, blockNumber) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['blockNumberOrTag'], [blockNumber]);\n        return requestManager.send({\n            method: 'eth_getBlockTransactionCountByNumber',\n            params: [blockNumber],\n        });\n    });\n}\nexport function getUncleCountByBlockHash(requestManager, blockHash) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['bytes32'], [blockHash]);\n        return requestManager.send({\n            method: 'eth_getUncleCountByBlockHash',\n            params: [blockHash],\n        });\n    });\n}\nexport function getUncleCountByBlockNumber(requestManager, blockNumber) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['blockNumberOrTag'], [blockNumber]);\n        return requestManager.send({\n            method: 'eth_getUncleCountByBlockNumber',\n            params: [blockNumber],\n        });\n    });\n}\nexport function getCode(requestManager, address, blockNumber) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['address', 'blockNumberOrTag'], [address, blockNumber]);\n        return requestManager.send({\n            method: 'eth_getCode',\n            params: [address, blockNumber],\n        });\n    });\n}\nexport function sign(requestManager, address, message) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['address', 'hex'], [address, message]);\n        return requestManager.send({\n            method: 'eth_sign',\n            params: [address, message],\n        });\n    });\n}\n// TODO - Validation should be:\n// isTransactionWithSender(transaction)\n// ? validateTransactionWithSender(transaction)\n// : validateTransactionWithSender(transaction, true) with true being a isPartial flag\nexport function signTransaction(requestManager, transaction) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'eth_signTransaction',\n            params: [transaction],\n        });\n    });\n}\n// TODO - Validation should be:\n// isTransactionWithSender(transaction)\n// ? validateTransactionWithSender(transaction)\n// : validateTransactionWithSender(transaction, true) with true being a isPartial flag\nexport function sendTransaction(requestManager, transaction) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'eth_sendTransaction',\n            params: [transaction],\n        });\n    });\n}\nexport function sendRawTransaction(requestManager, transaction) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['hex'], [transaction]);\n        return requestManager.send({\n            method: 'eth_sendRawTransaction',\n            params: [transaction],\n        });\n    });\n}\n// TODO - validate transaction\nexport function call(requestManager, transaction, blockNumber) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // validateTransactionCall(transaction);\n        validator.validate(['blockNumberOrTag'], [blockNumber]);\n        return requestManager.send({\n            method: 'eth_call',\n            params: [transaction, blockNumber],\n        });\n    });\n}\n// TODO Not sure how to best validate Partial<TransactionWithSender>\nexport function estimateGas(requestManager, transaction, blockNumber) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['blockNumberOrTag'], [blockNumber]);\n        return requestManager.send({\n            method: 'eth_estimateGas',\n            params: [transaction, blockNumber],\n        });\n    });\n}\nexport function getBlockByHash(requestManager, blockHash, hydrated) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['bytes32', 'bool'], [blockHash, hydrated]);\n        return requestManager.send({\n            method: 'eth_getBlockByHash',\n            params: [blockHash, hydrated],\n        });\n    });\n}\nexport function getBlockByNumber(requestManager, blockNumber, hydrated) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['blockNumberOrTag', 'bool'], [blockNumber, hydrated]);\n        return requestManager.send({\n            method: 'eth_getBlockByNumber',\n            params: [blockNumber, hydrated],\n        });\n    });\n}\nexport function getTransactionByHash(requestManager, transactionHash) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['bytes32'], [transactionHash]);\n        return requestManager.send({\n            method: 'eth_getTransactionByHash',\n            params: [transactionHash],\n        });\n    });\n}\nexport function getTransactionByBlockHashAndIndex(requestManager, blockHash, transactionIndex) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['bytes32', 'hex'], [blockHash, transactionIndex]);\n        return requestManager.send({\n            method: 'eth_getTransactionByBlockHashAndIndex',\n            params: [blockHash, transactionIndex],\n        });\n    });\n}\nexport function getTransactionByBlockNumberAndIndex(requestManager, blockNumber, transactionIndex) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['blockNumberOrTag', 'hex'], [blockNumber, transactionIndex]);\n        return requestManager.send({\n            method: 'eth_getTransactionByBlockNumberAndIndex',\n            params: [blockNumber, transactionIndex],\n        });\n    });\n}\nexport function getTransactionReceipt(requestManager, transactionHash) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['bytes32'], [transactionHash]);\n        return requestManager.send({\n            method: 'eth_getTransactionReceipt',\n            params: [transactionHash],\n        });\n    });\n}\nexport function getUncleByBlockHashAndIndex(requestManager, blockHash, uncleIndex) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['bytes32', 'hex'], [blockHash, uncleIndex]);\n        return requestManager.send({\n            method: 'eth_getUncleByBlockHashAndIndex',\n            params: [blockHash, uncleIndex],\n        });\n    });\n}\nexport function getUncleByBlockNumberAndIndex(requestManager, blockNumber, uncleIndex) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['blockNumberOrTag', 'hex'], [blockNumber, uncleIndex]);\n        return requestManager.send({\n            method: 'eth_getUncleByBlockNumberAndIndex',\n            params: [blockNumber, uncleIndex],\n        });\n    });\n}\nexport function getCompilers(requestManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'eth_getCompilers',\n            params: [],\n        });\n    });\n}\nexport function compileSolidity(requestManager, code) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['string'], [code]);\n        return requestManager.send({\n            method: 'eth_compileSolidity',\n            params: [code],\n        });\n    });\n}\nexport function compileLLL(requestManager, code) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['string'], [code]);\n        return requestManager.send({\n            method: 'eth_compileLLL',\n            params: [code],\n        });\n    });\n}\nexport function compileSerpent(requestManager, code) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['string'], [code]);\n        return requestManager.send({\n            method: 'eth_compileSerpent',\n            params: [code],\n        });\n    });\n}\nexport function newFilter(requestManager, filter) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['filter'], [filter]);\n        return requestManager.send({\n            method: 'eth_newFilter',\n            params: [filter],\n        });\n    });\n}\nexport function newBlockFilter(requestManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'eth_newBlockFilter',\n            params: [],\n        });\n    });\n}\nexport function newPendingTransactionFilter(requestManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'eth_newPendingTransactionFilter',\n            params: [],\n        });\n    });\n}\nexport function uninstallFilter(requestManager, filterIdentifier) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['hex'], [filterIdentifier]);\n        return requestManager.send({\n            method: 'eth_uninstallFilter',\n            params: [filterIdentifier],\n        });\n    });\n}\nexport function getFilterChanges(requestManager, filterIdentifier) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['hex'], [filterIdentifier]);\n        return requestManager.send({\n            method: 'eth_getFilterChanges',\n            params: [filterIdentifier],\n        });\n    });\n}\nexport function getFilterLogs(requestManager, filterIdentifier) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['hex'], [filterIdentifier]);\n        return requestManager.send({\n            method: 'eth_getFilterLogs',\n            params: [filterIdentifier],\n        });\n    });\n}\nexport function getLogs(requestManager, filter) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['filter'], [filter]);\n        return requestManager.send({\n            method: 'eth_getLogs',\n            params: [filter],\n        });\n    });\n}\nexport function getWork(requestManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'eth_getWork',\n            params: [],\n        });\n    });\n}\nexport function submitWork(requestManager, nonce, hash, digest) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['bytes8', 'bytes32', 'bytes32'], [nonce, hash, digest]);\n        return requestManager.send({\n            method: 'eth_submitWork',\n            params: [nonce, hash, digest],\n        });\n    });\n}\nexport function submitHashrate(requestManager, hashRate, id) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['bytes32', 'bytes32'], [hashRate, id]);\n        return requestManager.send({\n            method: 'eth_submitHashrate',\n            params: [hashRate, id],\n        });\n    });\n}\nexport function getFeeHistory(requestManager, blockCount, newestBlock, rewardPercentiles) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['hex', 'blockNumberOrTag'], [blockCount, newestBlock]);\n        for (const rewardPercentile of rewardPercentiles) {\n            validator.validate(['number'], [rewardPercentile]);\n        }\n        return requestManager.send({\n            method: 'eth_feeHistory',\n            params: [blockCount, newestBlock, rewardPercentiles],\n        });\n    });\n}\nexport function getPendingTransactions(requestManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'eth_pendingTransactions',\n            params: [],\n        });\n    });\n}\nexport function requestAccounts(requestManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'eth_requestAccounts',\n            params: [],\n        });\n    });\n}\nexport function getChainId(requestManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'eth_chainId',\n            params: [],\n        });\n    });\n}\nexport function getProof(requestManager, address, storageKeys, blockNumber) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['address', 'bytes32[]', 'blockNumberOrTag'], [address, storageKeys, blockNumber]);\n        return requestManager.send({\n            method: 'eth_getProof',\n            params: [address, storageKeys, blockNumber],\n        });\n    });\n}\nexport function getNodeInfo(requestManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'web3_clientVersion',\n            params: [],\n        });\n    });\n}\nexport function createAccessList(requestManager, transaction, blockNumber) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validator.validate(['blockNumberOrTag'], [blockNumber]);\n        return requestManager.send({\n            method: 'eth_createAccessList',\n            params: [transaction, blockNumber],\n        });\n    });\n}\nexport function signTypedData(requestManager, address, typedData, useLegacy = false) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // TODO Add validation for typedData\n        validator.validate(['address'], [address]);\n        return requestManager.send({\n            method: `eth_signTypedData${useLegacy ? '' : '_v4'}`,\n            params: [address, typedData],\n        });\n    });\n}\n//# sourceMappingURL=eth_rpc_methods.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function getId(requestManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'net_version',\n            params: [],\n        });\n    });\n}\nexport function getPeerCount(requestManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'net_peerCount',\n            params: [],\n        });\n    });\n}\nexport function isListening(requestManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return requestManager.send({\n            method: 'net_listening',\n            params: [],\n        });\n    });\n}\n//# sourceMappingURL=net_rpc_methods.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const getAccounts = (requestManager) => __awaiter(void 0, void 0, void 0, function* () {\n    return requestManager.send({\n        method: 'personal_listAccounts',\n        params: [],\n    });\n});\nexport const newAccount = (requestManager, password) => __awaiter(void 0, void 0, void 0, function* () {\n    return requestManager.send({\n        method: 'personal_newAccount',\n        params: [password],\n    });\n});\nexport const unlockAccount = (requestManager, address, password, unlockDuration) => __awaiter(void 0, void 0, void 0, function* () {\n    return requestManager.send({\n        method: 'personal_unlockAccount',\n        params: [address, password, unlockDuration],\n    });\n});\nexport const lockAccount = (requestManager, address) => __awaiter(void 0, void 0, void 0, function* () {\n    return requestManager.send({\n        method: 'personal_lockAccount',\n        params: [address],\n    });\n});\nexport const importRawKey = (requestManager, keyData, passphrase) => __awaiter(void 0, void 0, void 0, function* () {\n    return requestManager.send({\n        method: 'personal_importRawKey',\n        params: [keyData, passphrase],\n    });\n});\nexport const sendTransaction = (requestManager, tx, passphrase) => __awaiter(void 0, void 0, void 0, function* () {\n    return requestManager.send({\n        method: 'personal_sendTransaction',\n        params: [tx, passphrase],\n    });\n});\nexport const signTransaction = (requestManager, tx, passphrase) => __awaiter(void 0, void 0, void 0, function* () {\n    return requestManager.send({\n        method: 'personal_signTransaction',\n        params: [tx, passphrase],\n    });\n});\nexport const sign = (requestManager, data, address, passphrase) => __awaiter(void 0, void 0, void 0, function* () {\n    return requestManager.send({\n        method: 'personal_sign',\n        params: [data, address, passphrase],\n    });\n});\nexport const ecRecover = (requestManager, signedData, signature) => __awaiter(void 0, void 0, void 0, function* () {\n    return requestManager.send({\n        method: 'personal_ecRecover',\n        params: [signedData, signature],\n    });\n});\n//# sourceMappingURL=personal_rpc_methods.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { format, toHex } from 'web3-utils';\nimport { HardforksOrdered, ETH_DATA_FORMAT } from 'web3-types';\nimport { Web3ValidatorError, isNullish, validator } from 'web3-validator';\nimport { InvalidPropertiesForTransactionTypeError } from 'web3-errors';\n// undefined is treated as null for JSON schema validator\nconst transactionType0x0Schema = {\n    type: 'object',\n    properties: {\n        accessList: {\n            type: 'null',\n        },\n        maxFeePerGas: {\n            type: 'null',\n        },\n        maxPriorityFeePerGas: {\n            type: 'null',\n        },\n    },\n};\nconst transactionType0x1Schema = {\n    type: 'object',\n    properties: {\n        maxFeePerGas: {\n            type: 'null',\n        },\n        maxPriorityFeePerGas: {\n            type: 'null',\n        },\n    },\n};\nconst transactionType0x2Schema = {\n    type: 'object',\n    properties: {\n        gasPrice: {\n            type: 'null',\n        },\n    },\n};\nconst validateTxTypeAndHandleErrors = (txSchema, tx, txType) => {\n    try {\n        validator.validateJSONSchema(txSchema, tx);\n    }\n    catch (error) {\n        if (error instanceof Web3ValidatorError)\n            // Erroneously reported error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            throw new InvalidPropertiesForTransactionTypeError(error.errors, txType);\n        throw error;\n    }\n};\nexport const defaultTransactionTypeParser = transaction => {\n    var _a, _b;\n    const tx = transaction;\n    if (!isNullish(tx.type)) {\n        let txSchema;\n        switch (tx.type) {\n            case '0x0':\n                txSchema = transactionType0x0Schema;\n                break;\n            case '0x1':\n                txSchema = transactionType0x1Schema;\n                break;\n            case '0x2':\n                txSchema = transactionType0x2Schema;\n                break;\n            default:\n                return format({ format: 'uint' }, tx.type, ETH_DATA_FORMAT);\n        }\n        validateTxTypeAndHandleErrors(txSchema, tx, tx.type);\n        return format({ format: 'uint' }, tx.type, ETH_DATA_FORMAT);\n    }\n    if (!isNullish(tx.maxFeePerGas) || !isNullish(tx.maxPriorityFeePerGas)) {\n        validateTxTypeAndHandleErrors(transactionType0x2Schema, tx, '0x2');\n        return '0x2';\n    }\n    if (!isNullish(tx.accessList)) {\n        validateTxTypeAndHandleErrors(transactionType0x1Schema, tx, '0x1');\n        return '0x1';\n    }\n    const givenHardfork = (_a = tx.hardfork) !== null && _a !== void 0 ? _a : (_b = tx.common) === null || _b === void 0 ? void 0 : _b.hardfork;\n    if (!isNullish(givenHardfork)) {\n        const hardforkIndex = Object.keys(HardforksOrdered).indexOf(givenHardfork);\n        // givenHardfork is London or later, so EIP-2718 is supported\n        if (hardforkIndex >= Object.keys(HardforksOrdered).indexOf('london'))\n            return !isNullish(tx.gasPrice) ? '0x0' : '0x2';\n        // givenHardfork is Berlin, tx.accessList is undefined, assume type is 0x0\n        if (hardforkIndex === Object.keys(HardforksOrdered).indexOf('berlin'))\n            return '0x0';\n    }\n    // gasprice is defined\n    if (!isNullish(tx.gasPrice)) {\n        validateTxTypeAndHandleErrors(transactionType0x0Schema, tx, '0x0');\n        return '0x0';\n    }\n    // no transaction type can be inferred from properties, use default transaction type\n    return undefined;\n};\nexport const detectTransactionType = (transaction, web3Context) => {\n    var _a;\n    return ((_a = web3Context === null || web3Context === void 0 ? void 0 : web3Context.transactionTypeParser) !== null && _a !== void 0 ? _a : defaultTransactionTypeParser)(transaction);\n};\nexport const detectRawTransactionType = (transaction) => transaction[0] > 0x7f ? '0x0' : toHex(transaction[0]);\n//# sourceMappingURL=detect_transaction_type.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport const accessListItemSchema = {\n    type: 'object',\n    properties: {\n        address: {\n            format: 'address',\n        },\n        storageKeys: {\n            type: 'array',\n            items: {\n                format: 'bytes32',\n            },\n        },\n    },\n};\nexport const accessListSchema = {\n    type: 'array',\n    items: Object.assign({}, accessListItemSchema),\n};\nexport const accessListResultSchema = {\n    type: 'object',\n    properties: {\n        accessList: Object.assign({}, accessListSchema),\n        gasUsed: {\n            type: 'string',\n        },\n    },\n};\nexport const chainSchema = {\n    type: 'string',\n    enum: ['goerli', 'kovan', 'mainnet', 'rinkeby', 'ropsten', 'sepolia'],\n};\nexport const hardforkSchema = {\n    type: 'string',\n    enum: [\n        'arrowGlacier',\n        'berlin',\n        'byzantium',\n        'chainstart',\n        'constantinople',\n        'dao',\n        'homestead',\n        'istanbul',\n        'london',\n        'merge',\n        'muirGlacier',\n        'petersburg',\n        'shanghai',\n        'spuriousDragon',\n        'tangerineWhistle',\n    ],\n};\nexport const customChainSchema = {\n    type: 'object',\n    properties: {\n        name: {\n            format: 'string',\n        },\n        networkId: {\n            format: 'uint',\n        },\n        chainId: {\n            format: 'uint',\n        },\n    },\n};\nexport const transactionSchema = {\n    type: 'object',\n    properties: {\n        from: {\n            format: 'address',\n        },\n        to: {\n            oneOf: [{ format: 'address' }, { type: 'null' }],\n        },\n        value: {\n            format: 'uint',\n        },\n        gas: {\n            format: 'uint',\n        },\n        gasPrice: {\n            format: 'uint',\n        },\n        effectiveGasPrice: {\n            format: 'uint',\n        },\n        type: {\n            format: 'uint',\n        },\n        maxFeePerGas: {\n            format: 'uint',\n        },\n        maxPriorityFeePerGas: {\n            format: 'uint',\n        },\n        accessList: Object.assign({}, accessListSchema),\n        data: {\n            format: 'bytes',\n        },\n        input: {\n            format: 'bytes',\n        },\n        nonce: {\n            format: 'uint',\n        },\n        chain: Object.assign({}, chainSchema),\n        hardfork: Object.assign({}, hardforkSchema),\n        chainId: {\n            format: 'uint',\n        },\n        networkId: {\n            format: 'uint',\n        },\n        common: {\n            type: 'object',\n            properties: {\n                customChain: Object.assign({}, customChainSchema),\n                baseChain: Object.assign({}, chainSchema),\n                hardfork: Object.assign({}, hardforkSchema),\n            },\n        },\n        gasLimit: {\n            format: 'uint',\n        },\n        v: {\n            format: 'uint',\n        },\n        r: {\n            format: 'bytes32',\n        },\n        s: {\n            format: 'bytes32',\n        },\n    },\n};\nexport const transactionInfoSchema = {\n    type: 'object',\n    properties: Object.assign(Object.assign({}, transactionSchema.properties), { blockHash: {\n            format: 'bytes32',\n        }, blockNumber: {\n            format: 'uint',\n        }, hash: {\n            format: 'bytes32',\n        }, transactionIndex: {\n            format: 'uint',\n        }, from: {\n            format: 'address',\n        }, to: {\n            oneOf: [{ format: 'address' }, { type: 'null' }],\n        }, value: {\n            format: 'uint',\n        }, gas: {\n            format: 'uint',\n        }, gasPrice: {\n            format: 'uint',\n        }, effectiveGasPrice: {\n            format: 'uint',\n        }, type: {\n            format: 'uint',\n        }, maxFeePerGas: {\n            format: 'uint',\n        }, maxPriorityFeePerGas: {\n            format: 'uint',\n        }, accessList: Object.assign({}, accessListSchema), data: {\n            format: 'bytes',\n        }, input: {\n            format: 'bytes',\n        }, nonce: {\n            format: 'uint',\n        }, gasLimit: {\n            format: 'uint',\n        }, v: {\n            format: 'uint',\n        }, r: {\n            format: 'bytes32',\n        }, s: {\n            format: 'bytes32',\n        } }),\n};\nexport const withdrawalsSchema = {\n    type: 'object',\n    properties: {\n        index: {\n            format: 'uint',\n        },\n        validatorIndex: {\n            format: 'uint',\n        },\n        address: {\n            format: 'address',\n        },\n        amount: {\n            format: 'uint',\n        },\n    },\n};\nexport const blockSchema = {\n    type: 'object',\n    properties: {\n        baseFeePerGas: {\n            format: 'uint',\n        },\n        blobGasUsed: {\n            format: 'uint',\n        },\n        difficulty: {\n            format: 'uint',\n        },\n        excessBlobGas: {\n            format: 'uint',\n        },\n        extraData: {\n            format: 'bytes',\n        },\n        gasLimit: {\n            format: 'uint',\n        },\n        gasUsed: {\n            format: 'uint',\n        },\n        hash: {\n            format: 'bytes32',\n        },\n        logsBloom: {\n            format: 'bytes256',\n        },\n        miner: {\n            format: 'bytes',\n        },\n        mixHash: {\n            format: 'bytes32',\n        },\n        nonce: {\n            format: 'uint',\n        },\n        number: {\n            format: 'uint',\n        },\n        parentBeaconBlockRoot: {\n            format: 'bytes32',\n        },\n        parentHash: {\n            format: 'bytes32',\n        },\n        receiptsRoot: {\n            format: 'bytes32',\n        },\n        sha3Uncles: {\n            format: 'bytes32',\n        },\n        size: {\n            format: 'uint',\n        },\n        stateRoot: {\n            format: 'bytes32',\n        },\n        timestamp: {\n            format: 'uint',\n        },\n        totalDifficulty: {\n            format: 'uint',\n        },\n        transactions: {\n            oneOf: [\n                {\n                    type: 'array',\n                    items: Object.assign({}, transactionInfoSchema),\n                },\n                {\n                    type: 'array',\n                    items: {\n                        format: 'bytes32',\n                    },\n                },\n            ],\n        },\n        transactionsRoot: {\n            format: 'bytes32',\n        },\n        uncles: {\n            type: 'array',\n            items: {\n                format: 'bytes32',\n            },\n        },\n        withdrawals: {\n            type: 'array',\n            items: Object.assign({}, withdrawalsSchema),\n        },\n        withdrawalsRoot: {\n            format: 'bytes32',\n        },\n    },\n};\nexport const blockHeaderSchema = {\n    type: 'object',\n    properties: {\n        author: {\n            format: 'bytes32',\n        },\n        excessDataGas: {\n            format: 'uint',\n        },\n        baseFeePerGas: {\n            format: 'uint',\n        },\n        blobGasUsed: {\n            format: 'uint',\n        },\n        difficulty: {\n            format: 'uint',\n        },\n        excessBlobGas: {\n            format: 'uint',\n        },\n        extraData: {\n            format: 'bytes',\n        },\n        gasLimit: {\n            format: 'uint',\n        },\n        gasUsed: {\n            format: 'uint',\n        },\n        hash: {\n            format: 'bytes32',\n        },\n        logsBloom: {\n            format: 'bytes256',\n        },\n        miner: {\n            format: 'bytes',\n        },\n        mixHash: {\n            format: 'bytes32',\n        },\n        nonce: {\n            format: 'uint',\n        },\n        number: {\n            format: 'uint',\n        },\n        parentBeaconBlockRoot: {\n            format: 'bytes32',\n        },\n        parentHash: {\n            format: 'bytes32',\n        },\n        receiptsRoot: {\n            format: 'bytes32',\n        },\n        sha3Uncles: {\n            format: 'bytes32',\n        },\n        size: {\n            format: 'uint',\n        },\n        stateRoot: {\n            format: 'bytes32',\n        },\n        timestamp: {\n            format: 'uint',\n        },\n        totalDifficulty: {\n            format: 'uint',\n        },\n        transactions: {\n            type: 'array',\n            items: {\n                format: 'bytes32',\n            },\n        },\n        transactionsRoot: {\n            format: 'bytes32',\n        },\n        uncles: {\n            type: 'array',\n            items: {\n                format: 'bytes32',\n            },\n        },\n        withdrawals: {\n            type: 'array',\n            items: Object.assign({}, withdrawalsSchema),\n        },\n        withdrawalsRoot: {\n            format: 'bytes32',\n        },\n    },\n};\nexport const logSchema = {\n    type: 'object',\n    properties: {\n        removed: {\n            format: 'bool',\n        },\n        logIndex: {\n            format: 'uint',\n        },\n        transactionIndex: {\n            format: 'uint',\n        },\n        transactionHash: {\n            format: 'bytes32',\n        },\n        blockHash: {\n            format: 'bytes32',\n        },\n        blockNumber: {\n            format: 'uint',\n        },\n        address: {\n            format: 'address',\n        },\n        data: {\n            format: 'bytes',\n        },\n        topics: {\n            type: 'array',\n            items: {\n                format: 'bytes32',\n            },\n        },\n    },\n};\nexport const syncSchema = {\n    type: 'object',\n    properties: {\n        startingBlock: {\n            format: 'string',\n        },\n        currentBlock: {\n            format: 'string',\n        },\n        highestBlock: {\n            format: 'string',\n        },\n        knownStates: {\n            format: 'string',\n        },\n        pulledStates: {\n            format: 'string',\n        },\n    },\n};\nexport const transactionReceiptSchema = {\n    type: 'object',\n    properties: {\n        transactionHash: {\n            format: 'bytes32',\n        },\n        transactionIndex: {\n            format: 'uint',\n        },\n        blockHash: {\n            format: 'bytes32',\n        },\n        blockNumber: {\n            format: 'uint',\n        },\n        from: {\n            format: 'address',\n        },\n        to: {\n            format: 'address',\n        },\n        cumulativeGasUsed: {\n            format: 'uint',\n        },\n        gasUsed: {\n            format: 'uint',\n        },\n        effectiveGasPrice: {\n            format: 'uint',\n        },\n        contractAddress: {\n            format: 'address',\n        },\n        logs: {\n            type: 'array',\n            items: Object.assign({}, logSchema),\n        },\n        logsBloom: {\n            format: 'bytes',\n        },\n        root: {\n            format: 'bytes',\n        },\n        status: {\n            format: 'uint',\n        },\n        type: {\n            format: 'uint',\n        },\n    },\n};\nexport const SignatureObjectSchema = {\n    type: 'object',\n    properties: {\n        messageHash: {\n            format: 'bytes',\n        },\n        r: {\n            format: 'bytes32',\n        },\n        s: {\n            format: 'bytes32',\n        },\n        v: {\n            format: 'bytes',\n        },\n        message: {\n            format: 'bytes',\n        },\n        signature: {\n            format: 'bytes',\n        },\n    },\n};\nexport const feeHistorySchema = {\n    type: 'object',\n    properties: {\n        oldestBlock: {\n            format: 'uint',\n        },\n        baseFeePerGas: {\n            type: 'array',\n            items: {\n                format: 'uint',\n            },\n        },\n        reward: {\n            type: 'array',\n            items: {\n                type: 'array',\n                items: {\n                    format: 'uint',\n                },\n            },\n        },\n        gasUsedRatio: {\n            type: 'array',\n            items: {\n                type: 'number',\n            },\n        },\n    },\n};\nexport const storageProofSchema = {\n    type: 'object',\n    properties: {\n        key: {\n            format: 'bytes32',\n        },\n        value: {\n            format: 'uint',\n        },\n        proof: {\n            type: 'array',\n            items: {\n                format: 'bytes32',\n            },\n        },\n    },\n};\nexport const accountSchema = {\n    type: 'object',\n    properties: {\n        balance: {\n            format: 'uint',\n        },\n        codeHash: {\n            format: 'bytes32',\n        },\n        nonce: {\n            format: 'uint',\n        },\n        storageHash: {\n            format: 'bytes32',\n        },\n        accountProof: {\n            type: 'array',\n            items: {\n                format: 'bytes32',\n            },\n        },\n        storageProof: {\n            type: 'array',\n            items: Object.assign({}, storageProofSchema),\n        },\n    },\n};\n//# sourceMappingURL=schemas.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { DEFAULT_RETURN_FORMAT } from 'web3-types';\nimport { isNullish } from 'web3-validator';\nimport { mergeDeep, format, bytesToHex, toHex } from 'web3-utils';\nimport { TransactionDataAndInputError } from 'web3-errors';\nimport { transactionInfoSchema } from '../schemas.js';\nexport function formatTransaction(transaction, returnFormat = DEFAULT_RETURN_FORMAT, options = {\n    transactionSchema: transactionInfoSchema,\n    fillInputAndData: false,\n}) {\n    var _a, _b;\n    let formattedTransaction = mergeDeep({}, transaction);\n    if (!isNullish(transaction === null || transaction === void 0 ? void 0 : transaction.common)) {\n        formattedTransaction.common = Object.assign({}, transaction.common);\n        if (!isNullish((_a = transaction.common) === null || _a === void 0 ? void 0 : _a.customChain))\n            formattedTransaction.common.customChain = Object.assign({}, transaction.common.customChain);\n    }\n    formattedTransaction = format((_b = options.transactionSchema) !== null && _b !== void 0 ? _b : transactionInfoSchema, formattedTransaction, returnFormat);\n    if (!isNullish(formattedTransaction.data) &&\n        !isNullish(formattedTransaction.input) &&\n        // Converting toHex is accounting for data and input being Uint8Arrays\n        // since comparing Uint8Array is not as straightforward as comparing strings\n        toHex(formattedTransaction.data) !== toHex(formattedTransaction.input))\n        throw new TransactionDataAndInputError({\n            data: bytesToHex(formattedTransaction.data),\n            input: bytesToHex(formattedTransaction.input),\n        });\n    if (options.fillInputAndData) {\n        if (!isNullish(formattedTransaction.data)) {\n            formattedTransaction.input = formattedTransaction.data;\n        }\n        else if (!isNullish(formattedTransaction.input)) {\n            formattedTransaction.data = formattedTransaction.input;\n        }\n    }\n    if (!isNullish(formattedTransaction.gasLimit)) {\n        formattedTransaction.gas = formattedTransaction.gasLimit;\n        delete formattedTransaction.gasLimit;\n    }\n    return formattedTransaction;\n}\n//# sourceMappingURL=format_transaction.js.map","import { bytesToHex, format, hexToBytes, keccak256 } from 'web3-utils';\nimport { TransactionFactory } from 'web3-eth-accounts';\nimport { detectRawTransactionType } from './detect_transaction_type.js';\nimport { formatTransaction } from './format_transaction.js';\n/**\n * Decodes an [RLP](https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/#top) encoded transaction.\n *\n * @param encodedSignedTransaction The RLP encoded transaction.\n * @param returnFormat ({@link DataFormat} Specifies how the return data should be formatted.\n * @returns {@link SignedTransactionInfoAPI}, an object containing the RLP encoded signed transaction (accessed via the `raw` property) and the signed transaction object (accessed via the `tx` property).\n */\nexport function decodeSignedTransaction(encodedSignedTransaction, returnFormat, options = {\n    fillInputAndData: false,\n}) {\n    return {\n        raw: format({ format: 'bytes' }, encodedSignedTransaction, returnFormat),\n        tx: formatTransaction(Object.assign(Object.assign({}, TransactionFactory.fromSerializedData(hexToBytes(encodedSignedTransaction)).toJSON()), { hash: bytesToHex(keccak256(hexToBytes(encodedSignedTransaction))), type: detectRawTransactionType(hexToBytes(encodedSignedTransaction)) }), returnFormat, {\n            fillInputAndData: options.fillInputAndData,\n            transactionSchema: options.transactionSchema,\n        }),\n    };\n}\n//# sourceMappingURL=decode_signed_transaction.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { format } from 'web3-utils';\nimport { netRpcMethods } from 'web3-rpc-methods';\nexport function getId(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield netRpcMethods.getId(web3Context.requestManager);\n        return format({ format: 'uint' }, response, returnFormat);\n    });\n}\nexport function getPeerCount(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield netRpcMethods.getPeerCount(web3Context.requestManager);\n        // Data returned is number in hex format\n        return format({ format: 'uint' }, response, returnFormat);\n    });\n}\nexport const isListening = (web3Context) => __awaiter(void 0, void 0, void 0, function* () { return netRpcMethods.isListening(web3Context.requestManager); });\n//# sourceMappingURL=rpc_method_wrappers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3Context } from 'web3-core';\nimport * as rpcMethodsWrappers from './rpc_method_wrappers.js';\n/**\n * Net class allows you to interact with an Ethereum node’s network properties.\n * For using Net package, first install Web3 package using: `npm i web3` or `yarn add web3` based on your package manager, after that Net features can be used.\n * ```ts\n *\n * import { Web3 } from 'web3';\n * const web3 = new Web3('https://mainnet.infura.io/v3/<YOURPROJID>');\n *\n * console.log(await web3.eth.net.getId());\n *\n * ```\n * For using individual package install `web3-net` packages using: `npm i web3-net` or `yarn add web3-net`.\n *\n * ```ts\n * import {Net} from 'web3-net';\n *\n *  const net = new Net('https://mainnet.infura.io/v3/<YOURPROJID>');\n *  console.log(await net.getId());\n * ```\n */\nexport class Net extends Web3Context {\n    /**\n     * Gets the current network ID\n     *\n     * @param returnFormat - Return format\n     * @returns A Promise of the network ID.\n     * @example\n     * ```ts\n     * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\n     * await net.getId();\n     * > 1\n     * ```\n     */\n    getId(returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return rpcMethodsWrappers.getId(this, returnFormat);\n        });\n    }\n    /**\n     * Get the number of peers connected to.\n     *\n     * @param returnFormat - Return format\n     * @returns A promise of the number of the peers connected to.\n     * @example\n     * ```ts\n     * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\n     * await net.getPeerCount();\n     * > 0\n     * ```\n     */\n    getPeerCount(returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return rpcMethodsWrappers.getPeerCount(this, returnFormat);\n        });\n    }\n    /**\n     * Check if the node is listening for peers\n     *\n     * @returns A promise of a boolean if the node is listening to peers\n     * @example\n     * ```ts\n     * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\n     * await net.isListening();\n     * > true\n     * ```\n     */\n    isListening() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return rpcMethodsWrappers.isListening(this);\n        });\n    }\n}\n//# sourceMappingURL=net.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { FMT_BYTES, FMT_NUMBER } from 'web3-types';\nexport const ALL_EVENTS = 'ALLEVENTS';\nexport const ALL_EVENTS_ABI = {\n    name: ALL_EVENTS,\n    signature: '',\n    type: 'event',\n    inputs: [],\n};\nexport const NUMBER_DATA_FORMAT = { bytes: FMT_BYTES.HEX, number: FMT_NUMBER.NUMBER };\n//# sourceMappingURL=constants.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ETH_DATA_FORMAT, } from 'web3-types';\nimport { isNullish } from 'web3-validator';\nimport { Eip1559NotSupportedError, UnsupportedTransactionTypeError } from 'web3-errors';\nimport { format } from 'web3-utils';\n// eslint-disable-next-line import/no-cycle\nimport { getBlock, getGasPrice } from '../rpc_method_wrappers.js';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionType } from './transaction_builder.js';\nfunction getEip1559GasPricing(transaction, web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d;\n        const block = yield getBlock(web3Context, web3Context.defaultBlock, false, ETH_DATA_FORMAT);\n        if (isNullish(block.baseFeePerGas))\n            throw new Eip1559NotSupportedError();\n        let gasPrice;\n        if (isNullish(transaction.gasPrice) && BigInt(block.baseFeePerGas) === BigInt(0)) {\n            gasPrice = yield getGasPrice(web3Context, returnFormat);\n        }\n        if (!isNullish(transaction.gasPrice) || !isNullish(gasPrice)) {\n            const convertedTransactionGasPrice = format({ format: 'uint' }, (_a = transaction.gasPrice) !== null && _a !== void 0 ? _a : gasPrice, returnFormat);\n            return {\n                maxPriorityFeePerGas: convertedTransactionGasPrice,\n                maxFeePerGas: convertedTransactionGasPrice,\n            };\n        }\n        return {\n            maxPriorityFeePerGas: format({ format: 'uint' }, (_b = transaction.maxPriorityFeePerGas) !== null && _b !== void 0 ? _b : web3Context.defaultMaxPriorityFeePerGas, returnFormat),\n            maxFeePerGas: format({ format: 'uint' }, ((_c = transaction.maxFeePerGas) !== null && _c !== void 0 ? _c : BigInt(block.baseFeePerGas) * BigInt(2) +\n                BigInt((_d = transaction.maxPriorityFeePerGas) !== null && _d !== void 0 ? _d : web3Context.defaultMaxPriorityFeePerGas)), returnFormat),\n        };\n    });\n}\nexport function getTransactionGasPricing(transaction, web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const transactionType = getTransactionType(transaction, web3Context);\n        if (!isNullish(transactionType)) {\n            if (transactionType.startsWith('-'))\n                throw new UnsupportedTransactionTypeError(transactionType);\n            // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2718.md#transactions\n            if (Number(transactionType) < 0 || Number(transactionType) > 127)\n                throw new UnsupportedTransactionTypeError(transactionType);\n            if (isNullish(transaction.gasPrice) &&\n                (transactionType === '0x0' || transactionType === '0x1'))\n                return {\n                    gasPrice: yield getGasPrice(web3Context, returnFormat),\n                    maxPriorityFeePerGas: undefined,\n                    maxFeePerGas: undefined,\n                };\n            if (transactionType === '0x2') {\n                return Object.assign({ gasPrice: undefined }, (yield getEip1559GasPricing(transaction, web3Context, returnFormat)));\n            }\n        }\n        return undefined;\n    });\n}\n//# sourceMappingURL=get_transaction_gas_pricing.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ETH_DATA_FORMAT, } from 'web3-types';\nimport { privateKeyToAddress } from 'web3-eth-accounts';\nimport { getId } from 'web3-net';\nimport { isNullish, isNumber, isHexStrict, isAddress } from 'web3-validator';\nimport { InvalidTransactionWithSender, InvalidTransactionWithReceiver, LocalWalletNotAvailableError, TransactionDataAndInputError, UnableToPopulateNonceError, } from 'web3-errors';\nimport { bytesToHex, format } from 'web3-utils';\nimport { NUMBER_DATA_FORMAT } from '../constants.js';\n// eslint-disable-next-line import/no-cycle\nimport { getChainId, getTransactionCount, estimateGas } from '../rpc_method_wrappers.js';\nimport { detectTransactionType } from './detect_transaction_type.js';\nimport { transactionSchema } from '../schemas.js';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionGasPricing } from './get_transaction_gas_pricing.js';\nexport const getTransactionFromOrToAttr = (attr, web3Context, transaction, privateKey) => {\n    if (transaction !== undefined && attr in transaction && transaction[attr] !== undefined) {\n        if (typeof transaction[attr] === 'string' && isAddress(transaction[attr])) {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            return transaction[attr];\n        }\n        if (!isHexStrict(transaction[attr]) && isNumber(transaction[attr])) {\n            if (web3Context.wallet) {\n                const account = web3Context.wallet.get(format({ format: 'uint' }, transaction[attr], NUMBER_DATA_FORMAT));\n                if (!isNullish(account)) {\n                    return account.address;\n                }\n                throw new LocalWalletNotAvailableError();\n            }\n            throw new LocalWalletNotAvailableError();\n        }\n        else {\n            throw attr === 'from'\n                ? new InvalidTransactionWithSender(transaction.from)\n                : // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n                    new InvalidTransactionWithReceiver(transaction.to);\n        }\n    }\n    if (attr === 'from') {\n        if (!isNullish(privateKey))\n            return privateKeyToAddress(privateKey);\n        if (!isNullish(web3Context.defaultAccount))\n            return web3Context.defaultAccount;\n    }\n    return undefined;\n};\nexport const getTransactionNonce = (web3Context_1, address_1, ...args_1) => __awaiter(void 0, [web3Context_1, address_1, ...args_1], void 0, function* (web3Context, address, returnFormat = web3Context.defaultReturnFormat) {\n    if (isNullish(address)) {\n        // TODO if (web3.eth.accounts.wallet) use address from local wallet\n        throw new UnableToPopulateNonceError();\n    }\n    return getTransactionCount(web3Context, address, web3Context.defaultBlock, returnFormat);\n});\nexport const getTransactionType = (transaction, web3Context) => {\n    const inferredType = detectTransactionType(transaction, web3Context);\n    if (!isNullish(inferredType))\n        return inferredType;\n    if (!isNullish(web3Context.defaultTransactionType))\n        return format({ format: 'uint' }, web3Context.defaultTransactionType, ETH_DATA_FORMAT);\n    return undefined;\n};\n// Keep in mind that the order the properties of populateTransaction get populated matters\n// as some of the properties are dependent on others\nexport function defaultTransactionBuilder(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        let populatedTransaction = format(transactionSchema, options.transaction, options.web3Context.defaultReturnFormat);\n        if (isNullish(populatedTransaction.from)) {\n            populatedTransaction.from = getTransactionFromOrToAttr('from', options.web3Context, undefined, options.privateKey);\n        }\n        // TODO: Debug why need to typecase getTransactionNonce\n        if (isNullish(populatedTransaction.nonce)) {\n            populatedTransaction.nonce = yield getTransactionNonce(options.web3Context, populatedTransaction.from, ETH_DATA_FORMAT);\n        }\n        if (isNullish(populatedTransaction.value)) {\n            populatedTransaction.value = '0x0';\n        }\n        if (!isNullish(populatedTransaction.data)) {\n            if (!isNullish(populatedTransaction.input) &&\n                populatedTransaction.data !== populatedTransaction.input)\n                throw new TransactionDataAndInputError({\n                    data: bytesToHex(populatedTransaction.data),\n                    input: bytesToHex(populatedTransaction.input),\n                });\n            if (!populatedTransaction.data.startsWith('0x'))\n                populatedTransaction.data = `0x${populatedTransaction.data}`;\n        }\n        else if (!isNullish(populatedTransaction.input)) {\n            if (!populatedTransaction.input.startsWith('0x'))\n                populatedTransaction.input = `0x${populatedTransaction.input}`;\n        }\n        else {\n            populatedTransaction.input = '0x';\n        }\n        if (isNullish(populatedTransaction.common)) {\n            if (options.web3Context.defaultCommon) {\n                const common = options.web3Context.defaultCommon;\n                const chainId = common.customChain.chainId;\n                const networkId = common.customChain.networkId;\n                const name = common.customChain.name;\n                populatedTransaction.common = Object.assign(Object.assign({}, common), { customChain: { chainId, networkId, name } });\n            }\n            if (isNullish(populatedTransaction.chain)) {\n                populatedTransaction.chain = options.web3Context.defaultChain;\n            }\n            if (isNullish(populatedTransaction.hardfork)) {\n                populatedTransaction.hardfork = options.web3Context.defaultHardfork;\n            }\n        }\n        if (isNullish(populatedTransaction.chainId) &&\n            isNullish((_a = populatedTransaction.common) === null || _a === void 0 ? void 0 : _a.customChain.chainId)) {\n            populatedTransaction.chainId = yield getChainId(options.web3Context, ETH_DATA_FORMAT);\n        }\n        if (isNullish(populatedTransaction.networkId)) {\n            populatedTransaction.networkId =\n                (_b = options.web3Context.defaultNetworkId) !== null && _b !== void 0 ? _b : (yield getId(options.web3Context, ETH_DATA_FORMAT));\n        }\n        if (isNullish(populatedTransaction.gasLimit) && !isNullish(populatedTransaction.gas)) {\n            populatedTransaction.gasLimit = populatedTransaction.gas;\n        }\n        populatedTransaction.type = getTransactionType(populatedTransaction, options.web3Context);\n        if (isNullish(populatedTransaction.accessList) &&\n            (populatedTransaction.type === '0x1' || populatedTransaction.type === '0x2')) {\n            populatedTransaction.accessList = [];\n        }\n        if (options.fillGasPrice)\n            populatedTransaction = Object.assign(Object.assign({}, populatedTransaction), (yield getTransactionGasPricing(populatedTransaction, options.web3Context, ETH_DATA_FORMAT)));\n        if (isNullish(populatedTransaction.gas) &&\n            isNullish(populatedTransaction.gasLimit) &&\n            options.fillGasLimit) {\n            const fillGasLimit = yield estimateGas(options.web3Context, populatedTransaction, 'latest', ETH_DATA_FORMAT);\n            populatedTransaction = Object.assign(Object.assign({}, populatedTransaction), { gas: format({ format: 'uint' }, fillGasLimit, ETH_DATA_FORMAT) });\n        }\n        return populatedTransaction;\n    });\n}\nexport const transactionBuilder = (options) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a;\n    return ((_a = options.web3Context.transactionBuilder) !== null && _a !== void 0 ? _a : defaultTransactionBuilder)(Object.assign(Object.assign({}, options), { transaction: options.transaction }));\n});\n//# sourceMappingURL=transaction_builder.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { rejectIfConditionAtInterval } from 'web3-utils';\nimport { TransactionBlockTimeoutError } from 'web3-errors';\nimport { NUMBER_DATA_FORMAT } from '../constants.js';\n// eslint-disable-next-line import/no-cycle\nimport { getBlockNumber } from '../rpc_method_wrappers.js';\nfunction resolveByPolling(web3Context, starterBlockNumber, transactionHash) {\n    const pollingInterval = web3Context.transactionPollingInterval;\n    const [intervalId, promiseToError] = rejectIfConditionAtInterval(() => __awaiter(this, void 0, void 0, function* () {\n        let lastBlockNumber;\n        try {\n            lastBlockNumber = yield getBlockNumber(web3Context, NUMBER_DATA_FORMAT);\n        }\n        catch (error) {\n            console.warn('An error happen while trying to get the block number', error);\n            return undefined;\n        }\n        const numberOfBlocks = lastBlockNumber - starterBlockNumber;\n        if (numberOfBlocks >= web3Context.transactionBlockTimeout) {\n            return new TransactionBlockTimeoutError({\n                starterBlockNumber,\n                numberOfBlocks,\n                transactionHash,\n            });\n        }\n        return undefined;\n    }), pollingInterval);\n    const clean = () => {\n        clearInterval(intervalId);\n    };\n    return [promiseToError, { clean }];\n}\nfunction resolveBySubscription(web3Context, starterBlockNumber, transactionHash) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        // The following variable will stay true except if the data arrived,\n        //\tor if watching started after an error had occurred.\n        let needToWatchLater = true;\n        let subscription;\n        let resourceCleaner;\n        // internal helper function\n        function revertToPolling(reject, previousError) {\n            if (previousError) {\n                console.warn('error happened at subscription. So revert to polling...', previousError);\n            }\n            resourceCleaner.clean();\n            needToWatchLater = false;\n            const [promiseToError, newResourceCleaner] = resolveByPolling(web3Context, starterBlockNumber, transactionHash);\n            resourceCleaner.clean = newResourceCleaner.clean;\n            promiseToError.catch(error => reject(error));\n        }\n        try {\n            subscription = (yield ((_a = web3Context.subscriptionManager) === null || _a === void 0 ? void 0 : _a.subscribe('newHeads')));\n            resourceCleaner = {\n                clean: () => {\n                    var _a;\n                    // Remove the subscription, if it was not removed somewhere\n                    // \telse by calling, for example, subscriptionManager.clear()\n                    if (subscription.id) {\n                        (_a = web3Context.subscriptionManager) === null || _a === void 0 ? void 0 : _a.removeSubscription(subscription).then(() => {\n                            // Subscription ended successfully\n                        }).catch(() => {\n                            // An error happened while ending subscription. But no need to take any action.\n                        });\n                    }\n                },\n            };\n        }\n        catch (error) {\n            return resolveByPolling(web3Context, starterBlockNumber, transactionHash);\n        }\n        const promiseToError = new Promise((_, reject) => {\n            try {\n                subscription.on('data', (lastBlockHeader) => {\n                    needToWatchLater = false;\n                    if (!(lastBlockHeader === null || lastBlockHeader === void 0 ? void 0 : lastBlockHeader.number)) {\n                        return;\n                    }\n                    const numberOfBlocks = Number(BigInt(lastBlockHeader.number) - BigInt(starterBlockNumber));\n                    if (numberOfBlocks >= web3Context.transactionBlockTimeout) {\n                        // Transaction Block Timeout is known to be reached by subscribing to new heads\n                        reject(new TransactionBlockTimeoutError({\n                            starterBlockNumber,\n                            numberOfBlocks,\n                            transactionHash,\n                        }));\n                    }\n                });\n                subscription.on('error', error => {\n                    revertToPolling(reject, error);\n                });\n            }\n            catch (error) {\n                revertToPolling(reject, error);\n            }\n            // Fallback to polling if tx receipt didn't arrived in \"blockHeaderTimeout\" [10 seconds]\n            setTimeout(() => {\n                if (needToWatchLater) {\n                    revertToPolling(reject);\n                }\n            }, web3Context.blockHeaderTimeout * 1000);\n        });\n        return [promiseToError, resourceCleaner];\n    });\n}\n/* TODO: After merge, there will be constant block mining time (exactly 12 second each block, except slot missed that currently happens in <1% of slots. ) so we can optimize following function\nfor POS NWs, we can skip checking getBlockNumber(); after interval and calculate only based on time  that certain num of blocked are mined after that for internal double check, can do one getBlockNumber() call and timeout.\n*/\nexport function rejectIfBlockTimeout(web3Context, transactionHash) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const { provider } = web3Context.requestManager;\n        let callingRes;\n        const starterBlockNumber = yield getBlockNumber(web3Context, NUMBER_DATA_FORMAT);\n        // TODO: once https://github.com/web3/web3.js/issues/5521 is implemented, remove checking for `enableExperimentalFeatures.useSubscriptionWhenCheckingBlockTimeout`\n        if (((_b = (_a = provider).supportsSubscriptions) === null || _b === void 0 ? void 0 : _b.call(_a)) &&\n            web3Context.enableExperimentalFeatures.useSubscriptionWhenCheckingBlockTimeout) {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            callingRes = yield resolveBySubscription(web3Context, starterBlockNumber, transactionHash);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            callingRes = resolveByPolling(web3Context, starterBlockNumber, transactionHash);\n        }\n        return callingRes;\n    });\n}\n//# sourceMappingURL=reject_if_block_timeout.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { rejectIfTimeout } from 'web3-utils';\nimport { TransactionSendTimeoutError } from 'web3-errors';\n// eslint-disable-next-line import/no-cycle\nimport { rejectIfBlockTimeout } from './reject_if_block_timeout.js';\n/**\n * An internal function to send a transaction or throws if sending did not finish during the timeout during the blocks-timeout.\n * @param web3Context - the context to read the configurations from\n * @param sendTransactionFunc - the function that will send the transaction (could be sendTransaction or sendRawTransaction)\n * @param transactionHash - to be used inside the exception message if there will be any exceptions.\n * @returns the Promise<string> returned by the `sendTransactionFunc`.\n */\nexport function trySendTransaction(web3Context, sendTransactionFunc, transactionHash) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [timeoutId, rejectOnTimeout] = rejectIfTimeout(web3Context.transactionSendTimeout, new TransactionSendTimeoutError({\n            numberOfSeconds: web3Context.transactionSendTimeout / 1000,\n            transactionHash,\n        }));\n        const [rejectOnBlockTimeout, blockTimeoutResourceCleaner] = yield rejectIfBlockTimeout(web3Context, transactionHash);\n        try {\n            // If an error happened here, do not catch it, just clear the resources before raising it to the caller function.\n            return yield Promise.race([\n                sendTransactionFunc(), // this is the function that will send the transaction\n                rejectOnTimeout, // this will throw an error on Transaction Send Timeout\n                rejectOnBlockTimeout, // this will throw an error on Transaction Block Timeout\n            ]);\n        }\n        finally {\n            clearTimeout(timeoutId);\n            blockTimeoutResourceCleaner.clean();\n        }\n    });\n}\n//# sourceMappingURL=try_send_transaction.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { TransactionPollingTimeoutError } from 'web3-errors';\n// eslint-disable-next-line import/no-cycle\nimport { pollTillDefinedAndReturnIntervalId, rejectIfTimeout } from 'web3-utils';\n// eslint-disable-next-line import/no-cycle\nimport { rejectIfBlockTimeout } from './reject_if_block_timeout.js';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionReceipt } from '../rpc_method_wrappers.js';\nexport function waitForTransactionReceipt(web3Context, transactionHash, returnFormat, customGetTransactionReceipt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        const pollingInterval = (_a = web3Context.transactionReceiptPollingInterval) !== null && _a !== void 0 ? _a : web3Context.transactionPollingInterval;\n        const [awaitableTransactionReceipt, IntervalId] = pollTillDefinedAndReturnIntervalId(() => __awaiter(this, void 0, void 0, function* () {\n            try {\n                return (customGetTransactionReceipt !== null && customGetTransactionReceipt !== void 0 ? customGetTransactionReceipt : getTransactionReceipt)(web3Context, transactionHash, returnFormat);\n            }\n            catch (error) {\n                console.warn('An error happen while trying to get the transaction receipt', error);\n                return undefined;\n            }\n        }), pollingInterval);\n        const [timeoutId, rejectOnTimeout] = rejectIfTimeout(web3Context.transactionPollingTimeout, new TransactionPollingTimeoutError({\n            numberOfSeconds: web3Context.transactionPollingTimeout / 1000,\n            transactionHash,\n        }));\n        const [rejectOnBlockTimeout, blockTimeoutResourceCleaner] = yield rejectIfBlockTimeout(web3Context, transactionHash);\n        try {\n            // If an error happened here, do not catch it, just clear the resources before raising it to the caller function.\n            return yield Promise.race([\n                awaitableTransactionReceipt,\n                rejectOnTimeout, // this will throw an error on Transaction Polling Timeout\n                rejectOnBlockTimeout, // this will throw an error on Transaction Block Timeout\n            ]);\n        }\n        finally {\n            if (timeoutId)\n                clearTimeout(timeoutId);\n            if (IntervalId)\n                clearInterval(IntervalId);\n            blockTimeoutResourceCleaner.clean();\n        }\n    });\n}\n//# sourceMappingURL=wait_for_transaction_receipt.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { format, numberToHex } from 'web3-utils';\nimport { ethRpcMethods } from 'web3-rpc-methods';\nimport { transactionReceiptSchema } from '../schemas.js';\n/**\n * This function watches a Transaction by subscribing to new heads.\n * It is used by `watchTransactionForConfirmations`, in case the provider does not support subscription.\n * And it is also used by `watchTransactionBySubscription`, as a fallback, if the subscription failed for any reason.\n */\nexport const watchTransactionByPolling = ({ web3Context, transactionReceipt, transactionPromiEvent, customTransactionReceiptSchema, returnFormat, }) => {\n    var _a;\n    // Having a transactionReceipt means that the transaction has already been included\n    // in at least one block, so we start with 1\n    let confirmations = 1;\n    const intervalId = setInterval(() => {\n        (() => __awaiter(void 0, void 0, void 0, function* () {\n            if (confirmations >= web3Context.transactionConfirmationBlocks) {\n                clearInterval(intervalId);\n                return;\n            }\n            const nextBlock = yield ethRpcMethods.getBlockByNumber(web3Context.requestManager, numberToHex(BigInt(transactionReceipt.blockNumber) + BigInt(confirmations)), false);\n            if (nextBlock === null || nextBlock === void 0 ? void 0 : nextBlock.hash) {\n                confirmations += 1;\n                transactionPromiEvent.emit('confirmation', {\n                    confirmations: format({ format: 'uint' }, confirmations, returnFormat),\n                    receipt: format(customTransactionReceiptSchema !== null && customTransactionReceiptSchema !== void 0 ? customTransactionReceiptSchema : transactionReceiptSchema, transactionReceipt, returnFormat),\n                    latestBlockHash: format({ format: 'bytes32' }, nextBlock.hash, returnFormat),\n                });\n            }\n        }))();\n    }, (_a = web3Context.transactionReceiptPollingInterval) !== null && _a !== void 0 ? _a : web3Context.transactionPollingInterval);\n};\n//# sourceMappingURL=watch_transaction_by_polling.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { format } from 'web3-utils';\nimport { transactionReceiptSchema } from '../schemas.js';\nimport { watchTransactionByPolling } from './watch_transaction_by_polling.js';\n/**\n * This function watches a Transaction by subscribing to new heads.\n * It is used by `watchTransactionForConfirmations`, in case the provider supports subscription.\n */\nexport const watchTransactionBySubscription = ({ web3Context, transactionReceipt, transactionPromiEvent, customTransactionReceiptSchema, returnFormat, }) => {\n    // The following variable will stay true except if the data arrived,\n    //\tor if watching started after an error had occurred.\n    let needToWatchLater = true;\n    let lastCaughtBlockHash;\n    setImmediate(() => {\n        var _a;\n        (_a = web3Context.subscriptionManager) === null || _a === void 0 ? void 0 : _a.subscribe('newHeads').then((subscription) => {\n            subscription.on('data', (newBlockHeader) => __awaiter(void 0, void 0, void 0, function* () {\n                var _a;\n                needToWatchLater = false;\n                if (!(newBlockHeader === null || newBlockHeader === void 0 ? void 0 : newBlockHeader.number) ||\n                    // For some cases, the on-data event is fired couple times for the same block!\n                    // This needs investigation but seems to be because of multiple `subscription.on('data'...)` even this should not cause that.\n                    lastCaughtBlockHash === (newBlockHeader === null || newBlockHeader === void 0 ? void 0 : newBlockHeader.parentHash)) {\n                    return;\n                }\n                lastCaughtBlockHash = newBlockHeader === null || newBlockHeader === void 0 ? void 0 : newBlockHeader.parentHash;\n                const confirmations = BigInt(newBlockHeader.number) -\n                    BigInt(transactionReceipt.blockNumber) +\n                    BigInt(1);\n                transactionPromiEvent.emit('confirmation', {\n                    confirmations: format({ format: 'uint' }, confirmations, returnFormat),\n                    receipt: format(customTransactionReceiptSchema !== null && customTransactionReceiptSchema !== void 0 ? customTransactionReceiptSchema : transactionReceiptSchema, transactionReceipt, returnFormat),\n                    latestBlockHash: format({ format: 'bytes32' }, newBlockHeader.parentHash, returnFormat),\n                });\n                if (confirmations >= web3Context.transactionConfirmationBlocks) {\n                    yield ((_a = web3Context.subscriptionManager) === null || _a === void 0 ? void 0 : _a.removeSubscription(subscription));\n                }\n            }));\n            subscription.on('error', () => __awaiter(void 0, void 0, void 0, function* () {\n                var _a;\n                yield ((_a = web3Context.subscriptionManager) === null || _a === void 0 ? void 0 : _a.removeSubscription(subscription));\n                needToWatchLater = false;\n                watchTransactionByPolling({\n                    web3Context,\n                    transactionReceipt,\n                    transactionPromiEvent,\n                    customTransactionReceiptSchema,\n                    returnFormat,\n                });\n            }));\n        }).catch(() => {\n            needToWatchLater = false;\n            watchTransactionByPolling({\n                web3Context,\n                transactionReceipt,\n                customTransactionReceiptSchema,\n                transactionPromiEvent,\n                returnFormat,\n            });\n        });\n    });\n    // Fallback to polling if tx receipt didn't arrived in \"blockHeaderTimeout\" [10 seconds]\n    setTimeout(() => {\n        if (needToWatchLater) {\n            watchTransactionByPolling({\n                web3Context,\n                transactionReceipt,\n                transactionPromiEvent,\n                returnFormat,\n            });\n        }\n    }, web3Context.blockHeaderTimeout * 1000);\n};\n//# sourceMappingURL=watch_transaction_by_subscription.js.map","import { format } from 'web3-utils';\nimport { isNullish } from 'web3-validator';\nimport { TransactionMissingReceiptOrBlockHashError, TransactionReceiptMissingBlockNumberError, } from 'web3-errors';\nimport { transactionReceiptSchema } from '../schemas.js';\nimport { watchTransactionByPolling, } from './watch_transaction_by_polling.js';\nimport { watchTransactionBySubscription } from './watch_transaction_by_subscription.js';\nexport function watchTransactionForConfirmations(web3Context, transactionPromiEvent, transactionReceipt, transactionHash, returnFormat, customTransactionReceiptSchema) {\n    if (isNullish(transactionReceipt) || isNullish(transactionReceipt.blockHash))\n        throw new TransactionMissingReceiptOrBlockHashError({\n            receipt: transactionReceipt,\n            blockHash: format({ format: 'bytes32' }, transactionReceipt === null || transactionReceipt === void 0 ? void 0 : transactionReceipt.blockHash, returnFormat),\n            transactionHash: format({ format: 'bytes32' }, transactionHash, returnFormat),\n        });\n    if (!transactionReceipt.blockNumber)\n        throw new TransactionReceiptMissingBlockNumberError({ receipt: transactionReceipt });\n    // As we have the receipt, it's the first confirmation that tx is accepted.\n    transactionPromiEvent.emit('confirmation', {\n        confirmations: format({ format: 'uint' }, 1, returnFormat),\n        receipt: format(customTransactionReceiptSchema !== null && customTransactionReceiptSchema !== void 0 ? customTransactionReceiptSchema : transactionReceiptSchema, transactionReceipt, returnFormat),\n        latestBlockHash: format({ format: 'bytes32' }, transactionReceipt.blockHash, returnFormat),\n    });\n    // so a subscription for newBlockHeaders can be made instead of polling\n    const provider = web3Context.requestManager.provider;\n    if (provider && 'supportsSubscriptions' in provider && provider.supportsSubscriptions()) {\n        watchTransactionBySubscription({\n            web3Context,\n            transactionReceipt,\n            transactionPromiEvent,\n            customTransactionReceiptSchema,\n            returnFormat,\n        });\n    }\n    else {\n        watchTransactionByPolling({\n            web3Context,\n            transactionReceipt,\n            transactionPromiEvent,\n            customTransactionReceiptSchema,\n            returnFormat,\n        });\n    }\n}\n//# sourceMappingURL=watch_transaction_for_confirmations.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { isNullish, isUint8Array, leftPad, rightPad, toHex } from 'web3-utils';\nexport const isAbiFragment = (item) => !isNullish(item) &&\n    typeof item === 'object' &&\n    !isNullish(item.type) &&\n    ['function', 'event', 'constructor', 'error'].includes(item.type);\nexport const isAbiErrorFragment = (item) => !isNullish(item) &&\n    typeof item === 'object' &&\n    !isNullish(item.type) &&\n    item.type === 'error';\nexport const isAbiEventFragment = (item) => !isNullish(item) &&\n    typeof item === 'object' &&\n    !isNullish(item.type) &&\n    item.type === 'event';\nexport const isAbiFunctionFragment = (item) => !isNullish(item) &&\n    typeof item === 'object' &&\n    !isNullish(item.type) &&\n    item.type === 'function';\nexport const isAbiConstructorFragment = (item) => !isNullish(item) &&\n    typeof item === 'object' &&\n    !isNullish(item.type) &&\n    item.type === 'constructor';\n/**\n * Check if type is simplified struct format\n */\nexport const isSimplifiedStructFormat = (type) => typeof type === 'object' &&\n    typeof type.components === 'undefined' &&\n    typeof type.name === 'undefined';\n/**\n * Maps the correct tuple type and name when the simplified format in encode/decodeParameter is used\n */\nexport const mapStructNameAndType = (structName) => structName.includes('[]')\n    ? { type: 'tuple[]', name: structName.slice(0, -2) }\n    : { type: 'tuple', name: structName };\n/**\n * Maps the simplified format in to the expected format of the ABICoder\n */\nexport const mapStructToCoderFormat = (struct) => {\n    const components = [];\n    for (const key of Object.keys(struct)) {\n        const item = struct[key];\n        if (typeof item === 'object') {\n            components.push(Object.assign(Object.assign({}, mapStructNameAndType(key)), { components: mapStructToCoderFormat(item) }));\n        }\n        else {\n            components.push({\n                name: key,\n                type: struct[key],\n            });\n        }\n    }\n    return components;\n};\n/**\n * Map types if simplified format is used\n */\nexport const mapTypes = (types) => {\n    const mappedTypes = [];\n    for (const type of types) {\n        let modifiedType = type;\n        // Clone object\n        if (typeof type === 'object') {\n            modifiedType = Object.assign({}, type);\n        }\n        // Remap `function` type params to bytes24 since Ethers does not\n        // recognize former type. Solidity docs say `Function` is a bytes24\n        // encoding the contract address followed by the function selector hash.\n        if (typeof type === 'object' && type.type === 'function') {\n            modifiedType = Object.assign(Object.assign({}, type), { type: 'bytes24' });\n        }\n        if (isSimplifiedStructFormat(modifiedType)) {\n            const structName = Object.keys(modifiedType)[0];\n            mappedTypes.push(Object.assign(Object.assign({}, mapStructNameAndType(structName)), { components: mapStructToCoderFormat(modifiedType[structName]) }));\n        }\n        else {\n            mappedTypes.push(modifiedType);\n        }\n    }\n    return mappedTypes;\n};\n/**\n * returns true if input is a hexstring and is odd-lengthed\n */\nexport const isOddHexstring = (param) => typeof param === 'string' && /^(-)?0x[0-9a-f]*$/i.test(param) && param.length % 2 === 1;\n/**\n * format odd-length bytes to even-length\n */\nexport const formatOddHexstrings = (param) => isOddHexstring(param) ? `0x0${param.substring(2)}` : param;\nconst paramTypeBytes = /^bytes([0-9]*)$/;\nconst paramTypeBytesArray = /^bytes([0-9]*)\\[\\]$/;\nconst paramTypeNumber = /^(u?int)([0-9]*)$/;\nconst paramTypeNumberArray = /^(u?int)([0-9]*)\\[\\]$/;\n/**\n * Handle some formatting of params for backwards compatibility with Ethers V4\n */\nexport const formatParam = (type, _param) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    // clone if _param is an object\n    const param = typeof _param === 'object' && !Array.isArray(_param) ? Object.assign({}, _param) : _param;\n    // Format BN to string\n    if (param instanceof BigInt || typeof param === 'bigint') {\n        return param.toString(10);\n    }\n    if (paramTypeBytesArray.exec(type) || paramTypeNumberArray.exec(type)) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        const paramClone = [...param];\n        return paramClone.map(p => formatParam(type.replace('[]', ''), p));\n    }\n    // Format correct width for u?int[0-9]*\n    let match = paramTypeNumber.exec(type);\n    if (match) {\n        const size = parseInt(match[2] ? match[2] : '256', 10);\n        if (size / 8 < param.length) {\n            // pad to correct bit width\n            return leftPad(param, size);\n        }\n    }\n    // Format correct length for bytes[0-9]+\n    match = paramTypeBytes.exec(type);\n    if (match) {\n        const hexParam = isUint8Array(param) ? toHex(param) : param;\n        // format to correct length\n        const size = parseInt(match[1], 10);\n        if (size) {\n            let maxSize = size * 2;\n            if (param.startsWith('0x')) {\n                maxSize += 2;\n            }\n            // pad to correct length\n            const paddedParam = hexParam.length < maxSize\n                ? rightPad(param, size * 2)\n                : hexParam;\n            return formatOddHexstrings(paddedParam);\n        }\n        return formatOddHexstrings(hexParam);\n    }\n    return param;\n};\n/**\n *  used to flatten json abi inputs/outputs into an array of type-representing-strings\n */\nexport const flattenTypes = (includeTuple, puts) => {\n    const types = [];\n    puts.forEach(param => {\n        if (typeof param.components === 'object') {\n            if (!param.type.startsWith('tuple')) {\n                throw new AbiError(`Invalid value given \"${param.type}\". Error: components found but type is not tuple.`);\n            }\n            const arrayBracket = param.type.indexOf('[');\n            const suffix = arrayBracket >= 0 ? param.type.substring(arrayBracket) : '';\n            const result = flattenTypes(includeTuple, param.components);\n            if (Array.isArray(result) && includeTuple) {\n                types.push(`tuple(${result.join(',')})${suffix}`);\n            }\n            else if (!includeTuple) {\n                types.push(`(${result.join(',')})${suffix}`);\n            }\n            else {\n                types.push(`(${result.join()})`);\n            }\n        }\n        else {\n            types.push(param.type);\n        }\n    });\n    return types;\n};\n/**\n * Should be used to create full function/event name from json abi\n * returns a string\n */\nexport const jsonInterfaceMethodToString = (json) => {\n    var _a, _b, _c, _d;\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    if (isAbiErrorFragment(json) || isAbiEventFragment(json) || isAbiFunctionFragment(json)) {\n        if ((_a = json.name) === null || _a === void 0 ? void 0 : _a.includes('(')) {\n            return json.name;\n        }\n        return `${(_b = json.name) !== null && _b !== void 0 ? _b : ''}(${flattenTypes(false, (_c = json.inputs) !== null && _c !== void 0 ? _c : []).join(',')})`;\n    }\n    // Constructor fragment\n    return `(${flattenTypes(false, (_d = json.inputs) !== null && _d !== void 0 ? _d : []).join(',')})`;\n};\n//# sourceMappingURL=utils.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n *\n *  @module ABI\n */\nimport { sha3Raw } from 'web3-utils';\nimport { AbiError } from 'web3-errors';\nimport { jsonInterfaceMethodToString, isAbiErrorFragment } from '../utils.js';\n/**\n * Encodes the error name to its ABI signature, which are the sha3 hash of the error name including input types.\n */\nexport const encodeErrorSignature = (functionName) => {\n    if (typeof functionName !== 'string' && !isAbiErrorFragment(functionName)) {\n        throw new AbiError('Invalid parameter value in encodeErrorSignature');\n    }\n    let name;\n    if (functionName && (typeof functionName === 'function' || typeof functionName === 'object')) {\n        name = jsonInterfaceMethodToString(functionName);\n    }\n    else {\n        name = functionName;\n    }\n    return sha3Raw(name);\n};\n//# sourceMappingURL=errors_api.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n *\n *  @module ABI\n */\nimport { sha3Raw } from 'web3-utils';\nimport { AbiError } from 'web3-errors';\nimport { jsonInterfaceMethodToString, isAbiEventFragment } from '../utils.js';\n/**\n * Encodes the event name to its ABI signature, which are the sha3 hash of the event name including input types.\n * @param functionName - The event name to encode, or the {@link AbiEventFragment} object of the event. If string, it has to be in the form of `eventName(param1Type,param2Type,...)`. eg: myEvent(uint256,bytes32).\n * @returns - The ABI signature of the event.\n *\n * @example\n * ```ts\n * const event = web3.eth.abi.encodeEventSignature({\n *   name: \"myEvent\",\n *   type: \"event\",\n *   inputs: [\n *     {\n *       type: \"uint256\",\n *       name: \"myNumber\",\n *     },\n *     {\n *       type: \"bytes32\",\n *       name: \"myBytes\",\n *     },\n *   ],\n * });\n * console.log(event);\n * > 0xf2eeb729e636a8cb783be044acf6b7b1e2c5863735b60d6daae84c366ee87d97\n *\n *  const event = web3.eth.abi.encodeEventSignature({\n *   inputs: [\n *     {\n *       indexed: true,\n *       name: \"from\",\n *       type: \"address\",\n *     },\n *     {\n *       indexed: true,\n *       name: \"to\",\n *       type: \"address\",\n *     },\n *     {\n *       indexed: false,\n *       name: \"value\",\n *       type: \"uint256\",\n *     },\n *   ],\n *   name: \"Transfer\",\n *   type: \"event\",\n * });\n * console.log(event);\n * > 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n * ```\n */\nexport const encodeEventSignature = (functionName) => {\n    if (typeof functionName !== 'string' && !isAbiEventFragment(functionName)) {\n        throw new AbiError('Invalid parameter value in encodeEventSignature');\n    }\n    let name;\n    if (functionName && (typeof functionName === 'function' || typeof functionName === 'object')) {\n        name = jsonInterfaceMethodToString(functionName);\n    }\n    else {\n        name = functionName;\n    }\n    return sha3Raw(name);\n};\n//# sourceMappingURL=events_api.js.map","// src/regex.ts\nfunction execTyped(regex, string) {\n  const match = regex.exec(string);\n  return match?.groups;\n}\nvar bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/;\nvar integerRegex = /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;\nvar isTupleRegex = /^\\(.+?\\).*?$/;\n\nexport {\n  execTyped,\n  bytesRegex,\n  integerRegex,\n  isTupleRegex\n};\n","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\nexport {\n  __publicField\n};\n","import {\n  bytesRegex,\n  execTyped,\n  integerRegex,\n  isTupleRegex\n} from \"./chunk-WP7KDV47.mjs\";\nimport {\n  __publicField\n} from \"./chunk-NHABU752.mjs\";\n\n// package.json\nvar name = \"abitype\";\nvar version = \"0.7.1\";\n\n// src/errors.ts\nvar BaseError = class extends Error {\n  constructor(shortMessage, args = {}) {\n    const details = args.cause instanceof BaseError ? args.cause.details : args.cause?.message ? args.cause.message : args.details;\n    const docsPath = args.cause instanceof BaseError ? args.cause.docsPath || args.docsPath : args.docsPath;\n    const message = [\n      shortMessage || \"An error occurred.\",\n      \"\",\n      ...args.metaMessages ? [...args.metaMessages, \"\"] : [],\n      ...docsPath ? [`Docs: https://abitype.dev${docsPath}`] : [],\n      ...details ? [`Details: ${details}`] : [],\n      `Version: ${name}@${version}`\n    ].join(\"\\n\");\n    super(message);\n    __publicField(this, \"details\");\n    __publicField(this, \"docsPath\");\n    __publicField(this, \"metaMessages\");\n    __publicField(this, \"shortMessage\");\n    __publicField(this, \"name\", \"AbiTypeError\");\n    if (args.cause)\n      this.cause = args.cause;\n    this.details = details;\n    this.docsPath = docsPath;\n    this.metaMessages = args.metaMessages;\n    this.shortMessage = shortMessage;\n  }\n};\n\n// src/narrow.ts\nfunction narrow(value) {\n  return value;\n}\n\n// src/human-readable/runtime/signatures.ts\nvar errorSignatureRegex = /^error (?<name>[a-zA-Z0-9_]+)\\((?<parameters>.*?)\\)$/;\nfunction isErrorSignature(signature) {\n  return errorSignatureRegex.test(signature);\n}\nfunction execErrorSignature(signature) {\n  return execTyped(\n    errorSignatureRegex,\n    signature\n  );\n}\nvar eventSignatureRegex = /^event (?<name>[a-zA-Z0-9_]+)\\((?<parameters>.*?)\\)$/;\nfunction isEventSignature(signature) {\n  return eventSignatureRegex.test(signature);\n}\nfunction execEventSignature(signature) {\n  return execTyped(\n    eventSignatureRegex,\n    signature\n  );\n}\nvar functionSignatureRegex = /^function (?<name>[a-zA-Z0-9_]+)\\((?<parameters>.*?)\\)(?: (?<scope>external|public{1}))?(?: (?<stateMutability>pure|view|nonpayable|payable{1}))?(?: returns \\((?<returns>.*?)\\))?$/;\nfunction isFunctionSignature(signature) {\n  return functionSignatureRegex.test(signature);\n}\nfunction execFunctionSignature(signature) {\n  return execTyped(functionSignatureRegex, signature);\n}\nvar structSignatureRegex = /^struct (?<name>[a-zA-Z0-9_]+) \\{(?<properties>.*?)\\}$/;\nfunction isStructSignature(signature) {\n  return structSignatureRegex.test(signature);\n}\nfunction execStructSignature(signature) {\n  return execTyped(\n    structSignatureRegex,\n    signature\n  );\n}\nvar constructorSignatureRegex = /^constructor\\((?<parameters>.*?)\\)(?:\\s(?<stateMutability>payable{1}))?$/;\nfunction isConstructorSignature(signature) {\n  return constructorSignatureRegex.test(signature);\n}\nfunction execConstructorSignature(signature) {\n  return execTyped(constructorSignatureRegex, signature);\n}\nvar fallbackSignatureRegex = /^fallback\\(\\)$/;\nfunction isFallbackSignature(signature) {\n  return fallbackSignatureRegex.test(signature);\n}\nvar receiveSignatureRegex = /^receive\\(\\) external payable$/;\nfunction isReceiveSignature(signature) {\n  return receiveSignatureRegex.test(signature);\n}\nvar modifiers = /* @__PURE__ */ new Set([\n  \"memory\",\n  \"indexed\",\n  \"storage\",\n  \"calldata\"\n]);\nvar eventModifiers = /* @__PURE__ */ new Set([\"indexed\"]);\nvar functionModifiers = /* @__PURE__ */ new Set([\n  \"calldata\",\n  \"memory\",\n  \"storage\"\n]);\n\n// src/human-readable/runtime/cache.ts\nfunction getParameterCacheKey(param, type) {\n  if (type)\n    return `${type}:${param}`;\n  return param;\n}\nvar parameterCache = /* @__PURE__ */ new Map([\n  // Unnamed\n  [\"address\", { type: \"address\" }],\n  [\"bool\", { type: \"bool\" }],\n  [\"bytes\", { type: \"bytes\" }],\n  [\"bytes32\", { type: \"bytes32\" }],\n  [\"int\", { type: \"int256\" }],\n  [\"int256\", { type: \"int256\" }],\n  [\"string\", { type: \"string\" }],\n  [\"uint\", { type: \"uint256\" }],\n  [\"uint8\", { type: \"uint8\" }],\n  [\"uint16\", { type: \"uint16\" }],\n  [\"uint24\", { type: \"uint24\" }],\n  [\"uint32\", { type: \"uint32\" }],\n  [\"uint64\", { type: \"uint64\" }],\n  [\"uint96\", { type: \"uint96\" }],\n  [\"uint112\", { type: \"uint112\" }],\n  [\"uint160\", { type: \"uint160\" }],\n  [\"uint192\", { type: \"uint192\" }],\n  [\"uint256\", { type: \"uint256\" }],\n  // Named\n  [\"address owner\", { type: \"address\", name: \"owner\" }],\n  [\"address to\", { type: \"address\", name: \"to\" }],\n  [\"bool approved\", { type: \"bool\", name: \"approved\" }],\n  [\"bytes _data\", { type: \"bytes\", name: \"_data\" }],\n  [\"bytes data\", { type: \"bytes\", name: \"data\" }],\n  [\"bytes signature\", { type: \"bytes\", name: \"signature\" }],\n  [\"bytes32 hash\", { type: \"bytes32\", name: \"hash\" }],\n  [\"bytes32 r\", { type: \"bytes32\", name: \"r\" }],\n  [\"bytes32 root\", { type: \"bytes32\", name: \"root\" }],\n  [\"bytes32 s\", { type: \"bytes32\", name: \"s\" }],\n  [\"string name\", { type: \"string\", name: \"name\" }],\n  [\"string symbol\", { type: \"string\", name: \"symbol\" }],\n  [\"string tokenURI\", { type: \"string\", name: \"tokenURI\" }],\n  [\"uint tokenId\", { type: \"uint256\", name: \"tokenId\" }],\n  [\"uint8 v\", { type: \"uint8\", name: \"v\" }],\n  [\"uint256 balance\", { type: \"uint256\", name: \"balance\" }],\n  [\"uint256 tokenId\", { type: \"uint256\", name: \"tokenId\" }],\n  [\"uint256 value\", { type: \"uint256\", name: \"value\" }],\n  // Indexed\n  [\n    \"event:address indexed from\",\n    { type: \"address\", name: \"from\", indexed: true }\n  ],\n  [\"event:address indexed to\", { type: \"address\", name: \"to\", indexed: true }],\n  [\n    \"event:uint indexed tokenId\",\n    { type: \"uint256\", name: \"tokenId\", indexed: true }\n  ],\n  [\n    \"event:uint256 indexed tokenId\",\n    { type: \"uint256\", name: \"tokenId\", indexed: true }\n  ]\n]);\n\n// src/human-readable/runtime/utils.ts\nfunction parseSignature(signature, structs = {}) {\n  if (isFunctionSignature(signature)) {\n    const match = execFunctionSignature(signature);\n    if (!match)\n      throw new BaseError(\"Invalid function signature.\", {\n        details: signature\n      });\n    const inputParams = splitParameters(match.parameters);\n    const inputs = [];\n    const inputLength = inputParams.length;\n    for (let i = 0; i < inputLength; i++) {\n      inputs.push(\n        parseAbiParameter(inputParams[i], {\n          modifiers: functionModifiers,\n          structs,\n          type: \"function\"\n        })\n      );\n    }\n    const outputs = [];\n    if (match.returns) {\n      const outputParams = splitParameters(match.returns);\n      const outputLength = outputParams.length;\n      for (let i = 0; i < outputLength; i++) {\n        outputs.push(\n          parseAbiParameter(outputParams[i], {\n            modifiers: functionModifiers,\n            structs,\n            type: \"function\"\n          })\n        );\n      }\n    }\n    return {\n      name: match.name,\n      type: \"function\",\n      stateMutability: match.stateMutability ?? \"nonpayable\",\n      inputs,\n      outputs\n    };\n  }\n  if (isEventSignature(signature)) {\n    const match = execEventSignature(signature);\n    if (!match)\n      throw new BaseError(\"Invalid event signature.\", {\n        details: signature\n      });\n    const params = splitParameters(match.parameters);\n    const abiParameters = [];\n    const length = params.length;\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(\n        parseAbiParameter(params[i], {\n          modifiers: eventModifiers,\n          structs,\n          type: \"event\"\n        })\n      );\n    }\n    return { name: match.name, type: \"event\", inputs: abiParameters };\n  }\n  if (isErrorSignature(signature)) {\n    const match = execErrorSignature(signature);\n    if (!match)\n      throw new BaseError(\"Invalid error signature.\", {\n        details: signature\n      });\n    const params = splitParameters(match.parameters);\n    const abiParameters = [];\n    const length = params.length;\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(\n        parseAbiParameter(params[i], { structs, type: \"error\" })\n      );\n    }\n    return { name: match.name, type: \"error\", inputs: abiParameters };\n  }\n  if (isConstructorSignature(signature)) {\n    const match = execConstructorSignature(signature);\n    if (!match)\n      throw new BaseError(\"Invalid constructor signature.\", {\n        details: signature\n      });\n    const params = splitParameters(match.parameters);\n    const abiParameters = [];\n    const length = params.length;\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(\n        parseAbiParameter(params[i], { structs, type: \"constructor\" })\n      );\n    }\n    return {\n      type: \"constructor\",\n      stateMutability: match.stateMutability ?? \"nonpayable\",\n      inputs: abiParameters\n    };\n  }\n  if (isFallbackSignature(signature))\n    return { type: \"fallback\" };\n  if (isReceiveSignature(signature))\n    return {\n      type: \"receive\",\n      stateMutability: \"payable\"\n    };\n  throw new BaseError(\"Unknown signature.\", {\n    details: signature\n  });\n}\nvar abiParameterWithoutTupleRegex = /^(?<type>[a-zA-Z0-9_]+?)(?<array>(?:\\[\\d*?\\])+?)?(?:\\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\\s(?<name>[a-zA-Z0-9_]+))?$/;\nvar abiParameterWithTupleRegex = /^\\((?<type>.+?)\\)(?<array>(?:\\[\\d*?\\])+?)?(?:\\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\\s(?<name>[a-zA-Z0-9_]+))?$/;\nvar dynamicIntegerRegex = /^u?int$/;\nfunction parseAbiParameter(param, options) {\n  const parameterCacheKey = getParameterCacheKey(param, options?.type);\n  if (parameterCache.has(parameterCacheKey))\n    return parameterCache.get(parameterCacheKey);\n  const isTuple = isTupleRegex.test(param);\n  const match = execTyped(\n    isTuple ? abiParameterWithTupleRegex : abiParameterWithoutTupleRegex,\n    param\n  );\n  if (!match)\n    throw new BaseError(\"Invalid ABI parameter.\", {\n      details: param\n    });\n  if (match.name && isSolidityKeyword(match.name))\n    throw new BaseError(\"Invalid ABI parameter.\", {\n      details: param,\n      metaMessages: [\n        `\"${match.name}\" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`\n      ]\n    });\n  const name2 = match.name ? { name: match.name } : {};\n  const indexed = match.modifier === \"indexed\" ? { indexed: true } : {};\n  const structs = options?.structs ?? {};\n  let type;\n  let components = {};\n  if (isTuple) {\n    type = \"tuple\";\n    const params = splitParameters(match.type);\n    const components_ = [];\n    const length = params.length;\n    for (let i = 0; i < length; i++) {\n      components_.push(parseAbiParameter(params[i], { structs }));\n    }\n    components = { components: components_ };\n  } else if (match.type in structs) {\n    type = \"tuple\";\n    components = { components: structs[match.type] };\n  } else if (dynamicIntegerRegex.test(match.type)) {\n    type = `${match.type}256`;\n  } else {\n    type = match.type;\n    if (!(options?.type === \"struct\") && !isSolidityType(type))\n      throw new BaseError(\"Unknown type.\", {\n        metaMessages: [`Type \"${type}\" is not a valid ABI type.`]\n      });\n  }\n  if (match.modifier) {\n    if (!options?.modifiers?.has?.(match.modifier))\n      throw new BaseError(\"Invalid ABI parameter.\", {\n        details: param,\n        metaMessages: [\n          `Modifier \"${match.modifier}\" not allowed${options?.type ? ` in \"${options.type}\" type` : \"\"}.`\n        ]\n      });\n    if (functionModifiers.has(match.modifier) && !isValidDataLocation(type, !!match.array))\n      throw new BaseError(\"Invalid ABI parameter.\", {\n        details: param,\n        metaMessages: [\n          `Modifier \"${match.modifier}\" not allowed${options?.type ? ` in \"${options.type}\" type` : \"\"}.`,\n          `Data location can only be specified for array, struct, or mapping types, but \"${match.modifier}\" was given.`\n        ]\n      });\n  }\n  const abiParameter = {\n    type: `${type}${match.array ?? \"\"}`,\n    ...name2,\n    ...indexed,\n    ...components\n  };\n  parameterCache.set(parameterCacheKey, abiParameter);\n  return abiParameter;\n}\nfunction splitParameters(params, result = [], current = \"\", depth = 0) {\n  if (params === \"\") {\n    if (current === \"\")\n      return result;\n    if (depth !== 0)\n      throw new BaseError(\"Unbalanced parentheses.\", {\n        metaMessages: [\n          `\"${current.trim()}\" has too many ${depth > 0 ? \"opening\" : \"closing\"} parentheses.`\n        ],\n        details: `Depth \"${depth}\"`\n      });\n    return [...result, current.trim()];\n  }\n  const length = params.length;\n  for (let i = 0; i < length; i++) {\n    const char = params[i];\n    const tail = params.slice(i + 1);\n    switch (char) {\n      case \",\":\n        return depth === 0 ? splitParameters(tail, [...result, current.trim()]) : splitParameters(tail, result, `${current}${char}`, depth);\n      case \"(\":\n        return splitParameters(tail, result, `${current}${char}`, depth + 1);\n      case \")\":\n        return splitParameters(tail, result, `${current}${char}`, depth - 1);\n      default:\n        return splitParameters(tail, result, `${current}${char}`, depth);\n    }\n  }\n  return [];\n}\nfunction isSolidityType(type) {\n  return type === \"address\" || type === \"bool\" || type === \"function\" || type === \"string\" || bytesRegex.test(type) || integerRegex.test(type);\n}\nvar protectedKeywordsRegex = /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/;\nfunction isSolidityKeyword(name2) {\n  return name2 === \"address\" || name2 === \"bool\" || name2 === \"function\" || name2 === \"string\" || name2 === \"tuple\" || bytesRegex.test(name2) || integerRegex.test(name2) || protectedKeywordsRegex.test(name2);\n}\nfunction isValidDataLocation(type, isArray) {\n  return isArray || type === \"bytes\" || type === \"string\" || type === \"tuple\";\n}\n\n// src/human-readable/runtime/structs.ts\nfunction parseStructs(signatures) {\n  const shallowStructs = {};\n  const signaturesLength = signatures.length;\n  for (let i = 0; i < signaturesLength; i++) {\n    const signature = signatures[i];\n    if (!isStructSignature(signature))\n      continue;\n    const match = execStructSignature(signature);\n    if (!match)\n      throw new BaseError(\"Invalid struct signature.\", {\n        details: signature\n      });\n    const properties = match.properties.split(\";\");\n    const components = [];\n    const propertiesLength = properties.length;\n    for (let k = 0; k < propertiesLength; k++) {\n      const property = properties[k];\n      const trimmed = property.trim();\n      if (!trimmed)\n        continue;\n      const abiParameter = parseAbiParameter(trimmed, {\n        type: \"struct\"\n      });\n      components.push(abiParameter);\n    }\n    if (!components.length)\n      throw new BaseError(\"Invalid struct signature.\", {\n        details: signature,\n        metaMessages: [\"No properties exist.\"]\n      });\n    shallowStructs[match.name] = components;\n  }\n  const resolvedStructs = {};\n  const entries = Object.entries(shallowStructs);\n  const entriesLength = entries.length;\n  for (let i = 0; i < entriesLength; i++) {\n    const [name2, parameters] = entries[i];\n    resolvedStructs[name2] = resolveStructs(parameters, shallowStructs);\n  }\n  return resolvedStructs;\n}\nvar typeWithoutTupleRegex = /^(?<type>[a-zA-Z0-9_]+?)(?<array>(?:\\[\\d*?\\])+?)?$/;\nfunction resolveStructs(abiParameters, structs, ancestors = /* @__PURE__ */ new Set()) {\n  const components = [];\n  const length = abiParameters.length;\n  for (let i = 0; i < length; i++) {\n    const abiParameter = abiParameters[i];\n    const isTuple = isTupleRegex.test(abiParameter.type);\n    if (isTuple)\n      components.push(abiParameter);\n    else {\n      const match = execTyped(\n        typeWithoutTupleRegex,\n        abiParameter.type\n      );\n      if (!match?.type)\n        throw new BaseError(\"Invalid ABI parameter.\", {\n          details: JSON.stringify(abiParameter, null, 2),\n          metaMessages: [\"ABI parameter type is invalid.\"]\n        });\n      const { array, type } = match;\n      if (type in structs) {\n        if (ancestors.has(type))\n          throw new BaseError(\"Circular reference detected.\", {\n            metaMessages: [`Struct \"${type}\" is a circular reference.`]\n          });\n        components.push({\n          ...abiParameter,\n          type: `tuple${array ?? \"\"}`,\n          components: resolveStructs(\n            structs[type] ?? [],\n            structs,\n            /* @__PURE__ */ new Set([...ancestors, type])\n          )\n        });\n      } else {\n        if (isSolidityType(type))\n          components.push(abiParameter);\n        else\n          throw new BaseError(\"Unknown type.\", {\n            metaMessages: [\n              `Type \"${type}\" is not a valid ABI type. Perhaps you forgot to include a struct signature?`\n            ]\n          });\n      }\n    }\n  }\n  return components;\n}\n\n// src/human-readable/parseAbi.ts\nfunction parseAbi(signatures) {\n  const structs = parseStructs(signatures);\n  const abi = [];\n  const length = signatures.length;\n  for (let i = 0; i < length; i++) {\n    const signature = signatures[i];\n    if (isStructSignature(signature))\n      continue;\n    abi.push(parseSignature(signature, structs));\n  }\n  return abi;\n}\n\n// src/human-readable/parseAbiItem.ts\nfunction parseAbiItem(signature) {\n  let abiItem;\n  if (typeof signature === \"string\")\n    abiItem = parseSignature(signature);\n  else {\n    const structs = parseStructs(signature);\n    const length = signature.length;\n    for (let i = 0; i < length; i++) {\n      const signature_ = signature[i];\n      if (isStructSignature(signature_))\n        continue;\n      abiItem = parseSignature(signature_, structs);\n      break;\n    }\n  }\n  if (!abiItem)\n    throw new BaseError(\"Failed to parse ABI item.\", {\n      details: `parseAbiItem(${JSON.stringify(signature, null, 2)})`,\n      docsPath: \"/api/human.html#parseabiitem-1\"\n    });\n  return abiItem;\n}\n\n// src/human-readable/parseAbiParameter.ts\nfunction parseAbiParameter2(param) {\n  let abiParameter;\n  if (typeof param === \"string\")\n    abiParameter = parseAbiParameter(param, {\n      modifiers\n    });\n  else {\n    const structs = parseStructs(param);\n    const length = param.length;\n    for (let i = 0; i < length; i++) {\n      const signature = param[i];\n      if (isStructSignature(signature))\n        continue;\n      abiParameter = parseAbiParameter(signature, { modifiers, structs });\n      break;\n    }\n  }\n  if (!abiParameter)\n    throw new BaseError(\"Failed to parse ABI parameter.\", {\n      details: `parseAbiParameter(${JSON.stringify(param, null, 2)})`,\n      docsPath: \"/api/human.html#parseabiparameter-1\"\n    });\n  return abiParameter;\n}\n\n// src/human-readable/parseAbiParameters.ts\nfunction parseAbiParameters(params) {\n  const abiParameters = [];\n  if (typeof params === \"string\") {\n    const parameters = splitParameters(params);\n    const length = parameters.length;\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(parseAbiParameter(parameters[i], { modifiers }));\n    }\n  } else {\n    const structs = parseStructs(params);\n    const length = params.length;\n    for (let i = 0; i < length; i++) {\n      const signature = params[i];\n      if (isStructSignature(signature))\n        continue;\n      const parameters = splitParameters(signature);\n      const length2 = parameters.length;\n      for (let k = 0; k < length2; k++) {\n        abiParameters.push(\n          parseAbiParameter(parameters[k], { modifiers, structs })\n        );\n      }\n    }\n  }\n  if (abiParameters.length === 0)\n    throw new BaseError(\"Failed to parse ABI parameters.\", {\n      details: `parseAbiParameters(${JSON.stringify(params, null, 2)})`,\n      docsPath: \"/api/human.html#parseabiparameters-1\"\n    });\n  return abiParameters;\n}\nexport {\n  BaseError,\n  narrow,\n  parseAbi,\n  parseAbiItem,\n  parseAbiParameter2 as parseAbiParameter,\n  parseAbiParameters\n};\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { parseAbiParameter } from 'abitype';\nimport { AbiError } from 'web3-errors';\nimport { isNullish } from 'web3-utils';\nimport { isSimplifiedStructFormat, mapStructNameAndType, mapStructToCoderFormat, } from '../utils.js';\nexport const WORD_SIZE = 32;\nexport function alloc(size = 0) {\n    var _a;\n    if (((_a = globalThis.Buffer) === null || _a === void 0 ? void 0 : _a.alloc) !== undefined) {\n        const buf = globalThis.Buffer.alloc(size);\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    return new Uint8Array(size);\n}\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nexport function allocUnsafe(size = 0) {\n    var _a;\n    if (((_a = globalThis.Buffer) === null || _a === void 0 ? void 0 : _a.allocUnsafe) !== undefined) {\n        const buf = globalThis.Buffer.allocUnsafe(size);\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    return new Uint8Array(size);\n}\nexport function convertExternalAbiParameter(abiParam) {\n    var _a, _b;\n    return Object.assign(Object.assign({}, abiParam), { name: (_a = abiParam.name) !== null && _a !== void 0 ? _a : '', components: (_b = abiParam.components) === null || _b === void 0 ? void 0 : _b.map(c => convertExternalAbiParameter(c)) });\n}\nexport function isAbiParameter(param) {\n    return (!isNullish(param) &&\n        typeof param === 'object' &&\n        !isNullish(param.type) &&\n        typeof param.type === 'string');\n}\nexport function toAbiParams(abi) {\n    return abi.map(input => {\n        var _a;\n        if (isAbiParameter(input)) {\n            return input;\n        }\n        if (typeof input === 'string') {\n            return convertExternalAbiParameter(parseAbiParameter(input.replace(/tuple/, '')));\n        }\n        if (isSimplifiedStructFormat(input)) {\n            const structName = Object.keys(input)[0];\n            const structInfo = mapStructNameAndType(structName);\n            structInfo.name = (_a = structInfo.name) !== null && _a !== void 0 ? _a : '';\n            return Object.assign(Object.assign({}, structInfo), { components: mapStructToCoderFormat(input[structName]) });\n        }\n        throw new AbiError('Invalid abi');\n    });\n}\nexport function extractArrayType(param) {\n    const arrayParenthesisStart = param.type.lastIndexOf('[');\n    const arrayParamType = param.type.substring(0, arrayParenthesisStart);\n    const sizeString = param.type.substring(arrayParenthesisStart);\n    let size = -1;\n    if (sizeString !== '[]') {\n        size = Number(sizeString.slice(1, -1));\n        // eslint-disable-next-line no-restricted-globals\n        if (isNaN(size)) {\n            throw new AbiError('Invalid fixed array size', { size: sizeString });\n        }\n    }\n    return {\n        param: { type: arrayParamType, name: '', components: param.components },\n        size,\n    };\n}\n/**\n * Param is dynamic if it's dynamic base type or if some of his children (components, array items)\n * is of dynamic type\n * @param param\n */\nexport function isDynamic(param) {\n    var _a, _b;\n    if (param.type === 'string' || param.type === 'bytes' || param.type.endsWith('[]'))\n        return true;\n    if (param.type === 'tuple') {\n        return (_b = (_a = param.components) === null || _a === void 0 ? void 0 : _a.some(isDynamic)) !== null && _b !== void 0 ? _b : false;\n    }\n    if (param.type.endsWith(']')) {\n        return isDynamic(extractArrayType(param).param);\n    }\n    return false;\n}\n//# sourceMappingURL=utils.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { toChecksumAddress } from 'web3-utils';\nimport { isAddress, utils } from 'web3-validator';\nimport { alloc, WORD_SIZE } from '../utils.js';\nconst ADDRESS_BYTES_COUNT = 20;\nconst ADDRESS_OFFSET = WORD_SIZE - ADDRESS_BYTES_COUNT;\nexport function encodeAddress(param, input) {\n    if (typeof input !== 'string') {\n        throw new AbiError('address type expects string as input type', {\n            value: input,\n            name: param.name,\n            type: param.type,\n        });\n    }\n    let address = input.toLowerCase();\n    if (!address.startsWith('0x')) {\n        address = `0x${address}`;\n    }\n    if (!isAddress(address)) {\n        throw new AbiError('provided input is not valid address', {\n            value: input,\n            name: param.name,\n            type: param.type,\n        });\n    }\n    // for better performance, we could convert hex to destination bytes directly (encoded var)\n    const addressBytes = utils.hexToUint8Array(address);\n    // expand address to WORD_SIZE\n    const encoded = alloc(WORD_SIZE);\n    encoded.set(addressBytes, ADDRESS_OFFSET);\n    return {\n        dynamic: false,\n        encoded,\n    };\n}\nexport function decodeAddress(_param, bytes) {\n    const addressBytes = bytes.subarray(ADDRESS_OFFSET, WORD_SIZE);\n    if (addressBytes.length !== ADDRESS_BYTES_COUNT) {\n        throw new AbiError('Invalid decoding input, not enough bytes to decode address', { bytes });\n    }\n    const result = utils.uint8ArrayToHexString(addressBytes);\n    // should we check is decoded value is valid address?\n    // if(!isAddress(result)) {\n    //     throw new AbiError(\"encoded data is not valid address\", {\n    //         address: result,\n    //     });\n    // }\n    return {\n        result: toChecksumAddress(result),\n        encoded: bytes.subarray(WORD_SIZE),\n        consumed: WORD_SIZE,\n    };\n}\n//# sourceMappingURL=address.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/*\n * this variable contains the precalculated limits for all the numbers for uint and int types\n */\nexport const numberLimits = new Map();\nlet base = BigInt(256); // 2 ^ 8 = 256\nfor (let i = 8; i <= 256; i += 8) {\n    numberLimits.set(`uint${i}`, {\n        min: BigInt(0),\n        max: base - BigInt(1),\n    });\n    numberLimits.set(`int${i}`, {\n        min: -base / BigInt(2),\n        max: base / BigInt(2) - BigInt(1),\n    });\n    base *= BigInt(256);\n}\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nnumberLimits.set(`int`, numberLimits.get('int256'));\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nnumberLimits.set(`uint`, numberLimits.get('uint256'));\n//# sourceMappingURL=numbersLimits.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { padLeft, toBigInt } from 'web3-utils';\nimport { utils } from 'web3-validator';\nimport { WORD_SIZE } from '../utils.js';\nimport { numberLimits } from './numbersLimits.js';\n// eslint-disable-next-line no-bitwise\nconst mask = BigInt(1) << BigInt(256);\nfunction bigIntToUint8Array(value, byteLength = WORD_SIZE) {\n    let hexValue;\n    if (value < 0) {\n        hexValue = (mask + value).toString(16);\n    }\n    else {\n        hexValue = value.toString(16);\n    }\n    hexValue = padLeft(hexValue, byteLength * 2);\n    return utils.hexToUint8Array(hexValue);\n}\nfunction uint8ArrayToBigInt(value, max) {\n    const hexValue = utils.uint8ArrayToHexString(value);\n    const result = BigInt(hexValue);\n    if (result <= max)\n        return result;\n    return result - mask;\n}\nexport function encodeNumber(param, input) {\n    let value;\n    try {\n        value = toBigInt(input);\n    }\n    catch (e) {\n        throw new AbiError('provided input is not number value', {\n            type: param.type,\n            value: input,\n            name: param.name,\n        });\n    }\n    const limit = numberLimits.get(param.type);\n    if (!limit) {\n        throw new AbiError('provided abi contains invalid number datatype', { type: param.type });\n    }\n    if (value < limit.min) {\n        throw new AbiError('provided input is less then minimum for given type', {\n            type: param.type,\n            value: input,\n            name: param.name,\n            minimum: limit.min.toString(),\n        });\n    }\n    if (value > limit.max) {\n        throw new AbiError('provided input is greater then maximum for given type', {\n            type: param.type,\n            value: input,\n            name: param.name,\n            maximum: limit.max.toString(),\n        });\n    }\n    return {\n        dynamic: false,\n        encoded: bigIntToUint8Array(value),\n    };\n}\nexport function decodeNumber(param, bytes) {\n    if (bytes.length < WORD_SIZE) {\n        throw new AbiError('Not enough bytes left to decode', { param, bytesLeft: bytes.length });\n    }\n    const boolBytes = bytes.subarray(0, WORD_SIZE);\n    const limit = numberLimits.get(param.type);\n    if (!limit) {\n        throw new AbiError('provided abi contains invalid number datatype', { type: param.type });\n    }\n    const numberResult = uint8ArrayToBigInt(boolBytes, limit.max);\n    if (numberResult < limit.min) {\n        throw new AbiError('decoded value is less then minimum for given type', {\n            type: param.type,\n            value: numberResult,\n            name: param.name,\n            minimum: limit.min.toString(),\n        });\n    }\n    if (numberResult > limit.max) {\n        throw new AbiError('decoded value is greater then maximum for given type', {\n            type: param.type,\n            value: numberResult,\n            name: param.name,\n            maximum: limit.max.toString(),\n        });\n    }\n    return {\n        result: numberResult,\n        encoded: bytes.subarray(WORD_SIZE),\n        consumed: WORD_SIZE,\n    };\n}\n//# sourceMappingURL=number.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError, InvalidBooleanError } from 'web3-errors';\nimport { toBool } from 'web3-utils';\nimport { WORD_SIZE } from '../utils.js';\nimport { decodeNumber, encodeNumber } from './number.js';\nexport function encodeBoolean(param, input) {\n    let value;\n    try {\n        value = toBool(input);\n    }\n    catch (e) {\n        if (e instanceof InvalidBooleanError) {\n            throw new AbiError('provided input is not valid boolean value', {\n                type: param.type,\n                value: input,\n                name: param.name,\n            });\n        }\n    }\n    return encodeNumber({ type: 'uint8', name: '' }, Number(value));\n}\nexport function decodeBool(_param, bytes) {\n    const numberResult = decodeNumber({ type: 'uint8', name: '' }, bytes);\n    if (numberResult.result > 1 || numberResult.result < 0) {\n        throw new AbiError('Invalid boolean value encoded', {\n            boolBytes: bytes.subarray(0, WORD_SIZE),\n            numberResult,\n        });\n    }\n    return {\n        result: numberResult.result === BigInt(1),\n        encoded: numberResult.encoded,\n        consumed: WORD_SIZE,\n    };\n}\n//# sourceMappingURL=bool.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { bytesToHex, bytesToUint8Array } from 'web3-utils';\nimport { isBytes } from 'web3-validator';\nimport { alloc, WORD_SIZE } from '../utils.js';\nimport { decodeNumber, encodeNumber } from './number.js';\nconst MAX_STATIC_BYTES_COUNT = 32;\nexport function encodeBytes(param, input) {\n    // hack for odd length hex strings\n    if (typeof input === 'string' && input.length % 2 !== 0) {\n        // eslint-disable-next-line no-param-reassign\n        input += '0';\n    }\n    if (!isBytes(input)) {\n        throw new AbiError('provided input is not valid bytes value', {\n            type: param.type,\n            value: input,\n            name: param.name,\n        });\n    }\n    const bytes = bytesToUint8Array(input);\n    const [, size] = param.type.split('bytes');\n    // fixed size\n    if (size) {\n        if (Number(size) > MAX_STATIC_BYTES_COUNT || Number(size) < 1) {\n            throw new AbiError('invalid bytes type. Static byte type can have between 1 and 32 bytes', {\n                type: param.type,\n            });\n        }\n        if (Number(size) < bytes.length) {\n            throw new AbiError('provided input size is different than type size', {\n                type: param.type,\n                value: input,\n                name: param.name,\n            });\n        }\n        const encoded = alloc(WORD_SIZE);\n        encoded.set(bytes);\n        return {\n            dynamic: false,\n            encoded,\n        };\n    }\n    const partsLength = Math.ceil(bytes.length / WORD_SIZE);\n    // one word for length of data + WORD for each part of actual data\n    const encoded = alloc(WORD_SIZE + partsLength * WORD_SIZE);\n    encoded.set(encodeNumber({ type: 'uint32', name: '' }, bytes.length).encoded);\n    encoded.set(bytes, WORD_SIZE);\n    return {\n        dynamic: true,\n        encoded,\n    };\n}\nexport function decodeBytes(param, bytes) {\n    const [, sizeString] = param.type.split('bytes');\n    let size = Number(sizeString);\n    let remainingBytes = bytes;\n    let partsCount = 1;\n    let consumed = 0;\n    if (!size) {\n        // dynamic bytes\n        const result = decodeNumber({ type: 'uint32', name: '' }, remainingBytes);\n        size = Number(result.result);\n        consumed += result.consumed;\n        remainingBytes = result.encoded;\n        partsCount = Math.ceil(size / WORD_SIZE);\n    }\n    if (size > bytes.length) {\n        throw new AbiError('there is not enough data to decode', {\n            type: param.type,\n            encoded: bytes,\n            size,\n        });\n    }\n    return {\n        result: bytesToHex(remainingBytes.subarray(0, size)),\n        encoded: remainingBytes.subarray(partsCount * WORD_SIZE),\n        consumed: consumed + partsCount * WORD_SIZE,\n    };\n}\n//# sourceMappingURL=bytes.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { hexToUtf8, utf8ToBytes } from 'web3-utils';\nimport { decodeBytes, encodeBytes } from './bytes.js';\nexport function encodeString(_param, input) {\n    if (typeof input !== 'string') {\n        throw new AbiError('invalid input, should be string', { input });\n    }\n    const bytes = utf8ToBytes(input);\n    return encodeBytes({ type: 'bytes', name: '' }, bytes);\n}\nexport function decodeString(_param, bytes) {\n    const r = decodeBytes({ type: 'bytes', name: '' }, bytes);\n    return {\n        result: hexToUtf8(r.result),\n        encoded: r.encoded,\n        consumed: r.consumed,\n    };\n}\n//# sourceMappingURL=string.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { uint8ArrayConcat } from 'web3-utils';\nimport { WORD_SIZE } from '../utils.js';\nimport { encodeNumber } from './number.js';\nexport function encodeDynamicParams(encodedParams) {\n    let staticSize = 0;\n    let dynamicSize = 0;\n    const staticParams = [];\n    const dynamicParams = [];\n    // figure out static size\n    for (const encodedParam of encodedParams) {\n        if (encodedParam.dynamic) {\n            staticSize += WORD_SIZE;\n        }\n        else {\n            staticSize += encodedParam.encoded.length;\n        }\n    }\n    for (const encodedParam of encodedParams) {\n        if (encodedParam.dynamic) {\n            staticParams.push(encodeNumber({ type: 'uint256', name: '' }, staticSize + dynamicSize));\n            dynamicParams.push(encodedParam);\n            dynamicSize += encodedParam.encoded.length;\n        }\n        else {\n            staticParams.push(encodedParam);\n        }\n    }\n    return uint8ArrayConcat(...staticParams.map(p => p.encoded), ...dynamicParams.map(p => p.encoded));\n}\n//# sourceMappingURL=utils.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { uint8ArrayConcat } from 'web3-utils';\n// eslint-disable-next-line import/no-cycle\nimport { decodeParamFromAbiParameter, encodeNumber, encodeParamFromAbiParameter } from './index.js';\nimport { extractArrayType, isDynamic, WORD_SIZE } from '../utils.js';\nimport { decodeNumber } from './number.js';\nimport { encodeDynamicParams } from './utils.js';\nexport function encodeArray(param, values) {\n    if (!Array.isArray(values)) {\n        throw new AbiError('Expected value to be array', { abi: param, values });\n    }\n    const { size, param: arrayItemParam } = extractArrayType(param);\n    const encodedParams = values.map(v => encodeParamFromAbiParameter(arrayItemParam, v));\n    const dynamic = size === -1;\n    const dynamicItems = encodedParams.length > 0 && encodedParams[0].dynamic;\n    if (!dynamic && values.length !== size) {\n        throw new AbiError(\"Given arguments count doesn't match array length\", {\n            arrayLength: size,\n            argumentsLength: values.length,\n        });\n    }\n    if (dynamic || dynamicItems) {\n        const encodingResult = encodeDynamicParams(encodedParams);\n        if (dynamic) {\n            const encodedLength = encodeNumber({ type: 'uint256', name: '' }, encodedParams.length).encoded;\n            return {\n                dynamic: true,\n                encoded: encodedParams.length > 0\n                    ? uint8ArrayConcat(encodedLength, encodingResult)\n                    : encodedLength,\n            };\n        }\n        return {\n            dynamic: true,\n            encoded: encodingResult,\n        };\n    }\n    return {\n        dynamic: false,\n        encoded: uint8ArrayConcat(...encodedParams.map(p => p.encoded)),\n    };\n}\nexport function decodeArray(param, bytes) {\n    // eslint-disable-next-line prefer-const\n    let { size, param: arrayItemParam } = extractArrayType(param);\n    const dynamic = size === -1;\n    let consumed = 0;\n    const result = [];\n    let remaining = bytes;\n    // dynamic array, we need to decode length\n    if (dynamic) {\n        const lengthResult = decodeNumber({ type: 'uint32', name: '' }, bytes);\n        size = Number(lengthResult.result);\n        consumed = lengthResult.consumed;\n        remaining = lengthResult.encoded;\n    }\n    const hasDynamicChild = isDynamic(arrayItemParam);\n    if (hasDynamicChild) {\n        // known length but dynamic child, each child is actually head element with encoded offset\n        for (let i = 0; i < size; i += 1) {\n            const offsetResult = decodeNumber({ type: 'uint32', name: '' }, remaining.subarray(i * WORD_SIZE));\n            consumed += offsetResult.consumed;\n            const decodedChildResult = decodeParamFromAbiParameter(arrayItemParam, remaining.subarray(Number(offsetResult.result)));\n            consumed += decodedChildResult.consumed;\n            result.push(decodedChildResult.result);\n        }\n        return {\n            result,\n            encoded: remaining.subarray(consumed),\n            consumed,\n        };\n    }\n    for (let i = 0; i < size; i += 1) {\n        // decode static params\n        const decodedChildResult = decodeParamFromAbiParameter(arrayItemParam, bytes.subarray(consumed));\n        consumed += decodedChildResult.consumed;\n        result.push(decodedChildResult.result);\n    }\n    return {\n        result,\n        encoded: bytes.subarray(consumed),\n        consumed,\n    };\n}\n//# sourceMappingURL=array.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { decodeAddress, encodeAddress } from './address.js';\nimport { decodeBool, encodeBoolean } from './bool.js';\nimport { decodeBytes, encodeBytes } from './bytes.js';\nimport { decodeNumber, encodeNumber } from './number.js';\nimport { decodeString, encodeString } from './string.js';\n// eslint-disable-next-line import/no-cycle\nimport { decodeTuple, encodeTuple } from './tuple.js';\n// eslint-disable-next-line import/no-cycle\nimport { decodeArray, encodeArray } from './array.js';\nexport { encodeAddress, decodeAddress } from './address.js';\nexport { encodeBoolean, decodeBool } from './bool.js';\nexport { encodeBytes, decodeBytes } from './bytes.js';\nexport { encodeNumber, decodeNumber } from './number.js';\nexport { encodeString, decodeString } from './string.js';\n// eslint-disable-next-line import/no-cycle\nexport { encodeTuple, decodeTuple } from './tuple.js';\n// eslint-disable-next-line import/no-cycle\nexport { encodeArray, decodeArray } from './array.js';\nexport function encodeParamFromAbiParameter(param, value) {\n    if (param.type === 'string') {\n        return encodeString(param, value);\n    }\n    if (param.type === 'bool') {\n        return encodeBoolean(param, value);\n    }\n    if (param.type === 'address') {\n        return encodeAddress(param, value);\n    }\n    if (param.type === 'tuple') {\n        return encodeTuple(param, value);\n    }\n    if (param.type.endsWith(']')) {\n        return encodeArray(param, value);\n    }\n    if (param.type.startsWith('bytes')) {\n        return encodeBytes(param, value);\n    }\n    if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n        return encodeNumber(param, value);\n    }\n    throw new AbiError('Unsupported', {\n        param,\n        value,\n    });\n}\nexport function decodeParamFromAbiParameter(param, bytes) {\n    if (param.type === 'string') {\n        return decodeString(param, bytes);\n    }\n    if (param.type === 'bool') {\n        return decodeBool(param, bytes);\n    }\n    if (param.type === 'address') {\n        return decodeAddress(param, bytes);\n    }\n    if (param.type === 'tuple') {\n        return decodeTuple(param, bytes);\n    }\n    if (param.type.endsWith(']')) {\n        return decodeArray(param, bytes);\n    }\n    if (param.type.startsWith('bytes')) {\n        return decodeBytes(param, bytes);\n    }\n    if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n        return decodeNumber(param, bytes);\n    }\n    throw new AbiError('Unsupported', {\n        param,\n        bytes,\n    });\n}\n//# sourceMappingURL=index.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { uint8ArrayConcat } from 'web3-utils';\n// eslint-disable-next-line import/no-cycle\nimport { decodeParamFromAbiParameter, encodeParamFromAbiParameter } from './index.js';\nimport { encodeDynamicParams } from './utils.js';\nimport { isDynamic } from '../utils.js';\nimport { decodeNumber } from './number.js';\nexport function encodeTuple(param, input) {\n    var _a, _b, _c;\n    let dynamic = false;\n    if (!Array.isArray(input) && typeof input !== 'object') {\n        throw new AbiError('param must be either Array or Object', {\n            param,\n            input,\n        });\n    }\n    const narrowedInput = input;\n    const encoded = [];\n    for (let i = 0; i < ((_b = (_a = param.components) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0); i += 1) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const paramComponent = param.components[i];\n        let result;\n        if (Array.isArray(narrowedInput)) {\n            if (i >= narrowedInput.length) {\n                throw new AbiError('input param length missmatch', {\n                    param,\n                    input,\n                });\n            }\n            result = encodeParamFromAbiParameter(paramComponent, narrowedInput[i]);\n        }\n        else {\n            const paramInput = narrowedInput[(_c = paramComponent.name) !== null && _c !== void 0 ? _c : ''];\n            // eslint-disable-next-line no-null/no-null\n            if (paramInput === undefined || paramInput === null) {\n                throw new AbiError('missing input defined in abi', {\n                    param,\n                    input,\n                    paramName: paramComponent.name,\n                });\n            }\n            result = encodeParamFromAbiParameter(paramComponent, paramInput);\n        }\n        if (result.dynamic) {\n            dynamic = true;\n        }\n        encoded.push(result);\n    }\n    if (dynamic) {\n        return {\n            dynamic: true,\n            encoded: encodeDynamicParams(encoded),\n        };\n    }\n    return {\n        dynamic: false,\n        encoded: uint8ArrayConcat(...encoded.map(e => e.encoded)),\n    };\n}\nexport function decodeTuple(param, bytes) {\n    const result = {\n        __length__: 0,\n    };\n    // tracks how much static params consumed bytes\n    let consumed = 0;\n    if (!param.components) {\n        return {\n            result,\n            encoded: bytes,\n            consumed,\n        };\n    }\n    // track how much dynamic params consumed bytes\n    let dynamicConsumed = 0;\n    for (const [index, childParam] of param.components.entries()) {\n        let decodedResult;\n        if (isDynamic(childParam)) {\n            // if dynamic, we will have offset encoded\n            const offsetResult = decodeNumber({ type: 'uint32', name: '' }, bytes.subarray(consumed));\n            // offset counts from start of original byte sequence\n            decodedResult = decodeParamFromAbiParameter(childParam, bytes.subarray(Number(offsetResult.result)));\n            consumed += offsetResult.consumed;\n            dynamicConsumed += decodedResult.consumed;\n        }\n        else {\n            // static param, just decode\n            decodedResult = decodeParamFromAbiParameter(childParam, bytes.subarray(consumed));\n            consumed += decodedResult.consumed;\n        }\n        result.__length__ += 1;\n        result[index] = decodedResult.result;\n        if (childParam.name && childParam.name !== '') {\n            result[childParam.name] = decodedResult.result;\n        }\n    }\n    return {\n        encoded: bytes.subarray(consumed + dynamicConsumed),\n        result,\n        consumed: consumed + dynamicConsumed,\n    };\n}\n//# sourceMappingURL=tuple.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { utils } from 'web3-validator';\nimport { decodeTuple } from './base/tuple.js';\nimport { toAbiParams } from './utils.js';\nexport function decodeParameters(abis, bytes, _loose) {\n    const abiParams = toAbiParams(abis);\n    const bytesArray = utils.hexToUint8Array(bytes);\n    return decodeTuple({ type: 'tuple', name: '', components: abiParams }, bytesArray).result;\n}\n//# sourceMappingURL=decode.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { toHex } from 'web3-utils';\nimport { utils } from 'web3-validator';\nimport { encodeTuple } from './base/index.js';\nimport { toAbiParams } from './utils.js';\n/**\n * @param params - The params to infer the ABI from\n * @returns The inferred ABI\n * @example\n * ```\n * inferParamsAbi([1, -1, 'hello', '0x1234', ])\n * ```\n * > [{ type: 'int256' }, { type: 'uint256' }, { type: 'string' }, { type: 'bytes' }]\n * ```\n */\nfunction inferParamsAbi(params) {\n    const abi = [];\n    params.forEach(param => {\n        if (Array.isArray(param)) {\n            const inferredParams = inferParamsAbi(param);\n            abi.push({\n                type: 'tuple',\n                components: inferredParams,\n                name: '',\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            });\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            abi.push({ type: toHex(param, true) });\n        }\n    });\n    return abi;\n}\n/**\n * Encodes a parameter based on its type to its ABI representation.\n * @param abi - An array of {@link AbiInput}. See [Solidity's documentation](https://solidity.readthedocs.io/en/v0.5.3/abi-spec.html#json) for more details.\n * @param params - The actual parameters to encode.\n * @returns - The ABI encoded parameters\n * @example\n * ```ts\n * const res = web3.eth.abi.encodeParameters(\n *    [\"uint256\", \"string\"],\n *    [\"2345675643\", \"Hello!%\"]\n *  );\n *\n *  console.log(res);\n *  > 0x000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000\n * ```\n */\nexport function encodeParameters(abi, params) {\n    if ((abi === null || abi === void 0 ? void 0 : abi.length) !== params.length) {\n        throw new AbiError('Invalid number of values received for given ABI', {\n            expected: abi === null || abi === void 0 ? void 0 : abi.length,\n            received: params.length,\n        });\n    }\n    const abiParams = toAbiParams(abi);\n    return utils.uint8ArrayToHexString(encodeTuple({ type: 'tuple', name: '', components: abiParams }, params).encoded);\n}\n/**\n * Infer a smart contract method parameter type and then encode this parameter.\n * @param params - The parameters to encode.\n * @returns - The ABI encoded parameters\n *\n * @remarks\n * This method is useful when you don't know the type of the parameters you want to encode. It will infer the type of the parameters and then encode them.\n * However, it is not recommended to use this method when you know the type of the parameters you want to encode. In this case, use the {@link encodeParameters} method instead.\n * The type inference is not perfect and can lead to unexpected results. Especially when you want to encode an array, uint that is not uint256 or bytes....\n * @example\n * ```ts\n * const res = web3.eth.abi.encodeParameters(\n *    [\"2345675643\", \"Hello!%\"]\n *  );\n *\n *  console.log(res);\n *  > 0x000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000\n * ```\n */\nexport function inferTypesAndEncodeParameters(params) {\n    try {\n        const abiParams = inferParamsAbi(params);\n        return utils.uint8ArrayToHexString(encodeTuple({ type: 'tuple', name: '', components: abiParams }, params).encoded);\n    }\n    catch (e) {\n        // throws If the inferred params type caused an error\n        throw new AbiError('Could not infer types from given params', {\n            params,\n        });\n    }\n}\n//# sourceMappingURL=encode.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n *\n *  @module ABI\n */\nimport { AbiError } from 'web3-errors';\nimport { decodeParameters as decodeParametersInternal } from '../coders/decode.js';\nimport { encodeParameters } from '../coders/encode.js';\nexport { encodeParameters, inferTypesAndEncodeParameters } from '../coders/encode.js';\n/**\n * Encodes a parameter based on its type to its ABI representation.\n * @param abi -  The type of the parameter. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param param - The actual parameter to encode.\n * @returns -  The ABI encoded parameter\n * @example\n * ```ts\n *  const res = web3.eth.abi.encodeParameter(\"uint256\", \"2345675643\");\n *  console.log(res);\n *  0x000000000000000000000000000000000000000000000000000000008bd02b7b\n *\n *  const res = web3.eth.abi.encodeParameter(\"uint\", \"2345675643\");\n *\n *  console.log(res);\n *  >0x000000000000000000000000000000000000000000000000000000008bd02b7b\n *\n *    const res = web3.eth.abi.encodeParameter(\"bytes32\", \"0xdf3234\");\n *\n *  console.log(res);\n *  >0xdf32340000000000000000000000000000000000000000000000000000000000\n *\n *   const res = web3.eth.abi.encodeParameter(\"bytes\", \"0xdf3234\");\n *\n *  console.log(res);\n *  > 0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003df32340000000000000000000000000000000000000000000000000000000000\n *\n *   const res = web3.eth.abi.encodeParameter(\"bytes32[]\", [\"0xdf3234\", \"0xfdfd\"]);\n *\n *  console.log(res);\n *  > 0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002df32340000000000000000000000000000000000000000000000000000000000fdfd000000000000000000000000000000000000000000000000000000000000\n *\n *  const res = web3.eth.abi.encodeParameter(\n *    {\n *      ParentStruct: {\n *        propertyOne: \"uint256\",\n *        propertyTwo: \"uint256\",\n *        childStruct: {\n *          propertyOne: \"uint256\",\n *          propertyTwo: \"uint256\",\n *        },\n *      },\n *    },\n *    {\n *      propertyOne: 42,\n *      propertyTwo: 56,\n *      childStruct: {\n *        propertyOne: 45,\n *        propertyTwo: 78,\n *      },\n *    }\n *  );\n *\n *  console.log(res);\n *  > 0x000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e\n * ```\n */\nexport const encodeParameter = (abi, param) => encodeParameters([abi], [param]);\n/**\n * Should be used to decode list of params\n */\nexport const decodeParametersWith = (abis, bytes, loose) => {\n    try {\n        if (abis.length > 0 && (!bytes || bytes === '0x' || bytes === '0X')) {\n            throw new AbiError(\"Returned values aren't valid, did it run Out of Gas? \" +\n                'You might also see this error if you are not using the ' +\n                'correct ABI for the contract you are retrieving data from, ' +\n                'requesting data from a block number that does not exist, ' +\n                'or querying a node which is not fully synced.');\n        }\n        return decodeParametersInternal(abis, `0x${bytes.replace(/0x/i, '')}`, loose);\n    }\n    catch (err) {\n        throw new AbiError(`Parameter decoding error: ${err.message}`, {\n            internalErr: err,\n        });\n    }\n};\n/**\n * Should be used to decode list of params\n */\n/**\n * Decodes ABI encoded parameters to its JavaScript types.\n * @param abi -  An array of {@link AbiInput}. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param bytes - The ABI byte code to decode\n * @returns - The result object containing the decoded parameters.\n * @example\n * ```ts\n * let res = web3.eth.abi.decodeParameters(\n *    [\"string\", \"uint256\"],\n *    \"0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ea000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000\"\n *  );\n *  console.log(res);\n *  > { '0': 'Hello!%!', '1': 234n, __length__: 2 }\n *\n * let res = web3.eth.abi.decodeParameters(\n *    [\n *      {\n *        type: \"string\",\n *        name: \"myString\",\n *      },\n *      {\n *        type: \"uint256\",\n *        name: \"myNumber\",\n *      },\n *    ],\n *    \"0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ea000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000\"\n *  );\n * console.log(res);\n *  > {\n *  '0': 'Hello!%!',\n *  '1': 234n,\n *  __length__: 2,\n *  myString: 'Hello!%!',\n *  myNumber: 234n\n * }\n *\n * const res = web3.eth.abi.decodeParameters(\n *    [\n *      \"uint8[]\",\n *      {\n *        ParentStruct: {\n *          propertyOne: \"uint256\",\n *          propertyTwo: \"uint256\",\n *          childStruct: {\n *            propertyOne: \"uint256\",\n *            propertyTwo: \"uint256\",\n *          },\n *        },\n *      },\n *    ],\n *    \"0x00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000018\"\n *  );\n *  console.log(res);\n *  >\n *  '0': [ 42n, 24n ],\n *  '1': {\n *    '0': 42n,\n *    '1': 56n,\n *    '2': {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    },\n *    __length__: 3,\n *    propertyOne: 42n,\n *    propertyTwo: 56n,\n *    childStruct: {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    }\n *  },\n *  __length__: 2,\n *  ParentStruct: {\n *    '0': 42n,\n *    '1': 56n,\n *    '2': {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    },\n *    __length__: 3,\n *    propertyOne: 42n,\n *    propertyTwo: 56n,\n *    childStruct: {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    }\n *  }\n *}\n * ```\n */\nexport const decodeParameters = (abi, bytes) => decodeParametersWith(abi, bytes, false);\n/**\n * Should be used to decode bytes to plain param\n */\n/**\n * Decodes an ABI encoded parameter to its JavaScript type.\n * @param abi -  The type of the parameter. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param bytes - The ABI byte code to decode\n * @returns - The decoded parameter\n * @example\n * ```ts\n *   const res = web3.eth.abi.decodeParameter(\n *    \"uint256\",\n *    \"0x0000000000000000000000000000000000000000000000000000000000000010\"\n *  );\n *  console.log(res);\n * > 16n\n *\n *  const res = web3.eth.abi.decodeParameter(\n *    \"string\",\n *    \"0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000\"\n *  );\n *\n *  console.log(res);\n *  > Hello!%!\n *\n *  const res = web3.eth.abi.decodeParameter(\n *    {\n *      ParentStruct: {\n *        propertyOne: \"uint256\",\n *        propertyTwo: \"uint256\",\n *        childStruct: {\n *          propertyOne: \"uint256\",\n *          propertyTwo: \"uint256\",\n *        },\n *      },\n *    },\n *    \"0x000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e\"\n *  );\n *\n *  console.log(res);\n *   {\n *  '0': 42n,\n *  '1': 56n,\n *  '2': {\n *    '0': 45n,\n *    '1': 78n,\n *    __length__: 2,\n *    propertyOne: 45n,\n *    propertyTwo: 78n\n *  },\n *  __length__: 3,\n *  propertyOne: 42n,\n *  propertyTwo: 56n,\n *  childStruct: {\n *    '0': 45n,\n *    '1': 78n,\n *    __length__: 2,\n *    propertyOne: 45n,\n *    propertyTwo: 78n\n *  }\n *}\n * ```\n */\nexport const decodeParameter = (abi, bytes) => decodeParameters([abi], bytes)['0'];\n//# sourceMappingURL=parameters_api.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n *\n *  @module ABI\n */\nimport { AbiError, Web3ContractError } from 'web3-errors';\nimport { sha3Raw } from 'web3-utils';\nimport { isAbiFunctionFragment, jsonInterfaceMethodToString } from '../utils.js';\nimport { decodeParameters, encodeParameters } from './parameters_api.js';\n/**\n * Encodes the function name to its ABI representation, which are the first 4 bytes of the sha3 of the function name including  types.\n * The JSON interface spec documentation https://docs.soliditylang.org/en/latest/abi-spec.html#json\n * @param functionName - The function name to encode or the `JSON interface` object of the function.\n * If the passed parameter is a string, it has to be in the form of `functionName(param1Type,param2Type,...)`. eg: myFunction(uint256,uint32[],bytes10,bytes)\n * @returns - The ABI signature of the function.\n * @example\n * ```ts\n * const signature = web3.eth.abi.encodeFunctionSignature({\n *   name: \"myMethod\",\n *   type: \"function\",\n *   inputs: [\n *     {\n *       type: \"uint256\",\n *       name: \"myNumber\",\n *     },\n *     {\n *       type: \"string\",\n *       name: \"myString\",\n *     },\n *   ],\n * });\n * console.log(signature);\n * > 0x24ee0097\n *\n * const signature = web3.eth.abi.encodeFunctionSignature('myMethod(uint256,string)')\n * console.log(signature);\n * > 0x24ee0097\n *\n * const signature = web3.eth.abi.encodeFunctionSignature('safeTransferFrom(address,address,uint256,bytes)');\n * console.log(signature);\n * > 0xb88d4fde\n * ```\n */\nexport const encodeFunctionSignature = (functionName) => {\n    if (typeof functionName !== 'string' && !isAbiFunctionFragment(functionName)) {\n        throw new AbiError('Invalid parameter value in encodeFunctionSignature');\n    }\n    let name;\n    if (functionName && (typeof functionName === 'function' || typeof functionName === 'object')) {\n        name = jsonInterfaceMethodToString(functionName);\n    }\n    else {\n        name = functionName;\n    }\n    return sha3Raw(name).slice(0, 10);\n};\n/**\n * Encodes a function call using its `JSON interface` object and given parameters.\n * The JSON interface spec documentation https://docs.soliditylang.org/en/latest/abi-spec.html#json\n * @param jsonInterface - The `JSON interface` object of the function.\n * @param params - The parameters to encode\n * @returns - The ABI encoded function call, which, means the function signature and the parameters passed.\n * @example\n * ```ts\n * const sig = web3.eth.abi.encodeFunctionCall(\n *   {\n *     name: \"myMethod\",\n *     type: \"function\",\n *     inputs: [\n *       {\n *         type: \"uint256\",\n *         name: \"myNumber\",\n *       },\n *       {\n *         type: \"string\",\n *         name: \"myString\",\n *       },\n *     ],\n *   },\n *   [\"2345675643\", \"Hello!%\"]\n * );\n * console.log(sig);\n * > 0x24ee0097000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000\n *\n *\n *\n * const sig = web3.eth.abi.encodeFunctionCall(\n *   {\n *     inputs: [\n *       {\n *         name: \"account\",\n *         type: \"address\",\n *       },\n *     ],\n *     name: \"balanceOf\",\n *     outputs: [\n *       {\n *         name: \"\",\n *         type: \"uint256\",\n *       },\n *     ],\n *     stateMutability: \"view\",\n *     type: \"function\",\n *   },\n *   [\"0x1234567890123456789012345678901234567890\"]\n * );\n *\n * console.log(sig);\n * > 0x70a082310000000000000000000000001234567890123456789012345678901234567890\n * ```\n */\nexport const encodeFunctionCall = (jsonInterface, params) => {\n    var _a;\n    if (!isAbiFunctionFragment(jsonInterface)) {\n        throw new AbiError('Invalid parameter value in encodeFunctionCall');\n    }\n    return `${encodeFunctionSignature(jsonInterface)}${encodeParameters((_a = jsonInterface.inputs) !== null && _a !== void 0 ? _a : [], params !== null && params !== void 0 ? params : []).replace('0x', '')}`;\n};\n/**\n * Decodes a function call data using its `JSON interface` object.\n * The JSON interface spec documentation https://docs.soliditylang.org/en/latest/abi-spec.html#json\n * @param functionsAbi - The `JSON interface` object of the function.\n * @param data - The data to decode\n * @param methodSignatureProvided - (Optional) if `false` do not remove the first 4 bytes that would rather contain the function signature.\n * @returns - The data decoded according to the passed ABI.\n * @example\n * ```ts\n * const data =\n * \t'0xa413686200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000548656c6c6f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010416e6f74686572204772656574696e6700000000000000000000000000000000';\n * const params = decodeFunctionCall(\n * \t{\n * \t\tinputs: [\n * \t\t\t{ internalType: 'string', name: '_greeting', type: 'string' },\n * \t\t\t{ internalType: 'string', name: '_second_greeting', type: 'string' },\n * \t\t],\n * \t\tname: 'setGreeting',\n * \t\toutputs: [\n * \t\t\t{ internalType: 'bool', name: '', type: 'bool' },\n * \t\t\t{ internalType: 'string', name: '', type: 'string' },\n * \t\t],\n * \t\tstateMutability: 'nonpayable',\n * \t\ttype: 'function',\n * \t},\n * \tdata,\n * );\n\n * console.log(params);\n * > {\n * > \t'0': 'Hello',\n * > \t'1': 'Another Greeting',\n * > \t__length__: 2,\n * > \t__method__: 'setGreeting(string,string)',\n * > \t_greeting: 'Hello',\n * > \t_second_greeting: 'Another Greeting',\n * > }\n * ```\n */\nexport const decodeFunctionCall = (functionsAbi, data, methodSignatureProvided = true) => {\n    const value = methodSignatureProvided && data && data.length >= 10 && data.startsWith('0x')\n        ? data.slice(10)\n        : data;\n    if (!functionsAbi.inputs) {\n        throw new Web3ContractError('No inputs found in the ABI');\n    }\n    const result = decodeParameters([...functionsAbi.inputs], value);\n    return Object.assign(Object.assign({}, result), { __method__: jsonInterfaceMethodToString(functionsAbi) });\n};\n/**\n * Decodes a function call data using its `JSON interface` object.\n * The JSON interface spec documentation https://docs.soliditylang.org/en/latest/abi-spec.html#json\n * @returns - The ABI encoded function call, which, means the function signature and the parameters passed.\n * @param functionsAbi - The `JSON interface` object of the function.\n * @param returnValues - The data (the function-returned-values) to decoded\n * @returns - The function-returned-values decoded according to the passed ABI. If there are multiple values, it returns them as an object as the example below. But if it is a single value, it returns it only for simplicity.\n * @example\n * ```ts\n * // decode a multi-value data of a method\n * const data =\n * \t'0x00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000548656c6c6f000000000000000000000000000000000000000000000000000000';\n * const decodedResult = decodeFunctionReturn(\n * \t{\n * \t\tinputs: [\n * \t\t\t{ internalType: 'string', name: '_greeting', type: 'string' }\n * \t\t],\n * \t\tname: 'setGreeting',\n * \t\toutputs: [\n * \t\t\t{ internalType: 'string', name: '', type: 'string' },\n * \t\t\t{ internalType: 'bool', name: '', type: 'bool' },\n * \t\t],\n * \t\tstateMutability: 'nonpayable',\n * \t\ttype: 'function',\n * \t},\n * \tdata,\n * );\n\n * console.log(decodedResult);\n * > { '0': 'Hello', '1': true, __length__: 2 }\n *\n *\n * // decode a single-value data of a method\n * const data =\n * \t'0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000548656c6c6f000000000000000000000000000000000000000000000000000000';\n * const decodedResult = decodeFunctionReturn(\n * \t{\n * \t\tinputs: [\n * \t\t\t{ internalType: 'string', name: '_greeting', type: 'string' }\n * \t\t],\n * \t\tname: 'setGreeting',\n * \t\toutputs: [{ internalType: 'string', name: '', type: 'string' }],\n * \t\tstateMutability: 'nonpayable',\n * \t\ttype: 'function',\n * \t},\n * \tdata,\n * );\n\n * console.log(decodedResult);\n * > 'Hello'\n * ```\n */\nexport const decodeFunctionReturn = (functionsAbi, returnValues) => {\n    // If it is a constructor there is nothing to decode!\n    if (functionsAbi.type === 'constructor') {\n        return returnValues;\n    }\n    if (!returnValues) {\n        // Using \"null\" value intentionally to match legacy behavior\n        // eslint-disable-next-line no-null/no-null\n        return null;\n    }\n    const value = returnValues.length >= 2 ? returnValues.slice(2) : returnValues;\n    if (!functionsAbi.outputs) {\n        // eslint-disable-next-line no-null/no-null\n        return null;\n    }\n    const result = decodeParameters([...functionsAbi.outputs], value);\n    if (result.__length__ === 1) {\n        return result[0];\n    }\n    return result;\n};\n//# sourceMappingURL=functions_api.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { decodeParameter, decodeParametersWith } from './parameters_api.js';\nconst STATIC_TYPES = ['bool', 'string', 'int', 'uint', 'address', 'fixed', 'ufixed'];\nconst _decodeParameter = (inputType, clonedTopic) => inputType === 'string' ? clonedTopic : decodeParameter(inputType, clonedTopic);\n/**\n * Decodes ABI-encoded log data and indexed topic data.\n * @param inputs - A {@link AbiParameter} input array. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param data - The ABI byte code in the `data` field of a log.\n * @param topics - An array with the index parameter topics of the log, without the topic[0] if its a non-anonymous event, otherwise with topic[0]\n * @returns - The result object containing the decoded parameters.\n *\n * @example\n * ```ts\n * let res = web3.eth.abi.decodeLog(\n *    [\n *      {\n *        type: \"string\",\n *        name: \"myString\",\n *      },\n *      {\n *        type: \"uint256\",\n *        name: \"myNumber\",\n *        indexed: true,\n *      },\n *      {\n *        type: \"uint8\",\n *        name: \"mySmallNumber\",\n *        indexed: true,\n *      },\n *    ],\n *    \"0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000748656c6c6f252100000000000000000000000000000000000000000000000000\",\n *    [\n *      \"0x000000000000000000000000000000000000000000000000000000000000f310\",\n *      \"0x0000000000000000000000000000000000000000000000000000000000000010\",\n *    ]\n *  );\n * > {\n *  '0': 'Hello%!',\n *  '1': 62224n,\n *  '2': 16n,\n *  __length__: 3,\n *  myString: 'Hello%!',\n *  myNumber: 62224n,\n *  mySmallNumber: 16n\n * }\n * ```\n */\nexport const decodeLog = (inputs, data, topics) => {\n    const clonedTopics = Array.isArray(topics) ? topics : [topics];\n    const indexedInputs = {};\n    const nonIndexedInputs = {};\n    for (const [i, input] of inputs.entries()) {\n        if (input.indexed) {\n            indexedInputs[i] = input;\n        }\n        else {\n            nonIndexedInputs[i] = input;\n        }\n    }\n    const decodedNonIndexedInputs = data\n        ? decodeParametersWith(Object.values(nonIndexedInputs), data, true)\n        : { __length__: 0 };\n    // If topics are more than indexed inputs, that means first topic is the event signature\n    const offset = clonedTopics.length - Object.keys(indexedInputs).length;\n    const decodedIndexedInputs = Object.values(indexedInputs).map((input, index) => STATIC_TYPES.some(s => input.type.startsWith(s))\n        ? _decodeParameter(input.type, clonedTopics[index + offset])\n        : clonedTopics[index + offset]);\n    const returnValues = { __length__: 0 };\n    let indexedCounter = 0;\n    let nonIndexedCounter = 0;\n    for (const [i, res] of inputs.entries()) {\n        returnValues[i] = res.type === 'string' ? '' : undefined;\n        if (indexedInputs[i]) {\n            returnValues[i] = decodedIndexedInputs[indexedCounter];\n            indexedCounter += 1;\n        }\n        if (nonIndexedInputs[i]) {\n            returnValues[i] = decodedNonIndexedInputs[String(nonIndexedCounter)];\n            nonIndexedCounter += 1;\n        }\n        if (res.name) {\n            returnValues[res.name] = returnValues[i];\n        }\n        returnValues.__length__ += 1;\n    }\n    return returnValues;\n};\n//# sourceMappingURL=logs_api.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { encodeErrorSignature } from './api/errors_api.js';\nimport { decodeParameters } from './api/parameters_api.js';\nimport { jsonInterfaceMethodToString } from './utils.js';\nexport const decodeContractErrorData = (errorsAbi, error) => {\n    if (error === null || error === void 0 ? void 0 : error.data) {\n        let errorName;\n        let errorSignature;\n        let errorArgs;\n        try {\n            const errorSha = error.data.slice(0, 10);\n            const errorAbi = errorsAbi.find(abi => encodeErrorSignature(abi).startsWith(errorSha));\n            if (errorAbi === null || errorAbi === void 0 ? void 0 : errorAbi.inputs) {\n                errorName = errorAbi.name;\n                errorSignature = jsonInterfaceMethodToString(errorAbi);\n                // decode abi.inputs according to EIP-838\n                errorArgs = decodeParameters([...errorAbi.inputs], error.data.substring(10));\n            }\n            else if (error.data.startsWith('0x08c379a0')) {\n                // If ABI was not provided, check for the 2 famous errors: 'Error(string)' or 'Panic(uint256)'\n                errorName = 'Error';\n                errorSignature = 'Error(string)';\n                // decode abi.inputs according to EIP-838\n                errorArgs = decodeParameters([\n                    {\n                        name: 'message',\n                        type: 'string',\n                    },\n                ], error.data.substring(10));\n            }\n            else if (error.data.startsWith('0x4e487b71')) {\n                errorName = 'Panic';\n                errorSignature = 'Panic(uint256)';\n                // decode abi.inputs according to EIP-838\n                errorArgs = decodeParameters([\n                    {\n                        name: 'code',\n                        type: 'uint256',\n                    },\n                ], error.data.substring(10));\n            }\n            else {\n                console.error('No matching error abi found for error data', error.data);\n            }\n        }\n        catch (err) {\n            console.error(err);\n        }\n        if (errorName) {\n            error.setDecodedProperties(errorName, errorSignature, errorArgs);\n        }\n    }\n};\n//# sourceMappingURL=decode_contract_error_data.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ContractExecutionError, Eip838ExecutionError, InvalidResponseError, } from 'web3-errors';\nimport { decodeContractErrorData, isAbiErrorFragment } from 'web3-eth-abi';\n// eslint-disable-next-line import/no-cycle\nimport { call } from '../rpc_method_wrappers.js';\nexport const parseTransactionError = (error, contractAbi) => {\n    var _a, _b, _c, _d, _e;\n    if (error instanceof ContractExecutionError && error.cause instanceof Eip838ExecutionError) {\n        if (contractAbi !== undefined) {\n            const errorsAbi = contractAbi.filter(abi => isAbiErrorFragment(abi));\n            decodeContractErrorData(errorsAbi, error.cause);\n            return {\n                reason: error.cause.message,\n                signature: (_a = error.cause.data) === null || _a === void 0 ? void 0 : _a.slice(0, 10),\n                data: (_b = error.cause.data) === null || _b === void 0 ? void 0 : _b.substring(10),\n                customErrorName: error.cause.errorName,\n                customErrorDecodedSignature: error.cause.errorSignature,\n                customErrorArguments: error.cause.errorArgs,\n            };\n        }\n        return {\n            reason: error.cause.message,\n            signature: (_c = error.cause.data) === null || _c === void 0 ? void 0 : _c.slice(0, 10),\n            data: (_d = error.cause.data) === null || _d === void 0 ? void 0 : _d.substring(10),\n        };\n    }\n    if (error instanceof InvalidResponseError &&\n        !Array.isArray((_e = error.cause) === null || _e === void 0 ? void 0 : _e.errors) &&\n        error.cause !== undefined) {\n        return error.cause.message;\n    }\n    throw error;\n};\n/**\n *\tReturns the revert reason generated by the EVM if the transaction were to be executed.\n *\n * @param web3Context - ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n * @param transaction - A transaction object where all properties are optional except `to`, however it's recommended to include the `from` property or it may default to `0x0000000000000000000000000000000000000000` depending on your node or provider.\n * @returns `undefined` if no revert reason was given, a revert reason object, a revert reason string, or an `unknown` error\n */\nexport function getRevertReason(web3Context_1, transaction_1, contractAbi_1) {\n    return __awaiter(this, arguments, void 0, function* (web3Context, transaction, contractAbi, returnFormat = web3Context.defaultReturnFormat) {\n        try {\n            yield call(web3Context, transaction, web3Context.defaultBlock, returnFormat);\n            return undefined;\n        }\n        catch (error) {\n            return parseTransactionError(error, contractAbi);\n        }\n    });\n}\n//# sourceMappingURL=get_revert_reason.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { TransactionRevertedWithoutReasonError, TransactionRevertInstructionError, TransactionRevertWithCustomError, } from 'web3-errors';\n// eslint-disable-next-line import/no-cycle\nimport { getRevertReason, parseTransactionError } from './get_revert_reason.js';\nexport function getTransactionError(web3Context, transactionFormatted, transactionReceiptFormatted, receivedError, contractAbi, knownReason) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let _reason = knownReason;\n        if (_reason === undefined) {\n            if (receivedError !== undefined) {\n                _reason = parseTransactionError(receivedError);\n            }\n            else if (web3Context.handleRevert && transactionFormatted !== undefined) {\n                _reason = yield getRevertReason(web3Context, transactionFormatted, contractAbi);\n            }\n        }\n        let error;\n        if (_reason === undefined) {\n            error = new TransactionRevertedWithoutReasonError(transactionReceiptFormatted);\n        }\n        else if (typeof _reason === 'string') {\n            error = new TransactionRevertInstructionError(_reason, undefined, transactionReceiptFormatted);\n        }\n        else if (_reason.customErrorName !== undefined &&\n            _reason.customErrorDecodedSignature !== undefined &&\n            _reason.customErrorArguments !== undefined) {\n            const reasonWithCustomError = _reason;\n            error = new TransactionRevertWithCustomError(reasonWithCustomError.reason, reasonWithCustomError.customErrorName, reasonWithCustomError.customErrorDecodedSignature, reasonWithCustomError.customErrorArguments, reasonWithCustomError.signature, transactionReceiptFormatted, reasonWithCustomError.data);\n        }\n        else {\n            error = new TransactionRevertInstructionError(_reason.reason, _reason.signature, transactionReceiptFormatted, _reason.data);\n        }\n        return error;\n    });\n}\n//# sourceMappingURL=get_transaction_error.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { format } from 'web3-utils';\nimport { DEFAULT_RETURN_FORMAT, } from 'web3-types';\nimport { decodeLog } from 'web3-eth-abi';\nimport { logSchema } from '../schemas.js';\nimport { ALL_EVENTS } from '../constants.js';\nexport const decodeEventABI = (event, data, jsonInterface, returnFormat = DEFAULT_RETURN_FORMAT) => {\n    var _a, _b, _c, _d, _e, _f;\n    let modifiedEvent = Object.assign({}, event);\n    const result = format(logSchema, data, returnFormat);\n    // if allEvents get the right event\n    if ([ALL_EVENTS, 'allEvents'].includes(modifiedEvent.name)) {\n        const matchedEvent = jsonInterface.find(j => j.signature === data.topics[0]);\n        if (matchedEvent) {\n            modifiedEvent = matchedEvent;\n        }\n        else {\n            modifiedEvent = { anonymous: true };\n        }\n    }\n    // create empty inputs if none are present (e.g. anonymous events on allEvents)\n    modifiedEvent.inputs = (_b = (_a = modifiedEvent.inputs) !== null && _a !== void 0 ? _a : event.inputs) !== null && _b !== void 0 ? _b : [];\n    // Handle case where an event signature shadows the current ABI with non-identical\n    // arg indexing. If # of topics doesn't match, event is anon.\n    if (!modifiedEvent.anonymous) {\n        let indexedInputs = 0;\n        ((_c = modifiedEvent.inputs) !== null && _c !== void 0 ? _c : []).forEach(input => {\n            if (input.indexed) {\n                indexedInputs += 1;\n            }\n        });\n        if (indexedInputs > 0 && (data === null || data === void 0 ? void 0 : data.topics) && (data === null || data === void 0 ? void 0 : data.topics.length) !== indexedInputs + 1) {\n            // checks if event is anonymous\n            modifiedEvent = Object.assign(Object.assign({}, modifiedEvent), { anonymous: true, inputs: [] });\n        }\n    }\n    const argTopics = modifiedEvent.anonymous ? data.topics : ((_d = data.topics) !== null && _d !== void 0 ? _d : []).slice(1);\n    return Object.assign(Object.assign({}, result), { returnValues: decodeLog([...((_e = modifiedEvent.inputs) !== null && _e !== void 0 ? _e : [])], data.data, argTopics), event: modifiedEvent.name, signature: !modifiedEvent.anonymous && ((_f = data.topics) === null || _f === void 0 ? void 0 : _f.length) > 0 && data.topics[0]\n            ? data.topics[0]\n            : undefined, raw: {\n            data: data.data,\n            topics: data.topics,\n        } });\n};\n//# sourceMappingURL=decoding.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { ETH_DATA_FORMAT, } from 'web3-types';\nimport { isNullish } from 'web3-validator';\nimport { ContractExecutionError, InvalidResponseError, TransactionPollingTimeoutError, TransactionRevertedWithoutReasonError, TransactionRevertInstructionError, TransactionRevertWithCustomError, } from 'web3-errors';\nimport { ethRpcMethods } from 'web3-rpc-methods';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionGasPricing } from './get_transaction_gas_pricing.js';\n// eslint-disable-next-line import/no-cycle\nimport { trySendTransaction } from './try_send_transaction.js';\n// eslint-disable-next-line import/no-cycle\nimport { watchTransactionForConfirmations } from './watch_transaction_for_confirmations.js';\nimport { ALL_EVENTS_ABI } from '../constants.js';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionError } from './get_transaction_error.js';\n// eslint-disable-next-line import/no-cycle\nimport { getRevertReason } from './get_revert_reason.js';\nimport { decodeEventABI } from './decoding.js';\nexport class SendTxHelper {\n    constructor({ options, web3Context, promiEvent, returnFormat, }) {\n        this.options = {\n            checkRevertBeforeSending: true,\n        };\n        this.options = options;\n        this.web3Context = web3Context;\n        this.promiEvent = promiEvent;\n        this.returnFormat = returnFormat;\n    }\n    getReceiptWithEvents(data) {\n        var _a, _b;\n        const result = Object.assign({}, (data !== null && data !== void 0 ? data : {}));\n        if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.contractAbi) && result.logs && result.logs.length > 0) {\n            result.events = {};\n            for (const log of result.logs) {\n                const event = decodeEventABI(ALL_EVENTS_ABI, log, (_b = this.options) === null || _b === void 0 ? void 0 : _b.contractAbi, this.returnFormat);\n                if (event.event) {\n                    result.events[event.event] = event;\n                }\n            }\n        }\n        return result;\n    }\n    checkRevertBeforeSending(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.options.checkRevertBeforeSending !== false) {\n                let formatTx = tx;\n                if (isNullish(tx.data) && isNullish(tx.input) && isNullish(tx.gas)) {\n                    // eth.call runs into error if data isnt filled and gas is not defined, its a simple transaction so we fill it with 21000\n                    formatTx = Object.assign(Object.assign({}, tx), { gas: 21000 });\n                }\n                const reason = yield getRevertReason(this.web3Context, formatTx, this.options.contractAbi);\n                if (reason !== undefined) {\n                    throw yield getTransactionError(this.web3Context, tx, undefined, undefined, this.options.contractAbi, reason);\n                }\n            }\n        });\n    }\n    emitSending(tx) {\n        if (this.promiEvent.listenerCount('sending') > 0) {\n            this.promiEvent.emit('sending', tx);\n        }\n    }\n    populateGasPrice(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ transactionFormatted, transaction, }) {\n            var _b;\n            let result = transactionFormatted;\n            if (!this.web3Context.config.ignoreGasPricing &&\n                !((_b = this.options) === null || _b === void 0 ? void 0 : _b.ignoreGasPricing) &&\n                isNullish(transactionFormatted.gasPrice) &&\n                (isNullish(transaction.maxPriorityFeePerGas) ||\n                    isNullish(transaction.maxFeePerGas))) {\n                result = Object.assign(Object.assign({}, transactionFormatted), (yield getTransactionGasPricing(transactionFormatted, this.web3Context, ETH_DATA_FORMAT)));\n            }\n            return result;\n        });\n    }\n    signAndSend(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ wallet, tx, }) {\n            if (wallet) {\n                const signedTransaction = yield wallet.signTransaction(tx);\n                return trySendTransaction(this.web3Context, () => __awaiter(this, void 0, void 0, function* () {\n                    return ethRpcMethods.sendRawTransaction(this.web3Context.requestManager, signedTransaction.rawTransaction);\n                }), signedTransaction.transactionHash);\n            }\n            return trySendTransaction(this.web3Context, () => __awaiter(this, void 0, void 0, function* () {\n                return ethRpcMethods.sendTransaction(this.web3Context.requestManager, tx);\n            }));\n        });\n    }\n    emitSent(tx) {\n        if (this.promiEvent.listenerCount('sent') > 0) {\n            this.promiEvent.emit('sent', tx);\n        }\n    }\n    emitTransactionHash(hash) {\n        if (this.promiEvent.listenerCount('transactionHash') > 0) {\n            this.promiEvent.emit('transactionHash', hash);\n        }\n    }\n    emitReceipt(receipt) {\n        if (this.promiEvent.listenerCount('receipt') > 0) {\n            this.promiEvent.emit('receipt', \n            // @ts-expect-error unknown type fix\n            receipt);\n        }\n    }\n    handleError(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ error, tx }) {\n            var _b;\n            let _error = error;\n            if (_error instanceof ContractExecutionError && this.web3Context.handleRevert) {\n                _error = yield getTransactionError(this.web3Context, tx, undefined, undefined, (_b = this.options) === null || _b === void 0 ? void 0 : _b.contractAbi);\n            }\n            if ((_error instanceof InvalidResponseError ||\n                _error instanceof ContractExecutionError ||\n                _error instanceof TransactionRevertWithCustomError ||\n                _error instanceof TransactionRevertedWithoutReasonError ||\n                _error instanceof TransactionRevertInstructionError ||\n                _error instanceof TransactionPollingTimeoutError) &&\n                this.promiEvent.listenerCount('error') > 0) {\n                this.promiEvent.emit('error', _error);\n            }\n            return _error;\n        });\n    }\n    emitConfirmation({ receipt, transactionHash, customTransactionReceiptSchema, }) {\n        if (this.promiEvent.listenerCount('confirmation') > 0) {\n            watchTransactionForConfirmations(this.web3Context, this.promiEvent, receipt, transactionHash, this.returnFormat, customTransactionReceiptSchema);\n        }\n    }\n    handleResolve(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ receipt, tx }) {\n            var _b, _c, _d;\n            if ((_b = this.options) === null || _b === void 0 ? void 0 : _b.transactionResolver) {\n                return (_c = this.options) === null || _c === void 0 ? void 0 : _c.transactionResolver(receipt);\n            }\n            if (receipt.status === BigInt(0)) {\n                const error = yield getTransactionError(this.web3Context, tx, \n                // @ts-expect-error unknown type fix\n                receipt, undefined, (_d = this.options) === null || _d === void 0 ? void 0 : _d.contractAbi);\n                if (this.promiEvent.listenerCount('error') > 0) {\n                    this.promiEvent.emit('error', error);\n                }\n                throw error;\n            }\n            else {\n                return receipt;\n            }\n        });\n    }\n}\n//# sourceMappingURL=send_tx_helper.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n// Disabling because returnTypes must be last param to match 1.x params\n/* eslint-disable default-param-last */\nimport { ETH_DATA_FORMAT, DEFAULT_RETURN_FORMAT, } from 'web3-types';\nimport { Web3PromiEvent } from 'web3-core';\nimport { format, hexToBytes, bytesToUint8Array, numberToHex } from 'web3-utils';\nimport { TransactionFactory } from 'web3-eth-accounts';\nimport { isBlockTag, isBytes, isNullish, isString } from 'web3-validator';\nimport { SignatureError } from 'web3-errors';\nimport { ethRpcMethods } from 'web3-rpc-methods';\nimport { decodeSignedTransaction } from './utils/decode_signed_transaction.js';\nimport { accountSchema, blockSchema, feeHistorySchema, logSchema, transactionReceiptSchema, accessListResultSchema, SignatureObjectSchema, } from './schemas.js';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionFromOrToAttr } from './utils/transaction_builder.js';\nimport { formatTransaction } from './utils/format_transaction.js';\n// eslint-disable-next-line import/no-cycle\nimport { trySendTransaction } from './utils/try_send_transaction.js';\n// eslint-disable-next-line import/no-cycle\nimport { waitForTransactionReceipt } from './utils/wait_for_transaction_receipt.js';\nimport { NUMBER_DATA_FORMAT } from './constants.js';\n// eslint-disable-next-line import/no-cycle\nimport { SendTxHelper } from './utils/send_tx_helper.js';\n/**\n * View additional documentations here: {@link Web3Eth.getProtocolVersion}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport const getProtocolVersion = (web3Context) => __awaiter(void 0, void 0, void 0, function* () { return ethRpcMethods.getProtocolVersion(web3Context.requestManager); });\n// TODO Add returnFormat parameter\n/**\n * View additional documentations here: {@link Web3Eth.isSyncing}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport const isSyncing = (web3Context) => __awaiter(void 0, void 0, void 0, function* () { return ethRpcMethods.getSyncing(web3Context.requestManager); });\n// TODO consider adding returnFormat parameter (to format address as bytes)\n/**\n * View additional documentations here: {@link Web3Eth.getCoinbase}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport const getCoinbase = (web3Context) => __awaiter(void 0, void 0, void 0, function* () { return ethRpcMethods.getCoinbase(web3Context.requestManager); });\n/**\n * View additional documentations here: {@link Web3Eth.isMining}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport const isMining = (web3Context) => __awaiter(void 0, void 0, void 0, function* () { return ethRpcMethods.getMining(web3Context.requestManager); });\n/**\n * View additional documentations here: {@link Web3Eth.getHashRate}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function getHashRate(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield ethRpcMethods.getHashRate(web3Context.requestManager);\n        return format({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getGasPrice}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function getGasPrice(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield ethRpcMethods.getGasPrice(web3Context.requestManager);\n        return format({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getMaxPriorityFeePerGas}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function getMaxPriorityFeePerGas(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield ethRpcMethods.getMaxPriorityFeePerGas(web3Context.requestManager);\n        return format({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getBlockNumber}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function getBlockNumber(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield ethRpcMethods.getBlockNumber(web3Context.requestManager);\n        return format({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getBalance}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function getBalance(web3Context_1, address_1) {\n    return __awaiter(this, arguments, void 0, function* (web3Context, address, blockNumber = web3Context.defaultBlock, returnFormat) {\n        const blockNumberFormatted = isBlockTag(blockNumber)\n            ? blockNumber\n            : format({ format: 'uint' }, blockNumber, ETH_DATA_FORMAT);\n        const response = yield ethRpcMethods.getBalance(web3Context.requestManager, address, blockNumberFormatted);\n        return format({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getStorageAt}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function getStorageAt(web3Context_1, address_1, storageSlot_1) {\n    return __awaiter(this, arguments, void 0, function* (web3Context, address, storageSlot, blockNumber = web3Context.defaultBlock, returnFormat) {\n        const storageSlotFormatted = format({ format: 'uint' }, storageSlot, ETH_DATA_FORMAT);\n        const blockNumberFormatted = isBlockTag(blockNumber)\n            ? blockNumber\n            : format({ format: 'uint' }, blockNumber, ETH_DATA_FORMAT);\n        const response = yield ethRpcMethods.getStorageAt(web3Context.requestManager, address, storageSlotFormatted, blockNumberFormatted);\n        return format({ format: 'bytes' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getCode}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function getCode(web3Context_1, address_1) {\n    return __awaiter(this, arguments, void 0, function* (web3Context, address, blockNumber = web3Context.defaultBlock, returnFormat) {\n        const blockNumberFormatted = isBlockTag(blockNumber)\n            ? blockNumber\n            : format({ format: 'uint' }, blockNumber, ETH_DATA_FORMAT);\n        const response = yield ethRpcMethods.getCode(web3Context.requestManager, address, blockNumberFormatted);\n        return format({ format: 'bytes' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getBlock}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function getBlock(web3Context_1) {\n    return __awaiter(this, arguments, void 0, function* (web3Context, block = web3Context.defaultBlock, hydrated = false, returnFormat) {\n        var _a;\n        let response;\n        if (isBytes(block)) {\n            const blockHashFormatted = format({ format: 'bytes32' }, block, ETH_DATA_FORMAT);\n            response = yield ethRpcMethods.getBlockByHash(web3Context.requestManager, blockHashFormatted, hydrated);\n        }\n        else {\n            const blockNumberFormatted = isBlockTag(block)\n                ? block\n                : format({ format: 'uint' }, block, ETH_DATA_FORMAT);\n            response = yield ethRpcMethods.getBlockByNumber(web3Context.requestManager, blockNumberFormatted, hydrated);\n        }\n        const res = format(blockSchema, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n        if (!isNullish(res)) {\n            const result = Object.assign(Object.assign({}, res), { transactions: (_a = res.transactions) !== null && _a !== void 0 ? _a : [] });\n            return result;\n        }\n        return res;\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getBlockTransactionCount}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function getBlockTransactionCount(web3Context_1) {\n    return __awaiter(this, arguments, void 0, function* (web3Context, block = web3Context.defaultBlock, returnFormat) {\n        let response;\n        if (isBytes(block)) {\n            const blockHashFormatted = format({ format: 'bytes32' }, block, ETH_DATA_FORMAT);\n            response = yield ethRpcMethods.getBlockTransactionCountByHash(web3Context.requestManager, blockHashFormatted);\n        }\n        else {\n            const blockNumberFormatted = isBlockTag(block)\n                ? block\n                : format({ format: 'uint' }, block, ETH_DATA_FORMAT);\n            response = yield ethRpcMethods.getBlockTransactionCountByNumber(web3Context.requestManager, blockNumberFormatted);\n        }\n        return format({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getBlockUncleCount}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function getBlockUncleCount(web3Context_1) {\n    return __awaiter(this, arguments, void 0, function* (web3Context, block = web3Context.defaultBlock, returnFormat) {\n        let response;\n        if (isBytes(block)) {\n            const blockHashFormatted = format({ format: 'bytes32' }, block, ETH_DATA_FORMAT);\n            response = yield ethRpcMethods.getUncleCountByBlockHash(web3Context.requestManager, blockHashFormatted);\n        }\n        else {\n            const blockNumberFormatted = isBlockTag(block)\n                ? block\n                : format({ format: 'uint' }, block, ETH_DATA_FORMAT);\n            response = yield ethRpcMethods.getUncleCountByBlockNumber(web3Context.requestManager, blockNumberFormatted);\n        }\n        return format({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getUncle}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function getUncle(web3Context_1) {\n    return __awaiter(this, arguments, void 0, function* (web3Context, block = web3Context.defaultBlock, uncleIndex, returnFormat) {\n        const uncleIndexFormatted = format({ format: 'uint' }, uncleIndex, ETH_DATA_FORMAT);\n        let response;\n        if (isBytes(block)) {\n            const blockHashFormatted = format({ format: 'bytes32' }, block, ETH_DATA_FORMAT);\n            response = yield ethRpcMethods.getUncleByBlockHashAndIndex(web3Context.requestManager, blockHashFormatted, uncleIndexFormatted);\n        }\n        else {\n            const blockNumberFormatted = isBlockTag(block)\n                ? block\n                : format({ format: 'uint' }, block, ETH_DATA_FORMAT);\n            response = yield ethRpcMethods.getUncleByBlockNumberAndIndex(web3Context.requestManager, blockNumberFormatted, uncleIndexFormatted);\n        }\n        return format(blockSchema, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getTransaction}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function getTransaction(web3Context_1, transactionHash_1) {\n    return __awaiter(this, arguments, void 0, function* (web3Context, transactionHash, returnFormat = web3Context.defaultReturnFormat) {\n        const transactionHashFormatted = format({ format: 'bytes32' }, transactionHash, DEFAULT_RETURN_FORMAT);\n        const response = yield ethRpcMethods.getTransactionByHash(web3Context.requestManager, transactionHashFormatted);\n        return isNullish(response)\n            ? response\n            : formatTransaction(response, returnFormat, {\n                transactionSchema: web3Context.config.customTransactionSchema,\n                fillInputAndData: true,\n            });\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getPendingTransactions}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function getPendingTransactions(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield ethRpcMethods.getPendingTransactions(web3Context.requestManager);\n        return response.map(transaction => formatTransaction(transaction, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat, {\n            transactionSchema: web3Context.config.customTransactionSchema,\n            fillInputAndData: true,\n        }));\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getTransactionFromBlock}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function getTransactionFromBlock(web3Context_1) {\n    return __awaiter(this, arguments, void 0, function* (web3Context, block = web3Context.defaultBlock, transactionIndex, returnFormat) {\n        const transactionIndexFormatted = format({ format: 'uint' }, transactionIndex, ETH_DATA_FORMAT);\n        let response;\n        if (isBytes(block)) {\n            const blockHashFormatted = format({ format: 'bytes32' }, block, ETH_DATA_FORMAT);\n            response = yield ethRpcMethods.getTransactionByBlockHashAndIndex(web3Context.requestManager, blockHashFormatted, transactionIndexFormatted);\n        }\n        else {\n            const blockNumberFormatted = isBlockTag(block)\n                ? block\n                : format({ format: 'uint' }, block, ETH_DATA_FORMAT);\n            response = yield ethRpcMethods.getTransactionByBlockNumberAndIndex(web3Context.requestManager, blockNumberFormatted, transactionIndexFormatted);\n        }\n        return isNullish(response)\n            ? response\n            : formatTransaction(response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat, {\n                transactionSchema: web3Context.config.customTransactionSchema,\n                fillInputAndData: true,\n            });\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getTransactionReceipt}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function getTransactionReceipt(web3Context, transactionHash, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const transactionHashFormatted = format({ format: 'bytes32' }, transactionHash, DEFAULT_RETURN_FORMAT);\n        let response;\n        try {\n            response = yield ethRpcMethods.getTransactionReceipt(web3Context.requestManager, transactionHashFormatted);\n        }\n        catch (error) {\n            // geth indexing error, we poll until transactions stopped indexing\n            if (typeof error === 'object' &&\n                !isNullish(error) &&\n                'message' in error &&\n                error.message === 'transaction indexing is in progress') {\n                console.warn('Transaction indexing is in progress.');\n            }\n            else {\n                throw error;\n            }\n        }\n        return isNullish(response)\n            ? response\n            : format(transactionReceiptSchema, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getTransactionCount}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function getTransactionCount(web3Context_1, address_1) {\n    return __awaiter(this, arguments, void 0, function* (web3Context, address, blockNumber = web3Context.defaultBlock, returnFormat) {\n        const blockNumberFormatted = isBlockTag(blockNumber)\n            ? blockNumber\n            : format({ format: 'uint' }, blockNumber, ETH_DATA_FORMAT);\n        const response = yield ethRpcMethods.getTransactionCount(web3Context.requestManager, address, blockNumberFormatted);\n        return format({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.sendTransaction}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function sendTransaction(web3Context, transactionObj, returnFormat, options = { checkRevertBeforeSending: true }, transactionMiddleware) {\n    const promiEvent = new Web3PromiEvent((resolve, reject) => {\n        setImmediate(() => {\n            (() => __awaiter(this, void 0, void 0, function* () {\n                const sendTxHelper = new SendTxHelper({\n                    web3Context,\n                    promiEvent,\n                    options,\n                    returnFormat,\n                });\n                let transaction = Object.assign({}, transactionObj);\n                if (!isNullish(transactionMiddleware)) {\n                    transaction = yield transactionMiddleware.processTransaction(transaction);\n                }\n                let transactionFormatted = formatTransaction(Object.assign(Object.assign({}, transaction), { from: getTransactionFromOrToAttr('from', web3Context, transaction), to: getTransactionFromOrToAttr('to', web3Context, transaction) }), ETH_DATA_FORMAT, {\n                    transactionSchema: web3Context.config.customTransactionSchema,\n                });\n                try {\n                    transactionFormatted = (yield sendTxHelper.populateGasPrice({\n                        transaction,\n                        transactionFormatted,\n                    }));\n                    yield sendTxHelper.checkRevertBeforeSending(transactionFormatted);\n                    sendTxHelper.emitSending(transactionFormatted);\n                    let wallet;\n                    if (web3Context.wallet && !isNullish(transactionFormatted.from)) {\n                        wallet = web3Context.wallet.get(transactionFormatted.from);\n                    }\n                    const transactionHash = yield sendTxHelper.signAndSend({\n                        wallet,\n                        tx: transactionFormatted,\n                    });\n                    const transactionHashFormatted = format({ format: 'bytes32' }, transactionHash, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n                    sendTxHelper.emitSent(transactionFormatted);\n                    sendTxHelper.emitTransactionHash(transactionHashFormatted);\n                    const transactionReceipt = yield waitForTransactionReceipt(web3Context, transactionHash, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n                    const transactionReceiptFormatted = sendTxHelper.getReceiptWithEvents(format(transactionReceiptSchema, transactionReceipt, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat));\n                    sendTxHelper.emitReceipt(transactionReceiptFormatted);\n                    resolve(yield sendTxHelper.handleResolve({\n                        receipt: transactionReceiptFormatted,\n                        tx: transactionFormatted,\n                    }));\n                    sendTxHelper.emitConfirmation({\n                        receipt: transactionReceiptFormatted,\n                        transactionHash,\n                    });\n                }\n                catch (error) {\n                    reject(yield sendTxHelper.handleError({\n                        error,\n                        tx: transactionFormatted,\n                    }));\n                }\n            }))();\n        });\n    });\n    return promiEvent;\n}\n/**\n * View additional documentations here: {@link Web3Eth.sendSignedTransaction}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function sendSignedTransaction(web3Context, signedTransaction, returnFormat, options = { checkRevertBeforeSending: true }) {\n    // TODO - Promise returned in function argument where a void return was expected\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    const promiEvent = new Web3PromiEvent((resolve, reject) => {\n        setImmediate(() => {\n            (() => __awaiter(this, void 0, void 0, function* () {\n                const sendTxHelper = new SendTxHelper({\n                    web3Context,\n                    promiEvent,\n                    options,\n                    returnFormat,\n                });\n                // Formatting signedTransaction to be send to RPC endpoint\n                const signedTransactionFormattedHex = format({ format: 'bytes' }, signedTransaction, ETH_DATA_FORMAT);\n                const unSerializedTransaction = TransactionFactory.fromSerializedData(bytesToUint8Array(hexToBytes(signedTransactionFormattedHex)));\n                const unSerializedTransactionWithFrom = Object.assign(Object.assign({}, unSerializedTransaction.toJSON()), { \n                    // Some providers will default `from` to address(0) causing the error\n                    // reported from `eth_call` to not be the reason the user's tx failed\n                    // e.g. `eth_call` will return an Out of Gas error for a failed\n                    // smart contract execution contract, because the sender, address(0),\n                    // has no balance to pay for the gas of the transaction execution\n                    from: unSerializedTransaction.getSenderAddress().toString() });\n                try {\n                    const { v, r, s } = unSerializedTransactionWithFrom, txWithoutSigParams = __rest(unSerializedTransactionWithFrom, [\"v\", \"r\", \"s\"]);\n                    yield sendTxHelper.checkRevertBeforeSending(txWithoutSigParams);\n                    sendTxHelper.emitSending(signedTransactionFormattedHex);\n                    const transactionHash = yield trySendTransaction(web3Context, () => __awaiter(this, void 0, void 0, function* () {\n                        return ethRpcMethods.sendRawTransaction(web3Context.requestManager, signedTransactionFormattedHex);\n                    }));\n                    sendTxHelper.emitSent(signedTransactionFormattedHex);\n                    const transactionHashFormatted = format({ format: 'bytes32' }, transactionHash, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n                    sendTxHelper.emitTransactionHash(transactionHashFormatted);\n                    const transactionReceipt = yield waitForTransactionReceipt(web3Context, transactionHash, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n                    const transactionReceiptFormatted = sendTxHelper.getReceiptWithEvents(format(transactionReceiptSchema, transactionReceipt, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat));\n                    sendTxHelper.emitReceipt(transactionReceiptFormatted);\n                    resolve(yield sendTxHelper.handleResolve({\n                        receipt: transactionReceiptFormatted,\n                        tx: unSerializedTransactionWithFrom,\n                    }));\n                    sendTxHelper.emitConfirmation({\n                        receipt: transactionReceiptFormatted,\n                        transactionHash,\n                    });\n                }\n                catch (error) {\n                    reject(yield sendTxHelper.handleError({\n                        error,\n                        tx: unSerializedTransactionWithFrom,\n                    }));\n                }\n            }))();\n        });\n    });\n    return promiEvent;\n}\n/**\n * View additional documentations here: {@link Web3Eth.sign}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function sign(web3Context_1, message_1, addressOrIndex_1) {\n    return __awaiter(this, arguments, void 0, function* (web3Context, message, addressOrIndex, returnFormat = web3Context.defaultReturnFormat) {\n        var _a;\n        const messageFormatted = format({ format: 'bytes' }, message, DEFAULT_RETURN_FORMAT);\n        if ((_a = web3Context.wallet) === null || _a === void 0 ? void 0 : _a.get(addressOrIndex)) {\n            const wallet = web3Context.wallet.get(addressOrIndex);\n            const signed = wallet.sign(messageFormatted);\n            return format(SignatureObjectSchema, signed, returnFormat);\n        }\n        if (typeof addressOrIndex === 'number') {\n            throw new SignatureError(message, 'RPC method \"eth_sign\" does not support index signatures');\n        }\n        const response = yield ethRpcMethods.sign(web3Context.requestManager, addressOrIndex, messageFormatted);\n        return format({ format: 'bytes' }, response, returnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.signTransaction}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function signTransaction(web3Context_1, transaction_1) {\n    return __awaiter(this, arguments, void 0, function* (web3Context, transaction, returnFormat = web3Context.defaultReturnFormat) {\n        const response = yield ethRpcMethods.signTransaction(web3Context.requestManager, formatTransaction(transaction, ETH_DATA_FORMAT, {\n            transactionSchema: web3Context.config.customTransactionSchema,\n        }));\n        // Some clients only return the encoded signed transaction (e.g. Ganache)\n        // while clients such as Geth return the desired SignedTransactionInfoAPI object\n        return isString(response)\n            ? decodeSignedTransaction(response, returnFormat, {\n                fillInputAndData: true,\n            })\n            : {\n                raw: format({ format: 'bytes' }, response.raw, returnFormat),\n                tx: formatTransaction(response.tx, returnFormat, {\n                    transactionSchema: web3Context.config.customTransactionSchema,\n                    fillInputAndData: true,\n                }),\n            };\n    });\n}\n// TODO Decide what to do with transaction.to\n// https://github.com/ChainSafe/web3.js/pull/4525#issuecomment-982330076\n/**\n * View additional documentations here: {@link Web3Eth.call}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function call(web3Context_1, transaction_1) {\n    return __awaiter(this, arguments, void 0, function* (web3Context, transaction, blockNumber = web3Context.defaultBlock, returnFormat = web3Context.defaultReturnFormat) {\n        const blockNumberFormatted = isBlockTag(blockNumber)\n            ? blockNumber\n            : format({ format: 'uint' }, blockNumber, ETH_DATA_FORMAT);\n        const response = yield ethRpcMethods.call(web3Context.requestManager, formatTransaction(transaction, ETH_DATA_FORMAT, {\n            transactionSchema: web3Context.config.customTransactionSchema,\n        }), blockNumberFormatted);\n        return format({ format: 'bytes' }, response, returnFormat);\n    });\n}\n// TODO - Investigate whether response is padded as 1.x docs suggest\n/**\n * View additional documentations here: {@link Web3Eth.estimateGas}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function estimateGas(web3Context_1, transaction_1) {\n    return __awaiter(this, arguments, void 0, function* (web3Context, transaction, blockNumber = web3Context.defaultBlock, returnFormat) {\n        const transactionFormatted = formatTransaction(transaction, ETH_DATA_FORMAT, {\n            transactionSchema: web3Context.config.customTransactionSchema,\n        });\n        const blockNumberFormatted = isBlockTag(blockNumber)\n            ? blockNumber\n            : format({ format: 'uint' }, blockNumber, ETH_DATA_FORMAT);\n        const response = yield ethRpcMethods.estimateGas(web3Context.requestManager, transactionFormatted, blockNumberFormatted);\n        return format({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n// TODO - Add input formatting to filter\n/**\n * View additional documentations here: {@link Web3Eth.getPastLogs}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function getLogs(web3Context, filter, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // format type bigint or number toBlock and fromBlock to hexstring.\n        let { toBlock, fromBlock } = filter;\n        if (!isNullish(toBlock)) {\n            if (typeof toBlock === 'number' || typeof toBlock === 'bigint') {\n                toBlock = numberToHex(toBlock);\n            }\n        }\n        if (!isNullish(fromBlock)) {\n            if (typeof fromBlock === 'number' || typeof fromBlock === 'bigint') {\n                fromBlock = numberToHex(fromBlock);\n            }\n        }\n        const formattedFilter = Object.assign(Object.assign({}, filter), { fromBlock, toBlock });\n        const response = yield ethRpcMethods.getLogs(web3Context.requestManager, formattedFilter);\n        const result = response.map(res => {\n            if (typeof res === 'string') {\n                return res;\n            }\n            return format(logSchema, res, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n        });\n        return result;\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getChainId}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function getChainId(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield ethRpcMethods.getChainId(web3Context.requestManager);\n        return format({ format: 'uint' }, \n        // Response is number in hex formatted string\n        response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getProof}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function getProof(web3Context_1, address_1, storageKeys_1) {\n    return __awaiter(this, arguments, void 0, function* (web3Context, address, storageKeys, blockNumber = web3Context.defaultBlock, returnFormat) {\n        const storageKeysFormatted = storageKeys.map(storageKey => format({ format: 'bytes' }, storageKey, ETH_DATA_FORMAT));\n        const blockNumberFormatted = isBlockTag(blockNumber)\n            ? blockNumber\n            : format({ format: 'uint' }, blockNumber, ETH_DATA_FORMAT);\n        const response = yield ethRpcMethods.getProof(web3Context.requestManager, address, storageKeysFormatted, blockNumberFormatted);\n        return format(accountSchema, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n// TODO Throwing an error with Geth, but not Infura\n// TODO gasUsedRatio and reward not formatting\n/**\n * View additional documentations here: {@link Web3Eth.getFeeHistory}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function getFeeHistory(web3Context_1, blockCount_1) {\n    return __awaiter(this, arguments, void 0, function* (web3Context, blockCount, newestBlock = web3Context.defaultBlock, rewardPercentiles, returnFormat) {\n        const blockCountFormatted = format({ format: 'uint' }, blockCount, ETH_DATA_FORMAT);\n        const newestBlockFormatted = isBlockTag(newestBlock)\n            ? newestBlock\n            : format({ format: 'uint' }, newestBlock, ETH_DATA_FORMAT);\n        const rewardPercentilesFormatted = format({\n            type: 'array',\n            items: {\n                format: 'uint',\n            },\n        }, rewardPercentiles, NUMBER_DATA_FORMAT);\n        const response = yield ethRpcMethods.getFeeHistory(web3Context.requestManager, blockCountFormatted, newestBlockFormatted, rewardPercentilesFormatted);\n        return format(feeHistorySchema, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.createAccessList}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function createAccessList(web3Context_1, transaction_1) {\n    return __awaiter(this, arguments, void 0, function* (web3Context, transaction, blockNumber = web3Context.defaultBlock, returnFormat) {\n        const blockNumberFormatted = isBlockTag(blockNumber)\n            ? blockNumber\n            : format({ format: 'uint' }, blockNumber, ETH_DATA_FORMAT);\n        const response = (yield ethRpcMethods.createAccessList(web3Context.requestManager, formatTransaction(transaction, ETH_DATA_FORMAT, {\n            transactionSchema: web3Context.config.customTransactionSchema,\n        }), blockNumberFormatted));\n        return format(accessListResultSchema, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.signTypedData}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function signTypedData(web3Context, address, typedData, useLegacy, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield ethRpcMethods.signTypedData(web3Context.requestManager, address, typedData, useLegacy);\n        return format({ format: 'bytes' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n//# sourceMappingURL=rpc_method_wrappers.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ethRpcMethods } from 'web3-rpc-methods';\nimport { format, numberToHex } from 'web3-utils';\nimport { isNullish } from 'web3-validator';\nimport { logSchema } from './schemas.js';\n/**\n * View additional documentations here: {@link Web3Eth.createNewPendingTransactionFilter}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n * @param returnFormat ({@link DataFormat}) Return format\n */\nexport function createNewPendingTransactionFilter(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield ethRpcMethods.newPendingTransactionFilter(web3Context.requestManager);\n        return format({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.createNewFilter}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n * @param filter ({@link FilterParam}) Filter param optional having from-block to-block address or params\n * @param returnFormat ({@link DataFormat}) Return format\n */\nexport function createNewFilter(web3Context, filter, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // format type bigint or number toBlock and fromBlock to hexstring.\n        let { toBlock, fromBlock } = filter;\n        if (!isNullish(toBlock)) {\n            if (typeof toBlock === 'number' || typeof toBlock === 'bigint') {\n                toBlock = numberToHex(toBlock);\n            }\n        }\n        if (!isNullish(fromBlock)) {\n            if (typeof fromBlock === 'number' || typeof fromBlock === 'bigint') {\n                fromBlock = numberToHex(fromBlock);\n            }\n        }\n        const formattedFilter = Object.assign(Object.assign({}, filter), { fromBlock, toBlock });\n        const response = yield ethRpcMethods.newFilter(web3Context.requestManager, formattedFilter);\n        return format({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.createNewBlockFilter}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n * @param returnFormat ({@link DataFormat}) Return format\n */\nexport function createNewBlockFilter(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield ethRpcMethods.newBlockFilter(web3Context.requestManager);\n        return format({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.uninstallFilter}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n * @param filterIdentifier ({@link Numbers}) filter id\n */\nexport function uninstallFilter(web3Context, filterIdentifier) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield ethRpcMethods.uninstallFilter(web3Context.requestManager, numberToHex(filterIdentifier));\n        return response;\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getFilterChanges}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n * @param filterIdentifier ({@link Numbers}) filter id\n */\nexport function getFilterChanges(web3Context, filterIdentifier, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield ethRpcMethods.getFilterChanges(web3Context.requestManager, numberToHex(filterIdentifier));\n        const result = response.map(res => {\n            if (typeof res === 'string') {\n                return res;\n            }\n            return format(logSchema, res, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n        });\n        return result;\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getFilterLogs}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n * @param filterIdentifier ({@link Numbers}) filter id\n */\nexport function getFilterLogs(web3Context, filterIdentifier, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield ethRpcMethods.getFilterLogs(web3Context.requestManager, numberToHex(filterIdentifier));\n        const result = response.map(res => {\n            if (typeof res === 'string') {\n                return res;\n            }\n            return format(logSchema, res, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n        });\n        return result;\n    });\n}\n//# sourceMappingURL=filtering_rpc_method_wrappers.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/* eslint-disable-next-line max-classes-per-file */\nimport { format } from 'web3-utils';\nimport { Web3Subscription } from 'web3-core';\nimport { blockHeaderSchema, logSchema, syncSchema } from './schemas.js';\n/**\n * ## subscribe('logs')\n * Subscribes to incoming logs, filtered by the given options. If a valid numerical fromBlock options property is set, web3.js will retrieve logs beginning from this point, backfilling the response as necessary.\n *\n * You can subscribe to logs matching a given filter object, which can take the following parameters:\n * - `fromBlock`: (optional, default: 'latest') Integer block number, or `'latest'` for the last mined block or `'pending'`, `'earliest'` for not yet mined transactions.\n * - `address`: (optional) Contract address or a list of addresses from which logs should originate.\n * - `topics`: (optional) Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with `or` options.\n *\n */\nexport class LogsSubscription extends Web3Subscription {\n    _buildSubscriptionParams() {\n        return ['logs', this.args];\n    }\n    formatSubscriptionResult(data) {\n        return format(logSchema, data, super.returnFormat);\n    }\n}\n/**\n * ## subscribe('pendingTransactions')\n * Subscribes to incoming pending transactions.\n *\n * You can subscribe to pending transactions by calling web3.eth.subscribe('pendingTransactions').\n * @example\n * ```ts\n * (await web3.eth.subscribe('pendingTransactions')).on('data', console.log);\n * ```\n */\nexport class NewPendingTransactionsSubscription extends Web3Subscription {\n    // eslint-disable-next-line\n    _buildSubscriptionParams() {\n        return ['newPendingTransactions'];\n    }\n    formatSubscriptionResult(data) {\n        return format({ format: 'string' }, data, super.returnFormat);\n    }\n}\n/**\n * ## subscribe('newHeads') ( same as subscribe('newBlockHeaders'))\n *\n * Subscribes to incoming block headers. This can be used as timer to check for changes on the blockchain.\n *\n * The structure of a returned block header is {@link BlockHeaderOutput}:\n * @example\n * ```ts\n * (await web3.eth.subscribe('newHeads')).on( // 'newBlockHeaders' would work as well\n *  'data',\n * console.log\n * );\n * >{\n * parentHash: '0x9e746a1d906b299def98c75b06f714d62dacadd567c7515d76eeaa8c8074c738',\n * sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n * miner: '0x0000000000000000000000000000000000000000',\n * stateRoot: '0xe0f04b04861ecfa95e82a9310d6a7ef7aef8d7417f5209c182582bfb98a8e307',\n * transactionsRoot: '0x31ab4ea571a9e10d3a19aaed07d190595b1dfa34e03960c04293fec565dea536',\n * logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n * difficulty: 2n,\n * number: 21n,\n * gasLimit: 11738125n,\n * gasUsed: 830006n,\n * timestamp: 1678797237n,\n * extraData: '0xd883010b02846765746888676f312e32302e31856c696e757800000000000000e0a6e93cf40e2e71a72e493272210c3f43738ccc7e7d7b14ffd51833797d896c09117e8dc4fbcbc969bd21b42e5af3e276a911524038c001b2109b63b8e0352601',\n * nonce: 0n\n * }\n * ```\n */\nexport class NewHeadsSubscription extends Web3Subscription {\n    // eslint-disable-next-line\n    _buildSubscriptionParams() {\n        return ['newHeads'];\n    }\n    formatSubscriptionResult(data) {\n        return format(blockHeaderSchema, data, super.returnFormat);\n    }\n}\n/**\n * ## subscribe('syncing')\n *\n * Subscribe to syncing events. This will return `true` when the node is syncing and when it’s finished syncing will return `false`, for the `changed` event.\n * @example\n * ```ts\n * (await web3.eth.subscribe('syncing')).on('changed', console.log);\n * > `true` // when syncing\n *\n * (await web3.eth.subscribe('syncing')).on('data', console.log);\n * > {\n *      startingBlock: 0,\n *      currentBlock: 0,\n *      highestBlock: 0,\n *      pulledStates: 0,\n *      knownStates: 0\n *   }\n * ```\n */\nexport class SyncingSubscription extends Web3Subscription {\n    // eslint-disable-next-line\n    _buildSubscriptionParams() {\n        return ['syncing'];\n    }\n    _processSubscriptionResult(data) {\n        if (typeof data === 'boolean') {\n            this.emit('changed', data);\n        }\n        else {\n            const mappedData = Object.fromEntries(Object.entries((data === null || data === void 0 ? void 0 : data.status) || data).map(([key, value]) => [\n                key.charAt(0).toLowerCase() + key.substring(1),\n                value,\n            ]));\n            this.emit('changed', data.syncing);\n            this.emit('data', format(syncSchema, mappedData, super.returnFormat));\n        }\n    }\n}\n//# sourceMappingURL=web3_subscriptions.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// Disabling because returnTypes must be last param to match 1.x params\n/* eslint-disable default-param-last */\nimport { DEFAULT_RETURN_FORMAT, } from 'web3-types';\nimport { isSupportedProvider, Web3Context } from 'web3-core';\nimport { TransactionNotFound } from 'web3-errors';\nimport { toChecksumAddress, isNullish, ethUnitMap } from 'web3-utils';\nimport { ethRpcMethods } from 'web3-rpc-methods';\nimport * as rpcMethodsWrappers from './rpc_method_wrappers.js';\nimport * as filteringRpcMethodsWrappers from './filtering_rpc_method_wrappers.js';\nimport { LogsSubscription, NewPendingTransactionsSubscription, NewHeadsSubscription, SyncingSubscription, } from './web3_subscriptions.js';\nexport const registeredSubscriptions = {\n    logs: LogsSubscription,\n    newPendingTransactions: NewPendingTransactionsSubscription,\n    newHeads: NewHeadsSubscription,\n    syncing: SyncingSubscription,\n    pendingTransactions: NewPendingTransactionsSubscription, // the same as newPendingTransactions. just for support API like in version 1.x\n    newBlockHeaders: NewHeadsSubscription, // the same as newHeads. just for support API like in version 1.x\n};\n/**\n *\n * The Web3Eth allows you to interact with an Ethereum blockchain.\n *\n * For using Web3 Eth functions, first install Web3 package using `npm i web3` or `yarn add web3` based on your package manager usage.\n * After that, Web3 Eth functions will be available as mentioned in following snippet.\n * ```ts\n * import { Web3 } from 'web3';\n * const web3 = new Web3('https://mainnet.infura.io/v3/<YOURPROJID>');\n *\n * const block = await web3.eth.getBlock(0);\n *\n * ```\n *\n * For using individual package install `web3-eth` package using `npm i web3-eth` or `yarn add web3-eth` and only import required functions.\n * This is more efficient approach for building lightweight applications.\n * ```ts\n * import { Web3Eth } from 'web3-eth';\n *\n * const eth = new Web3Eth('https://mainnet.infura.io/v3/<YOURPROJID>');\n * const block = await eth.getBlock(0);\n *\n * ```\n */\nexport class Web3Eth extends Web3Context {\n    constructor(\n    // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n    providerOrContext) {\n        if (typeof providerOrContext === 'string' ||\n            // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n            isSupportedProvider(providerOrContext)) {\n            // @ts-expect-error disable the error: \"A 'super' call must be a root-level statement within a constructor of a derived class that contains initialized properties, parameter properties, or private identifiers.\"\n            super({\n                // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n                provider: providerOrContext,\n                registeredSubscriptions,\n            });\n            return;\n        }\n        if (providerOrContext.registeredSubscriptions) {\n            super(providerOrContext);\n            return;\n        }\n        super(Object.assign(Object.assign({}, providerOrContext), { registeredSubscriptions }));\n        // an alias for calculateFeeData\n        // eslint-disable-next-line\n        this.getFeeData = this.calculateFeeData;\n    }\n    setTransactionMiddleware(transactionMiddleware) {\n        this.transactionMiddleware = transactionMiddleware;\n    }\n    getTransactionMiddleware() {\n        return this.transactionMiddleware;\n    }\n    /**\n     * @returns Returns the ethereum protocol version of the node.\n     *\n     * ```ts\n     * web3.eth.getProtocolVersion().then(console.log);\n     * > \"63\"\n     * ```\n     */\n    getProtocolVersion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return ethRpcMethods.getProtocolVersion(this.requestManager);\n        });\n    }\n    // TODO Add returnFormat parameter\n    /**\n     * Checks if the node is currently syncing.\n     *\n     * @returns Either a {@link SyncingStatusAPI}, or `false`.\n     *\n     * ```ts\n     * web3.eth.isSyncing().then(console.log);\n     * > {\n     *     startingBlock: 100,\n     *     currentBlock: 312,\n     *     highestBlock: 512,\n     *     knownStates: 234566,\n     *     pulledStates: 123455\n     * }\n     * ```\n     */\n    isSyncing() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return ethRpcMethods.getSyncing(this.requestManager);\n        });\n    }\n    // TODO consider adding returnFormat parameter (to format address as bytes)\n    /**\n     * @returns Returns the coinbase address to which mining rewards will go.\n     *\n     * ```ts\n     * web3.eth.getCoinbase().then(console.log);\n     * > \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\"\n     * ```\n     */\n    getCoinbase() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return ethRpcMethods.getCoinbase(this.requestManager);\n        });\n    }\n    /**\n     * Checks whether the node is mining or not.\n     *\n     * @returns `true` if the node is mining, otherwise `false`.\n     *\n     * ```ts\n     * web3.eth.isMining().then(console.log);\n     * > true\n     * ```\n     */\n    isMining() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return ethRpcMethods.getMining(this.requestManager);\n        });\n    }\n    /**\n     * @deprecated Will be removed in the future, please use {@link Web3Eth.getHashRate} method instead.\n     *\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The number of hashes per second that the node is mining with.\n     *\n     * ```ts\n     * web3.eth.getHashrate().then(console.log);\n     * > 493736n\n     *\n     * web3.eth.getHashrate({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > \"0x788a8\"\n     * ```\n     */\n    getHashrate(returnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            if (returnFormat === void 0) { returnFormat = ((_a = this.defaultReturnFormat) !== null && _a !== void 0 ? _a : DEFAULT_RETURN_FORMAT); }\n            return this.getHashRate(returnFormat);\n        });\n    }\n    /**\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The number of hashes per second that the node is mining with.\n     *\n     * ```ts\n     * web3.eth.getHashRate().then(console.log);\n     * > 493736n\n     *\n     * web3.eth.getHashRate({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > \"0x788a8\"\n     * ```\n     */\n    getHashRate() {\n        return __awaiter(this, arguments, void 0, function* (returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.getHashRate(this, returnFormat);\n        });\n    }\n    /**\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The gas price determined by the last few blocks median gas price.\n     *\n     * ```ts\n     * web3.eth.getGasPrice().then(console.log);\n     * > 20000000000n\n     *\n     * web3.eth.getGasPrice({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > \"0x4a817c800\"\n     * ```\n     */\n    getGasPrice() {\n        return __awaiter(this, arguments, void 0, function* (returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.getGasPrice(this, returnFormat);\n        });\n    }\n    /**\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns the current maxPriorityFeePerGas per gas in wei.\n     *\n     * ```ts\n     * web3.eth.getMaxPriorityFeePerGas().then(console.log);\n     * > 20000000000n\n     *\n     * web3.eth.getMaxPriorityFeePerGas({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > \"0x4a817c800\"\n     * ```\n     */\n    getMaxPriorityFeePerGas() {\n        return __awaiter(this, arguments, void 0, function* (returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.getMaxPriorityFeePerGas(this, returnFormat);\n        });\n    }\n    /**\n     * Calculates the current Fee Data.\n     * If the node supports EIP-1559, then `baseFeePerGas` and `maxPriorityFeePerGas` will be returned along with the calculated `maxFeePerGas` value.\n     * `maxFeePerGas` is calculated as `baseFeePerGas` * `baseFeePerGasFactor` + `maxPriorityFeePerGas`.\n     * If the node does not support EIP-1559, then the `gasPrice` will be returned and the other values will be undefined.\n     *\n     * @param baseFeePerGasFactor (optional) The factor to multiply the `baseFeePerGas` with when calculating `maxFeePerGas`, if the node supports EIP-1559. This can be a `bigint` for precise calculation or a `number` to support decimals. The default value is 2 (BigInt).\n     * If a `number` is provided, it will be converted to `bigint` with three decimal precision.\n     * @param alternativeMaxPriorityFeePerGas (optional) The alternative `maxPriorityFeePerGas` to use when calculating `maxFeePerGas`, if the node supports EIP-1559 but does not support the method `eth_maxPriorityFeePerGas`. The default value is 1 gwei.\n     * @returns The current fee data.\n     *\n     * @example\n     * web3.eth.calculateFeeData().then(console.log);\n     * > {\n     *     gasPrice: 20000000000n,\n     *     maxFeePerGas: 60000000000n,\n     *     maxPriorityFeePerGas: 20000000000n,\n     *     baseFeePerGas: 20000000000n\n     * }\n     *\n     * @example\n     * // Using a `bigint` for baseFeePerGasFactor\n     * web3.eth.calculateFeeData(1n).then(console.log);\n     * > {\n     *     gasPrice: 20000000000n,\n     *     maxFeePerGas: 40000000000n,\n     *     maxPriorityFeePerGas: 20000000000n,\n     *     baseFeePerGas: 20000000000n\n     * }\n     *\n     * @example\n     * // Using a `number` for baseFeePerGasFactor (with decimals)\n     * web3.eth.calculateFeeData(1.5).then(console.log);\n     * > {\n     *     gasPrice: 20000000000n,\n     *     maxFeePerGas: 50000000000n,  // baseFeePerGasFactor is converted to BigInt(1.500)\n     *     maxPriorityFeePerGas: 20000000000n,\n     *     baseFeePerGas: 20000000000n\n     * }\n     *\n     * @example\n     * web3.eth.calculateFeeData(3n).then(console.log);\n     * > {\n     *     gasPrice: 20000000000n,\n     *     maxFeePerGas: 80000000000n,\n     *     maxPriorityFeePerGas: 20000000000n,\n     *     baseFeePerGas: 20000000000n\n     * }\n     */\n    calculateFeeData() {\n        return __awaiter(this, arguments, void 0, function* (baseFeePerGasFactor = BigInt(2), alternativeMaxPriorityFeePerGas = ethUnitMap.Gwei) {\n            var _a;\n            const block = yield this.getBlock(undefined, false);\n            const baseFeePerGas = (_a = block === null || block === void 0 ? void 0 : block.baseFeePerGas) !== null && _a !== void 0 ? _a : undefined; // use undefined if it was null\n            let gasPrice;\n            try {\n                gasPrice = yield this.getGasPrice();\n            }\n            catch (error) {\n                // do nothing\n            }\n            let maxPriorityFeePerGas;\n            try {\n                maxPriorityFeePerGas = yield this.getMaxPriorityFeePerGas();\n            }\n            catch (error) {\n                // do nothing\n            }\n            let maxFeePerGas;\n            // if the `block.baseFeePerGas` is available, then EIP-1559 is supported\n            // and we can calculate the `maxFeePerGas` from the `block.baseFeePerGas`\n            if (baseFeePerGas) {\n                // tip the miner with alternativeMaxPriorityFeePerGas, if no value available from getMaxPriorityFeePerGas\n                maxPriorityFeePerGas = maxPriorityFeePerGas !== null && maxPriorityFeePerGas !== void 0 ? maxPriorityFeePerGas : alternativeMaxPriorityFeePerGas;\n                // basically maxFeePerGas = (baseFeePerGas +- 12.5%) + maxPriorityFeePerGas\n                // and we multiply the `baseFeePerGas` by `baseFeePerGasFactor`, to allow\n                // trying to include the transaction in the next few blocks even if the\n                // baseFeePerGas is increasing fast\n                let baseFeeMultiplier;\n                if (typeof baseFeePerGasFactor === 'number') {\n                    // Convert number to bigint with three decimal places\n                    baseFeeMultiplier = BigInt(Math.floor(baseFeePerGasFactor * 1000)) / BigInt(1000);\n                }\n                else {\n                    // It's already a BigInt, so just use it as-is\n                    baseFeeMultiplier = baseFeePerGasFactor;\n                }\n                maxFeePerGas = baseFeePerGas * baseFeeMultiplier + maxPriorityFeePerGas;\n            }\n            return { gasPrice, maxFeePerGas, maxPriorityFeePerGas, baseFeePerGas };\n        });\n    }\n    /**\n     * @returns A list of accounts the node controls (addresses are checksummed).\n     *\n     * ```ts\n     * web3.eth.getAccounts().then(console.log);\n     * > [\"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\", \"0xDCc6960376d6C6dEa93647383FfB245CfCed97Cf\"]\n     * ```\n     */\n    getAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const hexAddresses = (_a = (yield ethRpcMethods.getAccounts(this.requestManager))) !== null && _a !== void 0 ? _a : [];\n            return hexAddresses.map(address => toChecksumAddress(address));\n        });\n    }\n    /**\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The current block number.\n     *\n     * ```ts\n     * web3.eth.getBlockNumber().then(console.log);\n     * > 2744n\n     *\n     * web3.eth.getBlockNumber({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > \"0xab8\"\n     * ```\n     */\n    getBlockNumber() {\n        return __awaiter(this, arguments, void 0, function* (returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.getBlockNumber(this, returnFormat);\n        });\n    }\n    /**\n     * Get the balance of an address at a given block.\n     *\n     * @param address The address to get the balance of.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) Specifies what block to use as the current state for the balance query.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The current balance for the given address in `wei`.\n     *\n     * ```ts\n     * web3.eth.getBalance(\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\").then(console.log);\n     * > 1000000000000n\n     *\n     * web3.eth.getBalance(\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\").then(console.log);\n     * > \"0xe8d4a51000\"\n     * ```\n     */\n    getBalance(address_1) {\n        return __awaiter(this, arguments, void 0, function* (address, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.getBalance(this, address, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * Get the storage at a specific position of an address.\n     *\n     * @param address The address to get the storage from.\n     * @param storageSlot The index position of the storage.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) Specifies what block to use as the current state for the storage query.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The value in storage at the given position.\n     *\n     * ```ts\n     * web3.eth.getStorageAt(\"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\", 0).then(console.log);\n     * > \"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\"\n     *\n     * web3.eth.getStorageAt(\n     *      \"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\",\n     *      0,\n     *      undefined,\n     *      { number: FMT_NUMBER.HEX , bytes: FMT_BYTES.UINT8ARRAY }\n     * ).then(console.log);\n     * > Uint8Array(31) [\n     *       3, 52,  86, 115,  33,  35, 255, 255,\n     *       35, 66,  52,  45, 209,  35,  66,  67,\n     *       67, 36,  35,  66,  52, 253,  35,  79,\n     *       210, 63, 212, 242,  61,  66,  52\n     *    ]\n     * ```\n     */\n    getStorageAt(address_1, storageSlot_1) {\n        return __awaiter(this, arguments, void 0, function* (address, storageSlot, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.getStorageAt(this, address, storageSlot, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * Get the code at a specific address.\n     *\n     * @param address The address to get the code from.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) Specifies what block to use as the current state for the code query.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The [data](https://ethereum.org/en/developers/docs/transactions/#the-data-field) at the provided `address`.\n     *\n     * ```ts\n     * web3.eth.getCode(\"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\").then(console.log);\n     * > \"0x600160008035811a818181146012578301005b601b6001356025565b8060005260206000f25b600060078202905091905056\"\n     *\n     * web3.eth.getCode(\n     *      \"0x407d73d8a49eeb85d32cf465507dd71d507100c1\",\n     *      undefined,\n     *      { number: FMT_NUMBER.HEX , bytes: FMT_BYTES.UINT8ARRAY }\n     * ).then(console.log);\n     * > Uint8Array(50) [\n     *   96,  1,  96,   0, 128, 53, 129, 26, 129, 129, 129,\n     *   20, 96,  18,  87, 131,  1,   0, 91,  96,  27,  96,\n     *   1, 53,  96,  37,  86, 91, 128, 96,   0,  82,  96,\n     *   32, 96,   0, 242,  91, 96,   0, 96,   7, 130,   2,\n     *   144, 80, 145, 144,  80, 86\n     * ]\n     * ```\n     */\n    getCode(address_1) {\n        return __awaiter(this, arguments, void 0, function* (address, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.getCode(this, address, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * Retrieves a {@link Block} matching the provided block number, block hash or block tag.\n     *\n     * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.\n     * @param hydrated If specified `true`, the returned block will contain all transactions as objects. If `false` it will only contain transaction hashes.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted (does not format transaction objects or hashes).\n     * @returns A {@link Block} object matching the provided block number or block hash.\n     *\n     * ```ts\n     * web3.eth.getBlock(0).then(console.log);\n     * > {\n     *    hash: '0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d',\n     *    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n     *    miner: '0x0000000000000000000000000000000000000000',\n     *    stateRoot: '0x5ed9882897d363c4632a6e67fba6203df61bd994813dcf048da59be442a9c6c4',\n     *    transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *    difficulty: 1n,\n     *    number: 0n,\n     *    gasLimit: 30000000n,\n     *    gasUsed: 0n,\n     *    timestamp: 1658281638n,\n     *    extraData: '0x',\n     *    mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    nonce: 0n,\n     *    totalDifficulty: 1n,\n     *    baseFeePerGas: 1000000000n,\n     *    size: 514n,\n     *    transactions: [],\n     *    uncles: []\n     *  }\n     *\n     * web3.eth.getBlock(\n     *      \"0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d\",\n     *      false,\n     *      { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > {\n     *    hash: '0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d',\n     *    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n     *    miner: '0x0000000000000000000000000000000000000000',\n     *    stateRoot: '0x5ed9882897d363c4632a6e67fba6203df61bd994813dcf048da59be442a9c6c4',\n     *    transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *    difficulty: 1,\n     *    number: 0,\n     *    gasLimit: 30000000,\n     *    gasUsed: 0,\n     *    timestamp: 1658281638,\n     *    extraData: '0x',\n     *    mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    nonce: 0,\n     *    totalDifficulty: 1,\n     *    baseFeePerGas: 1000000000,\n     *    size: 514,\n     *    transactions: [],\n     *    uncles: []\n     *  }\n     * ```\n     */\n    getBlock() {\n        return __awaiter(this, arguments, void 0, function* (block = this.defaultBlock, hydrated = false, returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.getBlock(this, block, hydrated, returnFormat);\n        });\n    }\n    /**\n     * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The number of transactions in the provided block.\n     *\n     * ```ts\n     * web3.eth.getBlockTransactionCount(\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\").then(console.log);\n     * > 1n\n     *\n     * web3.eth.getBlockTransactionCount(\n     *     \"0x407d73d8a49eeb85d32cf465507dd71d507100c1\",\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > 1\n     * ```\n     */\n    getBlockTransactionCount() {\n        return __awaiter(this, arguments, void 0, function* (block = this.defaultBlock, returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.getBlockTransactionCount(this, block, returnFormat);\n        });\n    }\n    /**\n     * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The number of [uncles](https://ethereum.org/en/glossary/#ommer) in the provided block.\n     *\n     * ```ts\n     * web3.eth.getBlockUncleCount(\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\").then(console.log);\n     * > 1n\n     *\n     * web3.eth.getBlockUncleCount(\n     *     \"0x407d73d8a49eeb85d32cf465507dd71d507100c1\",\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > 1\n     * ```\n     */\n    getBlockUncleCount() {\n        return __awaiter(this, arguments, void 0, function* (block = this.defaultBlock, returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.getBlockUncleCount(this, block, returnFormat);\n        });\n    }\n    /**\n     *\n     * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.\n     * @param uncleIndex The index position of the uncle.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns A blocks [uncle](https://ethereum.org/en/glossary/#ommer) by a given uncle index position.\n     *\n     * ```ts\n     * web3.eth.getUncle(0, 1).then(console.log);\n     * > {\n     *    hash: '0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d',\n     *    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n     *    miner: '0x0000000000000000000000000000000000000000',\n     *    stateRoot: '0x5ed9882897d363c4632a6e67fba6203df61bd994813dcf048da59be442a9c6c4',\n     *    transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *    difficulty: 1n,\n     *    number: 0n,\n     *    gasLimit: 30000000n,\n     *    gasUsed: 0n,\n     *    timestamp: 1658281638n,\n     *    extraData: '0x',\n     *    mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    nonce: 0n,\n     *    totalDifficulty: 1n,\n     *    baseFeePerGas: 1000000000n,\n     *    size: 514n,\n     *    transactions: [],\n     *    uncles: []\n     *  }\n     *\n     * web3.eth.getUncle(\n     *      \"0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d\",\n     *      1,\n     *      { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > {\n     *    hash: '0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d',\n     *    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n     *    miner: '0x0000000000000000000000000000000000000000',\n     *    stateRoot: '0x5ed9882897d363c4632a6e67fba6203df61bd994813dcf048da59be442a9c6c4',\n     *    transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *    difficulty: 1,\n     *    number: 0,\n     *    gasLimit: 30000000,\n     *    gasUsed: 0,\n     *    timestamp: 1658281638,\n     *    extraData: '0x',\n     *    mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    nonce: 0,\n     *    totalDifficulty: 1,\n     *    baseFeePerGas: 1000000000,\n     *    size: 514,\n     *    transactions: [],\n     *    uncles: []\n     *  }\n     * ```\n     */\n    getUncle() {\n        return __awaiter(this, arguments, void 0, function* (block = this.defaultBlock, uncleIndex, returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.getUncle(this, block, uncleIndex, returnFormat);\n        });\n    }\n    /**\n     * @param transactionHash The hash of the desired transaction.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The desired transaction object.\n     *\n     * ```ts\n     * web3.eth.getTransaction('0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc').then(console.log);\n     * {\n     *    hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n     *    type: 0n,\n     *    nonce: 0n,\n     *    blockHash: '0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00',\n     *    blockNumber: 1n,\n     *    transactionIndex: 0n,\n     *    from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *    to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *    value: 1n,\n     *    gas: 90000n,\n     *    gasPrice: 2000000000n,\n     *    input: '0x',\n     *    v: 2709n,\n     *    r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n     *    s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n     *  }\n     *\n     * web3.eth.getTransaction(\n     *     web3.utils.hexToBytes(\"0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400\"),\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * {\n     *    hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n     *    type: 0,\n     *    nonce: 0,\n     *    blockHash: '0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00',\n     *    blockNumber: 1,\n     *    transactionIndex: 0,\n     *    from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *    to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *    value: 1,\n     *    gas: 90000,\n     *    gasPrice: 2000000000,\n     *    input: '0x',\n     *    v: 2709,\n     *    r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n     *    s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n     *  }\n     * ```\n     */\n    getTransaction(transactionHash_1) {\n        return __awaiter(this, arguments, void 0, function* (transactionHash, returnFormat = this.defaultReturnFormat) {\n            const response = yield rpcMethodsWrappers.getTransaction(this, transactionHash, returnFormat);\n            if (!response)\n                throw new TransactionNotFound();\n            return response;\n        });\n    }\n    /**\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns A list of pending transactions.\n     *\n     * ```ts\n     * web3.eth.getPendingTransactions().then(console.log);\n     * > [\n     *      {\n     *          hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n     *          type: 0n,\n     *          nonce: 0n,\n     *          blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *          blockNumber: null,\n     *          transactionIndex: 0n,\n     *          from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *          to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *          value: 1n,\n     *          gas: 90000n,\n     *          gasPrice: 2000000000n,\n     *          input: '0x',\n     *          v: 2709n,\n     *          r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n     *          s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n     *      },\n     *      {\n     *          hash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',\n     *          type: 0n,\n     *          nonce: 1n,\n     *          blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *          blockNumber: null,\n     *          transactionIndex: 0n,\n     *          from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *          to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *          value: 1n,\n     *          gas: 90000n,\n     *          gasPrice: 2000000000n,\n     *          input: '0x',\n     *          v: 2710n,\n     *          r: '0x55ac19fade21db035a1b7ea0a8d49e265e05dbb926e75f273f836ad67ce5c96a',\n     *          s: '0x6550036a7c3fd426d5c3d35d96a7075cd673957620b7889846a980d2d017ec08'\n     *      }\n     *   ]\n     *\n     * * web3.eth.getPendingTransactions({ number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > [\n     *      {\n     *          hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n     *          type: 0,\n     *          nonce: 0,\n     *          blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *          blockNumber: null,\n     *          transactionIndex: 0,\n     *          from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *          to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *          value: 1,\n     *          gas: 90000,\n     *          gasPrice: 2000000000,\n     *          input: '0x',\n     *          v: 2709,\n     *          r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n     *          s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n     *      },\n     *      {\n     *          hash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',\n     *          type: 0,\n     *          nonce: 1,\n     *          blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *          blockNumber: null,\n     *          transactionIndex: 0,\n     *          from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *          to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *          value: 1,\n     *          gas: 90000,\n     *          gasPrice: 2000000000,\n     *          input: '0x',\n     *          v: 2710,\n     *          r: '0x55ac19fade21db035a1b7ea0a8d49e265e05dbb926e75f273f836ad67ce5c96a',\n     *          s: '0x6550036a7c3fd426d5c3d35d96a7075cd673957620b7889846a980d2d017ec08'\n     *      }\n     *   ]\n     * ```\n     */\n    getPendingTransactions() {\n        return __awaiter(this, arguments, void 0, function* (returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.getPendingTransactions(this, returnFormat);\n        });\n    }\n    /**\n     * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.\n     * @param transactionIndex The index position of the transaction.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The desired transaction object.\n     *\n     * ```ts\n     * web3.eth.getTransactionFromBlock('0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00', 0).then(console.log);\n     * {\n     *    hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n     *    type: 0n,\n     *    nonce: 0n,\n     *    blockHash: '0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00',\n     *    blockNumber: 1n,\n     *    transactionIndex: 0n,\n     *    from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *    to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *    value: 1n,\n     *    gas: 90000n,\n     *    gasPrice: 2000000000n,\n     *    input: '0x',\n     *    v: 2709n,\n     *    r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n     *    s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n     *  }\n     *\n     * web3.eth.getTransactionFromBlock(\n     *     hexToBytes(\"0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400\"),\n     *     0,\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * {\n     *    hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n     *    type: 0,\n     *    nonce: 0,\n     *    blockHash: '0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00',\n     *    blockNumber: 1,\n     *    transactionIndex: 0,\n     *    from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *    to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *    value: 1,\n     *    gas: 90000,\n     *    gasPrice: 2000000000,\n     *    input: '0x',\n     *    v: 2709,\n     *    r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n     *    s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n     *  }\n     * ```\n     */\n    getTransactionFromBlock() {\n        return __awaiter(this, arguments, void 0, function* (block = this.defaultBlock, transactionIndex, returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.getTransactionFromBlock(this, block, transactionIndex, returnFormat);\n        });\n    }\n    /**\n     * @param transactionHash Hash of the transaction to retrieve the receipt for.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The desired {@link TransactionReceipt} object.\n     *\n     * ```ts\n     * web3.eth.getTransactionReceipt(\"0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\").then(console.log);\n     * > {\n     *      transactionHash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',\n     *      transactionIndex: 0n,\n     *      blockNumber: 2n,\n     *      blockHash: '0xeb1565a08b23429552dafa92e32409f42eb43944f7611963c63ce40e7243941a',\n     *      from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *      cumulativeGasUsed: 21000n,\n     *      gasUsed: 21000n,\n     *      logs: [],\n     *      logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *      status: 1n,\n     *      effectiveGasPrice: 2000000000n,\n     *      type: 0n\n     *  }\n     *\n     * web3.eth.getTransactionReceipt(\n     *      \"0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\",\n     *      { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > {\n     *      transactionHash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',\n     *      transactionIndex: 0,\n     *      blockNumber: 2,\n     *      blockHash: '0xeb1565a08b23429552dafa92e32409f42eb43944f7611963c63ce40e7243941a',\n     *      from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *      cumulativeGasUsed: 21000,\n     *      gasUsed: 21000,\n     *      logs: [],\n     *      logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *      status: 1,\n     *      effectiveGasPrice: 2000000000,\n     *      type: 0n\n     *  }\n     * ```\n     */\n    getTransactionReceipt(transactionHash_1) {\n        return __awaiter(this, arguments, void 0, function* (transactionHash, returnFormat = this.defaultReturnFormat) {\n            const response = yield rpcMethodsWrappers.getTransactionReceipt(this, transactionHash, returnFormat);\n            if (!response)\n                throw new TransactionNotFound();\n            return response;\n        });\n    }\n    /**\n     * @param address The address to get the number of transactions for.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) Specifies what block to use as the current state for the query.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The number of transactions sent from the provided address.\n     *\n     * ```ts\n     * web3.eth.getTransactionCount(\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\").then(console.log);\n     * > 1n\n     *\n     * web3.eth.getTransactionCount(\n     *     \"0x407d73d8a49eeb85d32cf465507dd71d507100c1\",\n     *     undefined,\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > 1\n     * ```\n     */\n    getTransactionCount(address_1) {\n        return __awaiter(this, arguments, void 0, function* (address, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.getTransactionCount(this, address, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * @param transaction The {@link Transaction}, {@link TransactionWithFromLocalWalletIndex}, {@link TransactionWithToLocalWalletIndex} or {@link TransactionWithFromAndToLocalWalletIndex} to send. __Note:__ In the `to` and `from` fields when hex strings are used, it is assumed they are addresses, for any other form (number, string number, etc.) it is assumed they are wallet indexes.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @param options A configuration object used to change the behavior of the `sendTransaction` method.\n     * @returns If `await`ed or `.then`d (i.e. the promise resolves), the transaction hash is returned.\n     * ```ts\n     * const transaction = {\n     *   from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',\n     *   to: '0x6f1DF96865D09d21e8f3f9a7fbA3b17A11c7C53C',\n     *   value: '0x1'\n     * }\n     *\n     * const transactionReceipt = await web3.eth.sendTransaction(transaction);\n     * console.log(transactionReceipt);\n     * > {\n     *      blockHash: '0x39cee0da843293ae3136cee0de4c0803745868b6e72b7cd05fba395bffa0ee85',\n     *      blockNumber: 6659547n,\n     *      cumulativeGasUsed: 1029036n,\n     *      effectiveGasPrice: 6765796845n,\n     *      from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',\n     *      gasUsed: 21000n,\n     *      logs: [],\n     *      logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *      status: 1n,\n     *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *      transactionHash: '0x619de868dd73c07bd0c096adcd405c93c1e924fdf741e684a127a52324c28bb9',\n     *      transactionIndex: 16n,\n     *      type: 2n\n     *}\n     *\n     * web3.eth.sendTransaction(transaction).then(console.log);\n     * > {\n     *      blockHash: '0x39cee0da843293ae3136cee0de4c0803745868b6e72b7cd05fba395bffa0ee85',\n     *      blockNumber: 6659547n,\n     *      cumulativeGasUsed: 1029036n,\n     *      effectiveGasPrice: 6765796845n,\n     *      from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',\n     *      gasUsed: 21000n,\n     *      logs: [],\n     *      logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *      status: 1n,\n     *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *      transactionHash: '0x619de868dd73c07bd0c096adcd405c93c1e924fdf741e684a127a52324c28bb9',\n     *      transactionIndex: 16n,\n     *      type: 2n\n     *}\n     *\n     * web3.eth.sendTransaction(transaction).catch(console.log);\n     * > <Some TransactionError>\n     *\n     * // Example using options.ignoreGasPricing = true\n     * web3.eth.sendTransaction(transaction, undefined, { ignoreGasPricing: true }).then(console.log);\n     * > {\n     *      blockHash: '0x39cee0da843293ae3136cee0de4c0803745868b6e72b7cd05fba395bffa0ee85',\n     *      blockNumber: 6659547n,\n     *      cumulativeGasUsed: 1029036n,\n     *      effectiveGasPrice: 6765796845n,\n     *      from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',\n     *      gasUsed: 21000n,\n     *      logs: [],\n     *      logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *      status: 1n,\n     *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *      transactionHash: '0x619de868dd73c07bd0c096adcd405c93c1e924fdf741e684a127a52324c28bb9',\n     *      transactionIndex: 16n,\n     *      type: 2n\n     *}\n     * ```\n     *\n     *\n     * Otherwise, a {@link Web3PromiEvent} is returned which has several events than can be listened to using the `.on` syntax, such as:\n     * - `sending`\n     * ```ts\n     * web3.eth.sendTransaction(transaction).on('sending', transactionToBeSent => console.log(transactionToBeSent));\n     * > {\n     *      from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',\n     *      to: '0x6f1DF96865D09d21e8f3f9a7fbA3b17A11c7C53C',\n     *      value: '0x1',\n     *      gasPrice: '0x77359400',\n     *      maxPriorityFeePerGas: undefined,\n     *      maxFeePerGas: undefined\n     * }\n     * ```\n     * - `sent`\n     * ```ts\n     * web3.eth.sendTransaction(transaction).on('sent', sentTransaction => console.log(sentTransaction));\n     * > {\n     *      from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',\n     *      to: '0x6f1DF96865D09d21e8f3f9a7fbA3b17A11c7C53C',\n     *      value: '0x1',\n     *      gasPrice: '0x77359400',\n     *      maxPriorityFeePerGas: undefined,\n     *      maxFeePerGas: undefined\n     * }\n     * ```\n     * - `transactionHash`\n     * ```ts\n     * web3.eth.sendTransaction(transaction).on('transactionHash', transactionHash => console.log(transactionHash));\n     * > 0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\n     * ```\n     * - `receipt`\n     * ```ts\n     * web3.eth.sendTransaction(transaction).on('receipt', receipt => console.log(receipt));\n     * > {\n     *      transactionHash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',\n     *      transactionIndex: 0n,\n     *      blockNumber: 2n,\n     *      blockHash: '0xeb1565a08b23429552dafa92e32409f42eb43944f7611963c63ce40e7243941a',\n     *      from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *      cumulativeGasUsed: 21000n,\n     *      gasUsed: 21000n,\n     *      logs: [],\n     *      logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *      status: 1n,\n     *      effectiveGasPrice: 2000000000n,\n     *      type: 0n\n     * }\n     * ```\n     * - `confirmation`\n     * ```ts\n     * web3.eth.sendTransaction(transaction).on('confirmation', confirmation => console.log(confirmation));\n     * > {\n     *      confirmations: 1n,\n     *      receipt: {\n     *         transactionHash: '0xb4a3a35ae0f3e77ef0ff7be42010d948d011b21a4e341072ee18717b67e99ab8',\n     *         transactionIndex: 0n,\n     *         blockNumber: 5n,\n     *         blockHash: '0xb57fbe6f145cefd86a305a9a024a4351d15d4d39607d7af53d69a319bc3b5548',\n     *         from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *         to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *         cumulativeGasUsed: 21000n,\n     *         gasUsed: 21000n,\n     *         logs: [],\n     *         logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *         status: 1n,\n     *         effectiveGasPrice: 2000000000n,\n     *         type: 0n\n     *      },\n     *      latestBlockHash: '0xb57fbe6f145cefd86a305a9a024a4351d15d4d39607d7af53d69a319bc3b5548'\n     * }\n     * ```\n     * - `error`\n     * ```ts\n     * web3.eth.sendTransaction(transaction).on('error', error => console.log);\n     * > <Some TransactionError>\n     * ```\n     */\n    sendTransaction(transaction, returnFormat = this.defaultReturnFormat, options) {\n        return rpcMethodsWrappers.sendTransaction(this, transaction, returnFormat, options, this.transactionMiddleware);\n    }\n    /**\n     * @param transaction Signed transaction in one of the valid {@link Bytes} format.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @param options A configuration object used to change the behavior of the method\n     * @returns If `await`ed or `.then`d (i.e. the promise resolves), the transaction hash is returned.\n     * ```ts\n     * const signedTransaction = \"0xf86580843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a95a03a42d53ca5b71f845e1cd4c65359b05446a85d16881372d3bfaab8980935cb04a0711497bc8dd3b541152e2fed14fe650a647f1f0edab0d386ad9506f0e642410f\"\n     *\n     * const transactionHash = await web3.eth.sendSignedTransaction(signedTransaction);\n     * console.log(transactionHash);\n     * > 0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700\n     *\n     * web3.eth.sendSignedTransaction(signedTransaction).then(console.log);\n     * > 0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700\n     *\n     * web3.eth.sendSignedTransaction(signedTransaction).catch(console.log);\n     * > <Some TransactionError>\n     * ```\n     *\n     *\n     * Otherwise, a {@link Web3PromiEvent} is returned which has several events than can be listened to using the `.on` syntax, such as:\n     * - `sending`\n     * ```ts\n     * web3.eth.sendSignedTransaction(signedTransaction).on('sending', transactionToBeSent => console.log(transactionToBeSent));\n     * > \"0xf86580843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a95a03a42d53ca5b71f845e1cd4c65359b05446a85d16881372d3bfaab8980935cb04a0711497bc8dd3b541152e2fed14fe650a647f1f0edab0d386ad9506f0e642410f\"\n     * ```\n     * - `sent`\n     * ```ts\n     * web3.eth.sendSignedTransaction(signedTransaction).on('sent', sentTransaction => console.log(sentTransaction));\n     * > \"0xf86580843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a95a03a42d53ca5b71f845e1cd4c65359b05446a85d16881372d3bfaab8980935cb04a0711497bc8dd3b541152e2fed14fe650a647f1f0edab0d386ad9506f0e642410f\"\n     * ```\n     * - `transactionHash`\n     * ```ts\n     * web3.eth.sendSignedTransaction(signedTransaction).on('transactionHash', transactionHash => console.log(transactionHash));\n     * > 0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700\n     * ```\n     * - `receipt`\n     * ```ts\n     * web3.eth.sendSignedTransaction(signedTransaction).on('receipt', receipt => console.log(receipt));\n     * > {\n     *      blockHash: '0xff2b1687995d81066361bc6affe4455746120a7d4bb75fc938211a2692a50081',\n     *      blockNumber: 1n,\n     *      cumulativeGasUsed: 21000n,\n     *      effectiveGasPrice: 1000000001n,\n     *      from: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n     *      gasUsed: 21000n,\n     *      logs: [],\n     *      logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *      status: 1n,\n     *      to: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n     *      transactionHash: '0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700',\n     *      transactionIndex: 0n,\n     *      type: 0n\n     * }\n     * ```\n     * - `confirmation`\n     * ```ts\n     * web3.eth.sendSignedTransaction(signedTransaction).on('confirmation', confirmation => console.log(confirmation));\n     * > {\n     *     confirmations: 1n,\n     *     receipt: {\n     *          blockHash: '0xff2b1687995d81066361bc6affe4455746120a7d4bb75fc938211a2692a50081',\n     *          blockNumber: 1n,\n     *          cumulativeGasUsed: 21000n,\n     *          effectiveGasPrice: 1000000001n,\n     *          from: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n     *          gasUsed: 21000n,\n     *          logs: [],\n     *          logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *          status: 1n,\n     *          to: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n     *          transactionHash: '0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700',\n     *          transactionIndex: 0n,\n     *          type: 0n\n     *     },\n     *     latestBlockHash: '0xff2b1687995d81066361bc6affe4455746120a7d4bb75fc938211a2692a50081'\n     * }\n     * ```\n     * - `error`\n     * ```ts\n     * web3.eth.sendSignedTransaction(signedTransaction).on('error', error => console.log(error));\n     * > <Some TransactionError>\n     * ```\n     */\n    sendSignedTransaction(transaction, returnFormat = this.defaultReturnFormat, options) {\n        return rpcMethodsWrappers.sendSignedTransaction(this, transaction, returnFormat, options);\n    }\n    /**\n     * @param message Data to sign in one of the valid {@link Bytes} format.\n     * @param address Address to sign data with, can be an address or the index of a local wallet.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The signed `message`.\n     *\n     * ```ts\n     * // Using an unlocked account managed by connected RPC client\n     * web3.eth.sign(\"0x48656c6c6f20776f726c64\", \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\").then(console.log);\n     * > \"0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400\"\n     *\n     * // Using an unlocked account managed by connected RPC client\n     * web3.eth.sign(\"0x48656c6c6f20776f726c64\", \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\", { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.UINT8ARRAY }).then(console.log);\n     * > Uint8Array(65) [\n     *    48, 117,  94, 214,  83, 150, 250, 207, 134, 197,  62,\n     *    98,  23, 197,  43,  77, 174, 190, 114, 170,  73,  65,\n     *   216, 150,  53,  64, 157, 228, 201, 199, 249,  70, 109,\n     *    78, 154, 174, 199, 151, 127,   5, 233,  35, 136, 155,\n     *    51, 192, 208, 221,  39, 215,  34, 107, 110, 111,  86,\n     *   206, 115, 116, 101, 197, 207, 208,  75, 228,   0\n     * ]\n     * ```\n     *\n     * // Using an indexed account managed by local Web3 wallet\n     * web3.eth.sign(\"0x48656c6c6f20776f726c64\", 0).then(console.log);\n     * > \"0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400\"\n     */\n    sign(message_1, addressOrIndex_1) {\n        return __awaiter(this, arguments, void 0, function* (message, addressOrIndex, returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.sign(this, message, addressOrIndex, returnFormat);\n        });\n    }\n    /**\n     * @param transaction The transaction object to sign.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns {@link SignedTransactionInfoAPI}, an object containing the [RLP](https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/#top) encoded signed transaction (accessed via the `raw` property) and the signed transaction object (accessed via the `tx` property).\n     *\n     * ```ts\n     * const transaction = {\n     *      from: '0xe899f0130FD099c0b896B2cE4E5E15A25b23139a',\n     *      to: '0xe899f0130FD099c0b896B2cE4E5E15A25b23139a',\n     *      value: '0x1',\n     *      gas: '21000',\n     *      gasPrice: await web3Eth.getGasPrice(),\n     *      nonce: '0x1',\n     *      type: '0x0'\n     * }\n     *\n     * web3.eth.signTransaction(transaction).then(console.log);\n     * > {\n     *   raw: '0xf86501843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a96a0adb3468dbb4dce89fe1785ea9182e85fb56b399b378f82b93af7a8a12a4f9679a027d37d736e9bcf00121f78b2d10e4404fa5c45856d62b746574345f5cd278097',\n     *   tx: {\n     *      type: 0n,\n     *      nonce: 1n,\n     *      gasPrice: 1000000001n,\n     *      gas: 21000n,\n     *      value: 1n,\n     *      v: 2710n,\n     *      r: '0xadb3468dbb4dce89fe1785ea9182e85fb56b399b378f82b93af7a8a12a4f9679',\n     *      s: '0x27d37d736e9bcf00121f78b2d10e4404fa5c45856d62b746574345f5cd278097',\n     *      to: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n     *      data: '0x'\n     *   }\n     * }\n     *\n     * web3.eth.signTransaction(transaction, { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > {\n     *   raw: '0xf86501843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a96a0adb3468dbb4dce89fe1785ea9182e85fb56b399b378f82b93af7a8a12a4f9679a027d37d736e9bcf00121f78b2d10e4404fa5c45856d62b746574345f5cd278097',\n     *   tx: {\n     *      type: 0,\n     *      nonce: 1,\n     *      gasPrice: 1000000001,\n     *      gas: 21000,\n     *      value: 1,\n     *      v: 2710,\n     *      r: '0xadb3468dbb4dce89fe1785ea9182e85fb56b399b378f82b93af7a8a12a4f9679',\n     *      s: '0x27d37d736e9bcf00121f78b2d10e4404fa5c45856d62b746574345f5cd278097',\n     *      to: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n     *      data: '0x'\n     *   }\n     * }\n     * ```\n     */\n    signTransaction(transaction_1) {\n        return __awaiter(this, arguments, void 0, function* (transaction, returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.signTransaction(this, transaction, returnFormat);\n        });\n    }\n    // TODO Decide what to do with transaction.to\n    // https://github.com/ChainSafe/web3.js/pull/4525#issuecomment-982330076\n    /**\n     * Executes a message call within the EVM without creating a transaction.\n     * It does not publish anything to the blockchain and does not consume any gas.\n     *\n     * @param transaction - A transaction object where all properties are optional except `to`, however it's recommended to include the `from` property or it may default to `0x0000000000000000000000000000000000000000` depending on your node or provider.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) - Specifies what block to use as the current state of the blockchain while processing the transaction.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     * @returns The returned data of the call, e.g. a smart contract function's return value.\n     */\n    call(transaction_1) {\n        return __awaiter(this, arguments, void 0, function* (transaction, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.call(this, transaction, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * Simulates the transaction within the EVM to estimate the amount of gas to be used by the transaction.\n     * The transaction will not be added to the blockchain, and actual gas usage can vary when interacting\n     * with a contract as a result of updating the contract's state.\n     *\n     * @param transaction The {@link Transaction} object to estimate the gas for.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) - Specifies what block to use as the current state of the blockchain while processing the gas estimation.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     * @returns The used gas for the simulated transaction execution.\n     *\n     * ```ts\n     * const transaction = {\n     *       from: '0xe899f0130FD099c0b896B2cE4E5E15A25b23139a',\n     *       to: '0xe899f0130FD099c0b896B2cE4E5E15A25b23139a',\n     *       value: '0x1',\n     *       nonce: '0x1',\n     *       type: '0x0'\n     * }\n     *\n     * web3.eth.estimateGas(transaction).then(console.log);\n     * > 21000n\n     *\n     * web3.eth.estimateGas(transaction, { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > 21000\n     * ```\n     */\n    estimateGas(transaction_1) {\n        return __awaiter(this, arguments, void 0, function* (transaction, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.estimateGas(this, transaction, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * Gets past logs, matching the provided `filter`.\n     *\n     * @param filter A {@link Filter} object containing the properties for the desired logs.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     * @returns {@link FilterResultsAPI}, an array of {@link Log} objects.\n     *\n     * ```ts\n     * web3.eth.getPastLogs({\n     *      address: \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\",\n     *      topics: [\"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\"]\n     *  }).then(console.log);\n     * > [{\n     *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n     *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n     *       logIndex: 0n,\n     *       transactionIndex: 0n,\n     *       transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n     *       blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n     *       blockNumber: 1234n,\n     *       address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n     *   },\n     *   {...}]\n     *\n     * web3.eth.getPastLogs(\n     *     {\n     *       address: \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\",\n     *       topics: [\"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\"]\n     *     },\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > [{\n     *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n     *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n     *       logIndex: 0,\n     *       transactionIndex: 0,\n     *       transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n     *       blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n     *       blockNumber: 1234,\n     *       address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n     *   },\n     *   {...}]\n     * ```\n     */\n    getPastLogs(filter_1) {\n        return __awaiter(this, arguments, void 0, function* (filter, returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.getLogs(this, filter, returnFormat);\n        });\n    }\n    /**\n     * Gets work for miners to mine on. Returns the hash of the current block, the seedHash, and the boundary condition to be met ('target').\n     *\n     * @returns The mining work as an array of strings with the following structure:\n     *\n     * String 32 Bytes - at index 0: current block header pow-hash\n     * String 32 Bytes - at index 1: the seed hash used for the DAG.\n     * String 32 Bytes - at index 2: the boundary condition ('target'), 2^256 / difficulty.\n     *\n     * ```ts\n     * web3.eth.getWork().then(console.log);\n     * > [\n     *     \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\",\n     *     \"0x5EED00000000000000000000000000005EED0000000000000000000000000000\",\n     *     \"0xd1ff1c01710000000000000000000000d1ff1c01710000000000000000000000\"\n     * ]\n     * ```\n     */\n    getWork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return ethRpcMethods.getWork(this.requestManager);\n        });\n    }\n    /**\n     * Used for submitting a proof-of-work solution.\n     *\n     * @param nonce The nonce found (8 bytes).\n     * @param hash  The header’s pow-hash (32 bytes).\n     * @param digest The mix digest (32 bytes).\n     * @returns Returns `true` if the provided solution is valid, otherwise `false`.\n     *\n     * ```ts\n     * web3.eth.submitWork([\n     *     \"0x0000000000000001\",\n     *     \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\",\n     *     \"0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000\"\n     * ]).then(console.log);\n     * > true\n     * ```\n     */\n    submitWork(nonce, hash, digest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return ethRpcMethods.submitWork(this.requestManager, nonce, hash, digest);\n        });\n    }\n    // TODO - Format addresses\n    /**\n     * This method will request/enable the accounts from the current environment and for supporting [EIP 1102](https://eips.ethereum.org/EIPS/eip-1102)\n     * This method will only work if you’re using the injected provider from a application like Metamask, Status or TrustWallet.\n     * It doesn’t work if you’re connected to a node with a default Web3.js provider (WebsocketProvider, HttpProvider and IpcProvider).\n     * For more information about the behavior of this method please read [EIP-1102](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1102.md): Opt-in account exposure.\n     *\n     * @returns An array of enabled accounts.\n     *\n     * ```ts\n     * web3.eth.requestAccounts().then(console.log);\n     * > ['0aae0B295369a9FD31d5F28D9Ec85E40f4cb692BAf', '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe']\n     * ```\n     */\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return ethRpcMethods.requestAccounts(this.requestManager);\n        });\n    }\n    /**\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     * @returns The chain ID of the current connected node as described in the [EIP-695](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-695.md).\n     *\n     * ```ts\n     * web3.eth.getChainId().then(console.log);\n     * > 61n\n     *\n     * web3.eth.getChainId({ number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > 61\n     * ```\n     */\n    getChainId() {\n        return __awaiter(this, arguments, void 0, function* (returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.getChainId(this, returnFormat);\n        });\n    }\n    /**\n     * @returns The current client version.\n     *\n     * ```ts\n     * web3.eth.getNodeInfo().then(console.log);\n     * > \"Mist/v0.9.3/darwin/go1.4.1\"\n     * ```\n     */\n    getNodeInfo() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return ethRpcMethods.getNodeInfo(this.requestManager);\n        });\n    }\n    /**\n     * @param address The Address of the account or contract.\n     * @param storageKeys Array of storage-keys which should be proofed and included. See {@link web3.getStorageAt}.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) - Specifies what block to use as the current state of the blockchain while processing the gas estimation.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     * @returns The account and storage-values of the specified account including the Merkle-proof as described in [EIP-1186](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1186.md).\n     *\n     * ```ts\n     * web3.eth.getProof(\n     *     \"0x1234567890123456789012345678901234567890\",\n     *     [\"0x0000000000000000000000000000000000000000000000000000000000000000\",\"0x0000000000000000000000000000000000000000000000000000000000000001\"],\n     *     \"latest\"\n     * ).then(console.log);\n     * > {\n     *     \"address\": \"0x1234567890123456789012345678901234567890\",\n     *     \"accountProof\": [\n     *         \"0xf90211a090dcaf88c40c7bbc95a912cbdde67c175767b31173df9ee4b0d733bfdd511c43a0babe369f6b12092f49181ae04ca173fb68d1a5456f18d20fa32cba73954052bda0473ecf8a7e36a829e75039a3b055e51b8332cbf03324ab4af2066bbd6fbf0021a0bbda34753d7aa6c38e603f360244e8f59611921d9e1f128372fec0d586d4f9e0a04e44caecff45c9891f74f6a2156735886eedf6f1a733628ebc802ec79d844648a0a5f3f2f7542148c973977c8a1e154c4300fec92f755f7846f1b734d3ab1d90e7a0e823850f50bf72baae9d1733a36a444ab65d0a6faaba404f0583ce0ca4dad92da0f7a00cbe7d4b30b11faea3ae61b7f1f2b315b61d9f6bd68bfe587ad0eeceb721a07117ef9fc932f1a88e908eaead8565c19b5645dc9e5b1b6e841c5edbdfd71681a069eb2de283f32c11f859d7bcf93da23990d3e662935ed4d6b39ce3673ec84472a0203d26456312bbc4da5cd293b75b840fc5045e493d6f904d180823ec22bfed8ea09287b5c21f2254af4e64fca76acc5cd87399c7f1ede818db4326c98ce2dc2208a06fc2d754e304c48ce6a517753c62b1a9c1d5925b89707486d7fc08919e0a94eca07b1c54f15e299bd58bdfef9741538c7828b5d7d11a489f9c20d052b3471df475a051f9dd3739a927c89e357580a4c97b40234aa01ed3d5e0390dc982a7975880a0a089d613f26159af43616fd9455bb461f4869bfede26f2130835ed067a8b967bfb80\",\n     *         \"0xf90211a0395d87a95873cd98c21cf1df9421af03f7247880a2554e20738eec2c7507a494a0bcf6546339a1e7e14eb8fb572a968d217d2a0d1f3bc4257b22ef5333e9e4433ca012ae12498af8b2752c99efce07f3feef8ec910493be749acd63822c3558e6671a0dbf51303afdc36fc0c2d68a9bb05dab4f4917e7531e4a37ab0a153472d1b86e2a0ae90b50f067d9a2244e3d975233c0a0558c39ee152969f6678790abf773a9621a01d65cd682cc1be7c5e38d8da5c942e0a73eeaef10f387340a40a106699d494c3a06163b53d956c55544390c13634ea9aa75309f4fd866f312586942daf0f60fb37a058a52c1e858b1382a8893eb9c1f111f266eb9e21e6137aff0dddea243a567000a037b4b100761e02de63ea5f1fcfcf43e81a372dafb4419d126342136d329b7a7ba032472415864b08f808ba4374092003c8d7c40a9f7f9fe9cc8291f62538e1cc14a074e238ff5ec96b810364515551344100138916594d6af966170ff326a092fab0a0d31ac4eef14a79845200a496662e92186ca8b55e29ed0f9f59dbc6b521b116fea090607784fe738458b63c1942bba7c0321ae77e18df4961b2bc66727ea996464ea078f757653c1b63f72aff3dcc3f2a2e4c8cb4a9d36d1117c742833c84e20de994a0f78407de07f4b4cb4f899dfb95eedeb4049aeb5fc1635d65cf2f2f4dfd25d1d7a0862037513ba9d45354dd3e36264aceb2b862ac79d2050f14c95657e43a51b85c80\",\n     *         \"0xf90171a04ad705ea7bf04339fa36b124fa221379bd5a38ffe9a6112cb2d94be3a437b879a08e45b5f72e8149c01efcb71429841d6a8879d4bbe27335604a5bff8dfdf85dcea00313d9b2f7c03733d6549ea3b810e5262ed844ea12f70993d87d3e0f04e3979ea0b59e3cdd6750fa8b15164612a5cb6567cdfb386d4e0137fccee5f35ab55d0efda0fe6db56e42f2057a071c980a778d9a0b61038f269dd74a0e90155b3f40f14364a08538587f2378a0849f9608942cf481da4120c360f8391bbcc225d811823c6432a026eac94e755534e16f9552e73025d6d9c30d1d7682a4cb5bd7741ddabfd48c50a041557da9a74ca68da793e743e81e2029b2835e1cc16e9e25bd0c1e89d4ccad6980a041dda0a40a21ade3a20fcd1a4abb2a42b74e9a32b02424ff8db4ea708a5e0fb9a09aaf8326a51f613607a8685f57458329b41e938bb761131a5747e066b81a0a16808080a022e6cef138e16d2272ef58434ddf49260dc1de1f8ad6dfca3da5d2a92aaaadc58080\",\n     *         \"0xf851808080a009833150c367df138f1538689984b8a84fc55692d3d41fe4d1e5720ff5483a6980808080808080808080a0a319c1c415b271afc0adcb664e67738d103ac168e0bc0b7bd2da7966165cb9518080\"\n     *     ],\n     *     \"balance\": 0n,\n     *     \"codeHash\": \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\",\n     *     \"nonce\": 0n,\n     *     \"storageHash\": \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\n     *     \"storageProof\": [\n     *         {\n     *             \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n     *             \"value\": 0n,\n     *             \"proof\": []\n     *         },\n     *         {\n     *             \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000001\",\n     *             \"value\": 0n,\n     *             \"proof\": []\n     *         }\n     *     ]\n     * }\n     *\n     * web3.eth.getProof(\n     *     \"0x1234567890123456789012345678901234567890\",\n     *     [\"0x0000000000000000000000000000000000000000000000000000000000000000\",\"0x0000000000000000000000000000000000000000000000000000000000000001\"],\n     *     undefined,\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > {\n     *     \"address\": \"0x1234567890123456789012345678901234567890\",\n     *     \"accountProof\": [\n     *         \"0xf90211a090dcaf88c40c7bbc95a912cbdde67c175767b31173df9ee4b0d733bfdd511c43a0babe369f6b12092f49181ae04ca173fb68d1a5456f18d20fa32cba73954052bda0473ecf8a7e36a829e75039a3b055e51b8332cbf03324ab4af2066bbd6fbf0021a0bbda34753d7aa6c38e603f360244e8f59611921d9e1f128372fec0d586d4f9e0a04e44caecff45c9891f74f6a2156735886eedf6f1a733628ebc802ec79d844648a0a5f3f2f7542148c973977c8a1e154c4300fec92f755f7846f1b734d3ab1d90e7a0e823850f50bf72baae9d1733a36a444ab65d0a6faaba404f0583ce0ca4dad92da0f7a00cbe7d4b30b11faea3ae61b7f1f2b315b61d9f6bd68bfe587ad0eeceb721a07117ef9fc932f1a88e908eaead8565c19b5645dc9e5b1b6e841c5edbdfd71681a069eb2de283f32c11f859d7bcf93da23990d3e662935ed4d6b39ce3673ec84472a0203d26456312bbc4da5cd293b75b840fc5045e493d6f904d180823ec22bfed8ea09287b5c21f2254af4e64fca76acc5cd87399c7f1ede818db4326c98ce2dc2208a06fc2d754e304c48ce6a517753c62b1a9c1d5925b89707486d7fc08919e0a94eca07b1c54f15e299bd58bdfef9741538c7828b5d7d11a489f9c20d052b3471df475a051f9dd3739a927c89e357580a4c97b40234aa01ed3d5e0390dc982a7975880a0a089d613f26159af43616fd9455bb461f4869bfede26f2130835ed067a8b967bfb80\",\n     *         \"0xf90211a0395d87a95873cd98c21cf1df9421af03f7247880a2554e20738eec2c7507a494a0bcf6546339a1e7e14eb8fb572a968d217d2a0d1f3bc4257b22ef5333e9e4433ca012ae12498af8b2752c99efce07f3feef8ec910493be749acd63822c3558e6671a0dbf51303afdc36fc0c2d68a9bb05dab4f4917e7531e4a37ab0a153472d1b86e2a0ae90b50f067d9a2244e3d975233c0a0558c39ee152969f6678790abf773a9621a01d65cd682cc1be7c5e38d8da5c942e0a73eeaef10f387340a40a106699d494c3a06163b53d956c55544390c13634ea9aa75309f4fd866f312586942daf0f60fb37a058a52c1e858b1382a8893eb9c1f111f266eb9e21e6137aff0dddea243a567000a037b4b100761e02de63ea5f1fcfcf43e81a372dafb4419d126342136d329b7a7ba032472415864b08f808ba4374092003c8d7c40a9f7f9fe9cc8291f62538e1cc14a074e238ff5ec96b810364515551344100138916594d6af966170ff326a092fab0a0d31ac4eef14a79845200a496662e92186ca8b55e29ed0f9f59dbc6b521b116fea090607784fe738458b63c1942bba7c0321ae77e18df4961b2bc66727ea996464ea078f757653c1b63f72aff3dcc3f2a2e4c8cb4a9d36d1117c742833c84e20de994a0f78407de07f4b4cb4f899dfb95eedeb4049aeb5fc1635d65cf2f2f4dfd25d1d7a0862037513ba9d45354dd3e36264aceb2b862ac79d2050f14c95657e43a51b85c80\",\n     *         \"0xf90171a04ad705ea7bf04339fa36b124fa221379bd5a38ffe9a6112cb2d94be3a437b879a08e45b5f72e8149c01efcb71429841d6a8879d4bbe27335604a5bff8dfdf85dcea00313d9b2f7c03733d6549ea3b810e5262ed844ea12f70993d87d3e0f04e3979ea0b59e3cdd6750fa8b15164612a5cb6567cdfb386d4e0137fccee5f35ab55d0efda0fe6db56e42f2057a071c980a778d9a0b61038f269dd74a0e90155b3f40f14364a08538587f2378a0849f9608942cf481da4120c360f8391bbcc225d811823c6432a026eac94e755534e16f9552e73025d6d9c30d1d7682a4cb5bd7741ddabfd48c50a041557da9a74ca68da793e743e81e2029b2835e1cc16e9e25bd0c1e89d4ccad6980a041dda0a40a21ade3a20fcd1a4abb2a42b74e9a32b02424ff8db4ea708a5e0fb9a09aaf8326a51f613607a8685f57458329b41e938bb761131a5747e066b81a0a16808080a022e6cef138e16d2272ef58434ddf49260dc1de1f8ad6dfca3da5d2a92aaaadc58080\",\n     *         \"0xf851808080a009833150c367df138f1538689984b8a84fc55692d3d41fe4d1e5720ff5483a6980808080808080808080a0a319c1c415b271afc0adcb664e67738d103ac168e0bc0b7bd2da7966165cb9518080\"\n     *     ],\n     *     \"balance\": 0,\n     *     \"codeHash\": \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\",\n     *     \"nonce\": 0,\n     *     \"storageHash\": \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\n     *     \"storageProof\": [\n     *         {\n     *             \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n     *             \"value\": 0,\n     *             \"proof\": []\n     *         },\n     *         {\n     *             \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000001\",\n     *             \"value\": 0,\n     *             \"proof\": []\n     *         }\n     *     ]\n     * }\n     * ```\n     */\n    getProof(address_1, storageKeys_1) {\n        return __awaiter(this, arguments, void 0, function* (address, storageKeys, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.getProof(this, address, storageKeys, blockNumber, returnFormat);\n        });\n    }\n    // TODO Throwing an error with Geth, but not Infura\n    // TODO gasUsedRatio and reward not formatting\n    /**\n     * @param blockCount Number of blocks in the requested range. Between `1` and `1024` blocks can be requested in a single query. Less than requested may be returned if not all blocks are available.\n     * @param newestBlock Highest number block of the requested range.\n     * @param rewardPercentiles A monotonically increasing list of percentile values to sample from each block’s effective priority fees per gas in ascending order, weighted by gas used. Example: `['0', '25', '50', '75', '100']` or `['0', '0.5', '1', '1.5', '3', '80']`\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     * @returns `baseFeePerGas` and transaction effective `priorityFeePerGas` history for the requested block range if available.\n     * The range between `headBlock - 4` and `headBlock` is guaranteed to be available while retrieving data from the `pending` block and older history are optional to support.\n     * For pre-EIP-1559 blocks the `gasPrice`s are returned as `rewards` and zeroes are returned for the `baseFeePerGas`.\n     *\n     * ```ts\n     * web3.eth.getFeeHistory(4, 'pending', [0, 25, 75, 100]).then(console.log);\n     * > {\n     *     baseFeePerGas: [\n     *         22983878621n,\n     *         21417903463n,\n     *         19989260230n,\n     *         17770954829n,\n     *         18850641304n\n     *     ],\n     *     gasUsedRatio: [\n     *         0.22746546666666667,\n     *         0.2331871,\n     *         0.05610054885262125,\n     *         0.7430227268212117\n     *     ],\n     *     oldestBlock: 15216343n,\n     *     reward: [\n     *         [ '0x3b9aca00', '0x53724e00', '0x77359400', '0x1d92c03423' ],\n     *         [ '0x3b9aca00', '0x3b9aca00', '0x3b9aca00', '0xee6b2800' ],\n     *         [ '0x3b9aca00', '0x4f86a721', '0x77d9743a', '0x9502f900' ],\n     *         [ '0xcc8ff9e', '0x53724e00', '0x77359400', '0x1ec9771bb3' ]\n     *     ]\n     * }\n     *\n     * web3.eth.getFeeHistory(4, BlockTags.LATEST, [0, 25, 75, 100], { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > {\n     *     baseFeePerGas: [\n     *         22983878621,\n     *         21417903463,\n     *         19989260230,\n     *         17770954829,\n     *         18850641304\n     *     ],\n     *     gasUsedRatio: [\n     *         0.22746546666666667,\n     *         0.2331871,\n     *         0.05610054885262125,\n     *         0.7430227268212117\n     *     ],\n     *     oldestBlock: 15216343,\n     *     reward: [\n     *         [ '0x3b9aca00', '0x53724e00', '0x77359400', '0x1d92c03423' ],\n     *         [ '0x3b9aca00', '0x3b9aca00', '0x3b9aca00', '0xee6b2800' ],\n     *         [ '0x3b9aca00', '0x4f86a721', '0x77d9743a', '0x9502f900' ],\n     *         [ '0xcc8ff9e', '0x53724e00', '0x77359400', '0x1ec9771bb3' ]\n     *     ]\n     * }\n     * ```\n     */\n    getFeeHistory(blockCount_1) {\n        return __awaiter(this, arguments, void 0, function* (blockCount, newestBlock = this.defaultBlock, rewardPercentiles, returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.getFeeHistory(this, blockCount, newestBlock, rewardPercentiles, returnFormat);\n        });\n    }\n    /**\n     * This method generates an access list for a transaction.\n     *\n     * @param transaction - A transaction object where all properties are optional except `from`, however it's recommended to include the `to` property.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) - Specifies what block to use as the current state of the blockchain while processing the transaction.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the createAccessList should be formatted.\n     * @returns The returned data of the createAccessList,  e.g. The generated access list for transaction.\n     * @example\n     * ```ts\n     * web3.eth.createAccessList({\n     * from: '0xDe95305a63302C3aa4d3A9B42654659AeA72b694',\n     * data: '0x9a67c8b100000000000000000000000000000000000000000000000000000000000004d0',\n     * gasPrice: '0x3b9aca00',\n     * gas: '0x3d0900',\n     * to: '0x940b25304947ae863568B3804434EC77E2160b87'\n     * })\n     * .then(console.log);\n     *\n     * > {\n     *  \"accessList\": [\n     *     {\n     *       \"address\": \"0x15859bdf5aff2080a9968f6a410361e9598df62f\",\n     *       \"storageKeys\": [\n     *         \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n     *       ]\n     *     }\n     *   ],\n     *   \"gasUsed\": \"0x7671\"\n     * }\n     * ```\n     */\n    createAccessList(transaction_1) {\n        return __awaiter(this, arguments, void 0, function* (transaction, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {\n            return rpcMethodsWrappers.createAccessList(this, transaction, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * This method sends EIP-712 typed data to the RPC provider to be signed.\n     *\n     * @param address The address that corresponds with the private key used to sign the typed data.\n     * @param typedData The EIP-712 typed data object.\n     * @param useLegacy A boolean flag determining whether the RPC call uses the legacy method `eth_signTypedData` or the newer method `eth_signTypedData_v4`\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the signed typed data should be formatted.\n     * @returns The signed typed data.\n     */\n    signTypedData(address, typedData, useLegacy, returnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            if (useLegacy === void 0) { useLegacy = false; }\n            if (returnFormat === void 0) { returnFormat = ((_a = this.defaultReturnFormat) !== null && _a !== void 0 ? _a : DEFAULT_RETURN_FORMAT); }\n            return rpcMethodsWrappers.signTypedData(this, address, typedData, useLegacy, returnFormat);\n        });\n    }\n    /**\n     * Lets you subscribe to specific events in the blockchain.\n     *\n     * @param name - The subscription you want to subscribe to.\n     * @param args - Optional additional parameters, depending on the subscription type.\n     * @returns A subscription object of type {@link RegisteredSubscription}. The object contains:\n     *  - subscription.id: The subscription id, used to identify and unsubscribing the subscription.\n     *  - subscription.subscribe(): Can be used to re-subscribe with the same parameters.\n     *  - subscription.unsubscribe(): Unsubscribes the subscription and returns TRUE in the callback if successful.\n     *  - subscription.args: The subscription arguments, used when re-subscribing.\n     *\n     *\n     * You can use the subscription object to listen on:\n     *\n     * - on(\"data\") - Fires on each incoming log with the log object as argument.\n     * - on(\"changed\") - Fires on each log which was removed from the blockchain. The log will have the additional property \"removed: true\".\n     * - on(\"error\") - Fires when an error in the subscription occurs.\n     * - on(\"connected\") - Fires once after the subscription successfully connected. Returns the subscription id.\n     *\n     * @example **Subscribe to Smart Contract events**\n     * ```ts\n     * // Subscribe to `logs`\n     * const logSubscription = web3.eth.subscribe('logs', {\n     *     address: '0x1234567890123456789012345678901234567890',\n     *     topics: ['0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234']\n     * });\n     * logSubscription.on('data', (data: any) => console.log(data));\n     * logSubscription.on('error', (error: any) => console.log(error));\n     *\n     * ```\n     *\n     * @example **Subscribe to new block headers**\n     * ```ts\n     * // Subscribe to `newBlockHeaders`\n     * const newBlocksSubscription = await web3.eth.subscribe('newBlockHeaders');\n     *\n     * newBlocksSubscription.on('data', async blockhead => {\n     * \tconsole.log('New block header: ', blockhead);\n     *\n     * \t// You do not need the next line, if you like to keep notified for every new block\n     * \tawait newBlocksSubscription.unsubscribe();\n     * \tconsole.log('Unsubscribed from new block headers.');\n     * });\n     * newBlocksSubscription.on('error', error =>\n     * \tconsole.log('Error when subscribing to New block header: ', error),\n     * );\n     * ```\n     *\n     * \t### subscribe('pendingTransactions')\n     *\n     * Subscribes to incoming pending transactions.\n     * You can subscribe to pending transactions by calling web3.eth.subscribe('pendingTransactions').\n     *\n     * ```ts\n     * (await web3.eth.subscribe('pendingTransactions')).on('data', console.log);\n     * ```\n     *\n     * ### subscribe('newHeads')\n     * ( same as subscribe('newBlockHeaders'))\n     * Subscribes to incoming block headers. This can be used as timer to check for changes on the blockchain.\n     *\n     * The structure of a returned block header is {@link BlockHeaderOutput}:\n     *\n     * ```ts\n     * (await web3.eth.subscribe('newHeads')).on( // 'newBlockHeaders' would work as well\n     *  'data',\n     * console.log\n     * );\n     * >{\n     * parentHash: '0x9e746a1d906b299def98c75b06f714d62dacadd567c7515d76eeaa8c8074c738',\n     * sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n     * miner: '0x0000000000000000000000000000000000000000',\n     * stateRoot: '0xe0f04b04861ecfa95e82a9310d6a7ef7aef8d7417f5209c182582bfb98a8e307',\n     * transactionsRoot: '0x31ab4ea571a9e10d3a19aaed07d190595b1dfa34e03960c04293fec565dea536',\n     * logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     * difficulty: 2n,\n     * number: 21n,\n     * gasLimit: 11738125n,\n     * gasUsed: 830006n,\n     * timestamp: 1678797237n,\n     * extraData: '0xd883010b02846765746888676f312e32302e31856c696e757800000000000000e0a6e93cf40e2e71a72e493272210c3f43738ccc7e7d7b14ffd51833797d896c09117e8dc4fbcbc969bd21b42e5af3e276a911524038c001b2109b63b8e0352601',\n     * nonce: 0n\n     * }\n     * ```\n     *\n     * ### subscribe('syncing')\n     * Subscribe to syncing events. This will return `true` when the node is syncing and when it’s finished syncing will return `false`, for the `changed` event.\n     *\n     * ```ts\n     * (await web3.eth.subscribe('syncing')).on('changed', console.log);\n     * > `true` // when syncing\n     *\n     * (await web3.eth.subscribe('syncing')).on('data', console.log);\n     * > {\n     *      startingBlock: 0,\n     *      currentBlock: 0,\n     *      highestBlock: 0,\n     *      pulledStates: 0,\n     *      knownStates: 0\n     *   }\n     * ```\n     *\n     * ### subscribe('logs', options)\n     * Subscribes to incoming logs, filtered by the given options. If a valid numerical fromBlock options property is set, web3.js will retrieve logs beginning from this point, backfilling the response as necessary.\n     *\n     * options: You can subscribe to logs matching a given filter object, which can take the following parameters:\n     * - `fromBlock`: (optional, default: 'latest') Integer block number, or `'latest'` for the last mined block or `'pending'`, `'earliest'` for not yet mined transactions.\n     * - `address`: (optional) Contract address or a list of addresses from which logs should originate.\n     * - `topics`: (optional) Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with `or` options.\n     *\n     * ```ts\n     *  (await web3.eth.subscribe('logs', {\n     *    address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n     *   })).on('data', console.log);\n     *\n     * > {\n     * removed: false,\n     * logIndex: 119n,\n     * transactionIndex: 58n,\n     * transactionHash: '0x61533efa77937360215069d5d6cb0be09a22af9721e6dc3df59d957833ed8870',\n     * blockHash: '0xe32bb97084479d32247f66f8b46d00af2fbc3c2db2bc6e5843fe2e4d1ca9b099',\n     * blockNumber: 18771966n,\n     * address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n     * data: '0x00000000000000000000000000000000000000000000000000000000d88b2e40',\n     * topics: [\n     * '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',\n     * '0x0000000000000000000000002fb2457f6ec1865dc0d4e7300c696b69c2a1b989',\n     * '0x00000000000000000000000027fd43babfbe83a81d14665b1a6fb8030a60c9b4'\n     * ]\n     * }\n     *```\n     */\n    subscribe(name, args, returnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            if (returnFormat === void 0) { returnFormat = ((_a = this.defaultReturnFormat) !== null && _a !== void 0 ? _a : DEFAULT_RETURN_FORMAT); }\n            const subscription = yield ((_b = this.subscriptionManager) === null || _b === void 0 ? void 0 : _b.subscribe(name, args, returnFormat));\n            if (subscription instanceof LogsSubscription &&\n                name === 'logs' &&\n                typeof args === 'object' &&\n                !isNullish(args.fromBlock) &&\n                Number.isFinite(Number(args.fromBlock))) {\n                setImmediate(() => {\n                    this.getPastLogs(args)\n                        .then(logs => {\n                        for (const log of logs) {\n                            subscription._processSubscriptionResult(log);\n                        }\n                    })\n                        .catch(e => {\n                        subscription._processSubscriptionError(e);\n                    });\n                });\n            }\n            return subscription;\n        });\n    }\n    static shouldClearSubscription({ sub }) {\n        return !(sub instanceof SyncingSubscription);\n    }\n    /**\n     * Resets subscriptions.\n     *\n     * @param notClearSyncing If `true` it keeps the `syncing` subscription.\n     * @returns A promise to an array of subscription ids that were cleared.\n     *\n     * ```ts\n     * web3.eth.clearSubscriptions().then(console.log);\n     * > [...] An array of subscription ids that were cleared\n     * ```\n     */\n    clearSubscriptions(notClearSyncing = false) {\n        var _a;\n        return (_a = this.subscriptionManager) === null || _a === void 0 ? void 0 : _a.unsubscribe(\n        // eslint-disable-next-line\n        notClearSyncing ? Web3Eth.shouldClearSubscription : undefined);\n    }\n    /**\n     * Creates a filter in the node, to notify when new pending transactions arrive. To check if the state has changed.\n     *\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns A filter id.\n     *\n     * ```ts\n     * web3.eth.createNewPendingTransactionFilter().then(console.log);\n     * > 1n\n     *\n     * web3.eth.createNewPendingTransactionFilter({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > \"0x1\"\n     * ```\n     */\n    createNewPendingTransactionFilter() {\n        return __awaiter(this, arguments, void 0, function* (returnFormat = this.defaultReturnFormat) {\n            return filteringRpcMethodsWrappers.createNewPendingTransactionFilter(this, returnFormat);\n        });\n    }\n    /**\n     * Creates a filter object, based on filter options, to notify when the state changes (logs)\n     *\n     * @param filter A {@link FilterParams} object containing the filter properties.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns A filter id.\n     *\n     * ```ts\n     * web3.eth.createNewFilter(filterParams).then(console.log);\n     * > 1n\n     *\n     * web3.eth.createNewFilter(filterParams, { number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > \"0x1\"\n     * ```\n     */\n    createNewFilter(filter_1) {\n        return __awaiter(this, arguments, void 0, function* (filter, returnFormat = this.defaultReturnFormat) {\n            return filteringRpcMethodsWrappers.createNewFilter(this, filter, returnFormat);\n        });\n    }\n    /**\n     * Creates a filter in the node, to notify when a new block arrives.\n     *\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns A filter id.\n     *\n     * ```ts\n     * web3.eth.createNewBlockFilter().then(console.log);\n     * > 1n\n     *\n     * web3.eth.createNewBlockFilter({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > \"0x1\"\n     * ```\n     */\n    createNewBlockFilter() {\n        return __awaiter(this, arguments, void 0, function* (returnFormat = this.defaultReturnFormat) {\n            return filteringRpcMethodsWrappers.createNewBlockFilter(this, returnFormat);\n        });\n    }\n    /**\n     * Uninstalls a filter with given id. Should always be called when watch is no longer needed.\n     *\n     * @param filterIdentifier ({@link Numbers} filter id\n     * @returns true if the filter was successfully uninstalled, otherwise false.\n     *\n     * ```ts\n     * web3.eth.uninstallFilter(123).then(console.log);\n     * > true\n     *\n     * web3.eth.uninstallFilter('0x123').then(console.log);\n     * > true\n     *\n     * web3.eth.uninstallFilter(12n).then(console.log);\n     * > true\n     * ```\n     */\n    uninstallFilter(filterIdentifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return filteringRpcMethodsWrappers.uninstallFilter(this, filterIdentifier);\n        });\n    }\n    /**\n     *  Polling method for a filter, which returns an array of logs which occurred since last poll.\n     *\n     * @param filterIdentifier ({@link Numbers} filter id\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     * @returns {@link FilterResultsAPI}, an array of {@link Log} objects.\n     *\n     * ```ts\n     * web3.eth.getFilterChanges(123).then(console.log);\n     * > [{\n     *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n     *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n     *       logIndex: 0n,\n     *       transactionIndex: 0n,\n     *       transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n     *       blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n     *       blockNumber: 1234n,\n     *       address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n     *   },\n     *   {...}]\n     */\n    getFilterChanges(filterIdentifier_1) {\n        return __awaiter(this, arguments, void 0, function* (filterIdentifier, returnFormat = this.defaultReturnFormat) {\n            return filteringRpcMethodsWrappers.getFilterChanges(this, filterIdentifier, returnFormat);\n        });\n    }\n    /**\n     *  Returns an array of all logs matching filter with given id.\n     *\n     * @param filterIdentifier ({@link Numbers} filter id\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     * @returns {@link FilterResultsAPI}, an array of {@link Log} objects.\n     *\n     * ```ts\n     * web3.eth.getFilterLogs(123).then(console.log);\n     * > [{\n     *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n     *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n     *       logIndex: 0n,\n     *       transactionIndex: 0n,\n     *       transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n     *       blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n     *       blockNumber: 1234n,\n     *       address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n     *   },\n     *   {...}]\n     */\n    getFilterLogs(filterIdentifier_1) {\n        return __awaiter(this, arguments, void 0, function* (filterIdentifier, returnFormat = this.defaultReturnFormat) {\n            return filteringRpcMethodsWrappers.getFilterLogs(this, filterIdentifier, returnFormat);\n        });\n    }\n}\n//# sourceMappingURL=web3_eth.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { ETH_DATA_FORMAT, } from 'web3-types';\nimport { isAddress, isHexStrict, isHexString32Bytes, isNullish, isUInt } from 'web3-validator';\nimport { ChainMismatchError, HardforkMismatchError, ChainIdMismatchError, CommonOrChainAndHardforkError, Eip1559GasPriceError, InvalidGasOrGasPrice, InvalidMaxPriorityFeePerGasOrMaxFeePerGas, InvalidNonceOrChainIdError, InvalidTransactionCall, InvalidTransactionObjectError, InvalidTransactionWithSender, MissingChainOrHardforkError, MissingCustomChainError, MissingCustomChainIdError, MissingGasError, TransactionGasMismatchError, UnsupportedFeeMarketError, } from 'web3-errors';\nimport { formatTransaction } from './utils/format_transaction.js';\nexport function isBaseTransaction(value) {\n    if (!isNullish(value.to) && !isAddress(value.to))\n        return false;\n    if (!isHexStrict(value.type) && !isNullish(value.type) && value.type.length !== 2)\n        return false;\n    if (!isHexStrict(value.nonce))\n        return false;\n    if (!isHexStrict(value.gas))\n        return false;\n    if (!isHexStrict(value.value))\n        return false;\n    if (!isHexStrict(value.input))\n        return false;\n    if (value.chainId && !isHexStrict(value.chainId))\n        return false;\n    return true;\n}\nexport function isAccessListEntry(value) {\n    if (!isNullish(value.address) && !isAddress(value.address))\n        return false;\n    if (!isNullish(value.storageKeys) &&\n        !value.storageKeys.every(storageKey => isHexString32Bytes(storageKey)))\n        return false;\n    return true;\n}\nexport function isAccessList(value) {\n    if (!Array.isArray(value) ||\n        !value.every(accessListEntry => isAccessListEntry(accessListEntry)))\n        return false;\n    return true;\n}\nexport function isTransaction1559Unsigned(value) {\n    if (!isBaseTransaction(value))\n        return false;\n    if (!isHexStrict(value.maxFeePerGas))\n        return false;\n    if (!isHexStrict(value.maxPriorityFeePerGas))\n        return false;\n    if (!isAccessList(value.accessList))\n        return false;\n    return true;\n}\nexport function isTransaction2930Unsigned(value) {\n    if (!isBaseTransaction(value))\n        return false;\n    if (!isHexStrict(value.gasPrice))\n        return false;\n    if (!isAccessList(value.accessList))\n        return false;\n    return true;\n}\nexport function isTransactionLegacyUnsigned(value) {\n    if (!isBaseTransaction(value))\n        return false;\n    if (!isHexStrict(value.gasPrice))\n        return false;\n    return true;\n}\nexport function isTransactionWithSender(value) {\n    if (!isAddress(value.from))\n        return false;\n    if (!isBaseTransaction(value))\n        return false;\n    if (!isTransaction1559Unsigned(value) &&\n        !isTransaction2930Unsigned(value) &&\n        !isTransactionLegacyUnsigned(value))\n        return false;\n    return true;\n}\nexport function validateTransactionWithSender(value) {\n    if (!isTransactionWithSender(value))\n        throw new InvalidTransactionWithSender(value);\n}\nexport function isTransactionCall(value) {\n    if (!isNullish(value.from) && !isAddress(value.from))\n        return false;\n    if (!isAddress(value.to))\n        return false;\n    if (!isNullish(value.gas) && !isHexStrict(value.gas))\n        return false;\n    if (!isNullish(value.gasPrice) && !isHexStrict(value.gasPrice))\n        return false;\n    if (!isNullish(value.value) && !isHexStrict(value.value))\n        return false;\n    if (!isNullish(value.data) && !isHexStrict(value.data))\n        return false;\n    if (!isNullish(value.input) && !isHexStrict(value.input))\n        return false;\n    if (!isNullish(value.type))\n        return false;\n    if (isTransaction1559Unsigned(value))\n        return false;\n    if (isTransaction2930Unsigned(value))\n        return false;\n    return true;\n}\nexport function validateTransactionCall(value) {\n    if (!isTransactionCall(value))\n        throw new InvalidTransactionCall(value);\n}\nexport const validateCustomChainInfo = (transaction) => {\n    if (!isNullish(transaction.common)) {\n        if (isNullish(transaction.common.customChain))\n            throw new MissingCustomChainError();\n        if (isNullish(transaction.common.customChain.chainId))\n            throw new MissingCustomChainIdError();\n        if (!isNullish(transaction.chainId) &&\n            transaction.chainId !== transaction.common.customChain.chainId)\n            throw new ChainIdMismatchError({\n                txChainId: transaction.chainId,\n                customChainId: transaction.common.customChain.chainId,\n            });\n    }\n};\nexport const validateChainInfo = (transaction) => {\n    if (!isNullish(transaction.common) &&\n        !isNullish(transaction.chain) &&\n        !isNullish(transaction.hardfork)) {\n        throw new CommonOrChainAndHardforkError();\n    }\n    if ((!isNullish(transaction.chain) && isNullish(transaction.hardfork)) ||\n        (!isNullish(transaction.hardfork) && isNullish(transaction.chain)))\n        throw new MissingChainOrHardforkError({\n            chain: transaction.chain,\n            hardfork: transaction.hardfork,\n        });\n};\nexport const validateBaseChain = (transaction) => {\n    if (!isNullish(transaction.common))\n        if (!isNullish(transaction.common.baseChain))\n            if (!isNullish(transaction.chain) &&\n                transaction.chain !== transaction.common.baseChain) {\n                throw new ChainMismatchError({\n                    txChain: transaction.chain,\n                    baseChain: transaction.common.baseChain,\n                });\n            }\n};\nexport const validateHardfork = (transaction) => {\n    if (!isNullish(transaction.common))\n        if (!isNullish(transaction.common.hardfork))\n            if (!isNullish(transaction.hardfork) &&\n                transaction.hardfork !== transaction.common.hardfork) {\n                throw new HardforkMismatchError({\n                    txHardfork: transaction.hardfork,\n                    commonHardfork: transaction.common.hardfork,\n                });\n            }\n};\nexport const validateLegacyGas = (transaction) => {\n    if (\n    // This check is verifying gas and gasPrice aren't less than 0.\n    isNullish(transaction.gas) ||\n        !isUInt(transaction.gas) ||\n        isNullish(transaction.gasPrice) ||\n        !isUInt(transaction.gasPrice))\n        throw new InvalidGasOrGasPrice({\n            gas: transaction.gas,\n            gasPrice: transaction.gasPrice,\n        });\n    if (!isNullish(transaction.maxFeePerGas) || !isNullish(transaction.maxPriorityFeePerGas))\n        throw new UnsupportedFeeMarketError({\n            maxFeePerGas: transaction.maxFeePerGas,\n            maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n        });\n};\nexport const validateFeeMarketGas = (transaction) => {\n    // These errors come from 1.x, so they must be checked before\n    // InvalidMaxPriorityFeePerGasOrMaxFeePerGas to throw the same error\n    // for the same code executing in 1.x\n    if (!isNullish(transaction.gasPrice) && transaction.type === '0x2')\n        throw new Eip1559GasPriceError(transaction.gasPrice);\n    if (transaction.type === '0x0' || transaction.type === '0x1')\n        throw new UnsupportedFeeMarketError({\n            maxFeePerGas: transaction.maxFeePerGas,\n            maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n        });\n    if (isNullish(transaction.maxFeePerGas) ||\n        !isUInt(transaction.maxFeePerGas) ||\n        isNullish(transaction.maxPriorityFeePerGas) ||\n        !isUInt(transaction.maxPriorityFeePerGas))\n        throw new InvalidMaxPriorityFeePerGasOrMaxFeePerGas({\n            maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n            maxFeePerGas: transaction.maxFeePerGas,\n        });\n};\n/**\n * This method checks if all required gas properties are present for either\n * legacy gas (type 0x0 and 0x1) OR fee market transactions (0x2)\n */\nexport const validateGas = (transaction) => {\n    const gasPresent = !isNullish(transaction.gas) || !isNullish(transaction.gasLimit);\n    const legacyGasPresent = gasPresent && !isNullish(transaction.gasPrice);\n    const feeMarketGasPresent = gasPresent &&\n        !isNullish(transaction.maxPriorityFeePerGas) &&\n        !isNullish(transaction.maxFeePerGas);\n    if (!legacyGasPresent && !feeMarketGasPresent)\n        throw new MissingGasError({\n            gas: transaction.gas,\n            gasPrice: transaction.gasPrice,\n            maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n            maxFeePerGas: transaction.maxFeePerGas,\n        });\n    if (legacyGasPresent && feeMarketGasPresent)\n        throw new TransactionGasMismatchError({\n            gas: transaction.gas,\n            gasPrice: transaction.gasPrice,\n            maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n            maxFeePerGas: transaction.maxFeePerGas,\n        });\n    (legacyGasPresent ? validateLegacyGas : validateFeeMarketGas)(transaction);\n    (!isNullish(transaction.type) && transaction.type > '0x1'\n        ? validateFeeMarketGas\n        : validateLegacyGas)(transaction);\n};\nexport const validateTransactionForSigning = (transaction, overrideMethod, options = { transactionSchema: undefined }) => {\n    if (!isNullish(overrideMethod)) {\n        overrideMethod(transaction);\n        return;\n    }\n    if (typeof transaction !== 'object' || isNullish(transaction))\n        throw new InvalidTransactionObjectError(transaction);\n    validateCustomChainInfo(transaction);\n    validateChainInfo(transaction);\n    validateBaseChain(transaction);\n    validateHardfork(transaction);\n    const formattedTransaction = formatTransaction(transaction, ETH_DATA_FORMAT, {\n        transactionSchema: options.transactionSchema,\n    });\n    validateGas(formattedTransaction);\n    if (isNullish(formattedTransaction.nonce) ||\n        isNullish(formattedTransaction.chainId) ||\n        formattedTransaction.nonce.startsWith('-') ||\n        formattedTransaction.chainId.startsWith('-'))\n        throw new InvalidNonceOrChainIdError({\n            nonce: transaction.nonce,\n            chainId: transaction.chainId,\n        });\n};\n//# sourceMappingURL=validation.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ETH_DATA_FORMAT, } from 'web3-types';\nimport { toNumber } from 'web3-utils';\nimport { TransactionFactory, Common } from 'web3-eth-accounts';\nimport { isNullish } from 'web3-validator';\nimport { validateTransactionForSigning } from '../validation.js';\nimport { formatTransaction } from './format_transaction.js';\nimport { transactionBuilder } from './transaction_builder.js';\nconst getEthereumjsTxDataFromTransaction = (transaction) => {\n    var _a, _b;\n    return (Object.assign(Object.assign({}, transaction), { nonce: transaction.nonce, gasPrice: transaction.gasPrice, gasLimit: (_a = transaction.gasLimit) !== null && _a !== void 0 ? _a : transaction.gas, to: transaction.to, value: transaction.value, data: (_b = transaction.data) !== null && _b !== void 0 ? _b : transaction.input, type: transaction.type, chainId: transaction.chainId, accessList: transaction.accessList, maxPriorityFeePerGas: transaction.maxPriorityFeePerGas, maxFeePerGas: transaction.maxFeePerGas }));\n};\nconst getEthereumjsTransactionOptions = (transaction, web3Context) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n    const hasTransactionSigningOptions = (!isNullish(transaction.chain) && !isNullish(transaction.hardfork)) ||\n        !isNullish(transaction.common);\n    let common;\n    if (!hasTransactionSigningOptions) {\n        // if defaultcommon is specified, use that.\n        if (web3Context.defaultCommon) {\n            common = Object.assign({}, web3Context.defaultCommon);\n            if (isNullish(common.hardfork))\n                common.hardfork = (_a = transaction.hardfork) !== null && _a !== void 0 ? _a : web3Context.defaultHardfork;\n            if (isNullish(common.baseChain))\n                common.baseChain = web3Context.defaultChain;\n        }\n        else {\n            common = Common.custom({\n                name: 'custom-network',\n                chainId: toNumber(transaction.chainId),\n                networkId: !isNullish(transaction.networkId)\n                    ? toNumber(transaction.networkId)\n                    : undefined,\n                defaultHardfork: (_b = transaction.hardfork) !== null && _b !== void 0 ? _b : web3Context.defaultHardfork,\n            }, {\n                baseChain: web3Context.defaultChain,\n            });\n        }\n    }\n    else {\n        const name = (_f = (_e = (_d = (_c = transaction === null || transaction === void 0 ? void 0 : transaction.common) === null || _c === void 0 ? void 0 : _c.customChain) === null || _d === void 0 ? void 0 : _d.name) !== null && _e !== void 0 ? _e : transaction.chain) !== null && _f !== void 0 ? _f : 'custom-network';\n        const chainId = toNumber((_j = (_h = (_g = transaction === null || transaction === void 0 ? void 0 : transaction.common) === null || _g === void 0 ? void 0 : _g.customChain) === null || _h === void 0 ? void 0 : _h.chainId) !== null && _j !== void 0 ? _j : transaction === null || transaction === void 0 ? void 0 : transaction.chainId);\n        const networkId = toNumber((_m = (_l = (_k = transaction === null || transaction === void 0 ? void 0 : transaction.common) === null || _k === void 0 ? void 0 : _k.customChain) === null || _l === void 0 ? void 0 : _l.networkId) !== null && _m !== void 0 ? _m : transaction === null || transaction === void 0 ? void 0 : transaction.networkId);\n        const defaultHardfork = (_q = (_p = (_o = transaction === null || transaction === void 0 ? void 0 : transaction.common) === null || _o === void 0 ? void 0 : _o.hardfork) !== null && _p !== void 0 ? _p : transaction === null || transaction === void 0 ? void 0 : transaction.hardfork) !== null && _q !== void 0 ? _q : web3Context.defaultHardfork;\n        const baseChain = (_t = (_s = (_r = transaction.common) === null || _r === void 0 ? void 0 : _r.baseChain) !== null && _s !== void 0 ? _s : transaction.chain) !== null && _t !== void 0 ? _t : web3Context.defaultChain;\n        if (chainId && networkId && name) {\n            common = Common.custom({\n                name,\n                chainId,\n                networkId,\n                defaultHardfork,\n            }, {\n                baseChain,\n            });\n        }\n    }\n    return { common };\n};\nexport const prepareTransactionForSigning = (transaction_1, web3Context_1, privateKey_1, ...args_1) => __awaiter(void 0, [transaction_1, web3Context_1, privateKey_1, ...args_1], void 0, function* (transaction, web3Context, privateKey, fillGasPrice = false, fillGasLimit = true) {\n    const populatedTransaction = (yield transactionBuilder({\n        transaction,\n        web3Context,\n        privateKey,\n        fillGasPrice,\n        fillGasLimit,\n    }));\n    const formattedTransaction = formatTransaction(populatedTransaction, ETH_DATA_FORMAT, {\n        transactionSchema: web3Context.config.customTransactionSchema,\n    });\n    validateTransactionForSigning(formattedTransaction, undefined, {\n        transactionSchema: web3Context.config.customTransactionSchema,\n    });\n    return TransactionFactory.fromTxData(getEthereumjsTxDataFromTransaction(formattedTransaction), getEthereumjsTransactionOptions(formattedTransaction, web3Context));\n});\n//# sourceMappingURL=prepare_transaction_for_signing.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { format, isNullish, keccak256 } from 'web3-utils';\nimport { FMT_NUMBER, FMT_BYTES, } from 'web3-types';\nimport { decodeFunctionCall, decodeFunctionReturn, encodeEventSignature, encodeFunctionSignature, encodeParameter, encodeParameters, inferTypesAndEncodeParameters, isAbiConstructorFragment, jsonInterfaceMethodToString, } from 'web3-eth-abi';\nimport { blockSchema, ALL_EVENTS } from 'web3-eth';\nimport { Web3ContractError } from 'web3-errors';\nexport { decodeEventABI } from 'web3-eth';\nexport const encodeEventABI = ({ address }, event, options) => {\n    var _a, _b;\n    const topics = options === null || options === void 0 ? void 0 : options.topics;\n    const filter = (_a = options === null || options === void 0 ? void 0 : options.filter) !== null && _a !== void 0 ? _a : {};\n    const opts = {};\n    if (!isNullish(options === null || options === void 0 ? void 0 : options.fromBlock)) {\n        opts.fromBlock = format(blockSchema.properties.number, options === null || options === void 0 ? void 0 : options.fromBlock, {\n            number: FMT_NUMBER.HEX,\n            bytes: FMT_BYTES.HEX,\n        });\n    }\n    if (!isNullish(options === null || options === void 0 ? void 0 : options.toBlock)) {\n        opts.toBlock = format(blockSchema.properties.number, options === null || options === void 0 ? void 0 : options.toBlock, {\n            number: FMT_NUMBER.HEX,\n            bytes: FMT_BYTES.HEX,\n        });\n    }\n    if (topics && Array.isArray(topics)) {\n        opts.topics = [...topics];\n    }\n    else {\n        opts.topics = [];\n        // add event signature\n        if (event && !event.anonymous && ![ALL_EVENTS, 'allEvents'].includes(event.name)) {\n            opts.topics.push((_b = event.signature) !== null && _b !== void 0 ? _b : encodeEventSignature(jsonInterfaceMethodToString(event)));\n        }\n        // add event topics (indexed arguments)\n        if (![ALL_EVENTS, 'allEvents'].includes(event.name) && event.inputs) {\n            for (const input of event.inputs) {\n                if (!input.indexed) {\n                    continue;\n                }\n                const value = filter[input.name];\n                if (!value) {\n                    // eslint-disable-next-line no-null/no-null\n                    opts.topics.push(null);\n                    continue;\n                }\n                // TODO: https://github.com/ethereum/web3.js/issues/344\n                // TODO: deal properly with components\n                if (Array.isArray(value)) {\n                    opts.topics.push(value.map(v => encodeParameter(input.type, v)));\n                }\n                else if (input.type === 'string') {\n                    opts.topics.push(keccak256(value));\n                }\n                else {\n                    opts.topics.push(encodeParameter(input.type, value));\n                }\n            }\n        }\n    }\n    if (!opts.topics.length)\n        delete opts.topics;\n    if (address) {\n        opts.address = address.toLowerCase();\n    }\n    return opts;\n};\nexport const encodeMethodABI = (abi, args, deployData) => {\n    const inputLength = Array.isArray(abi.inputs) ? abi.inputs.length : 0;\n    if (abi.inputs && inputLength !== args.length) {\n        throw new Web3ContractError(`The number of arguments is not matching the methods required number. You need to pass ${inputLength} arguments.`);\n    }\n    let params;\n    if (abi.inputs) {\n        params = encodeParameters(Array.isArray(abi.inputs) ? abi.inputs : [], args).replace('0x', '');\n    }\n    else {\n        params = inferTypesAndEncodeParameters(args).replace('0x', '');\n    }\n    if (isAbiConstructorFragment(abi)) {\n        if (!deployData)\n            throw new Web3ContractError('The contract has no contract data option set. This is necessary to append the constructor parameters.');\n        if (!deployData.startsWith('0x')) {\n            return `0x${deployData}${params}`;\n        }\n        return `${deployData}${params}`;\n    }\n    return `${encodeFunctionSignature(abi)}${params}`;\n};\n/** @deprecated import `decodeFunctionCall` from ''web3-eth-abi' instead. */\nexport const decodeMethodParams = decodeFunctionCall;\n/** @deprecated import `decodeFunctionReturn` from ''web3-eth-abi' instead. */\nexport const decodeMethodReturn = decodeFunctionReturn;\n//# sourceMappingURL=encoding.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3Subscription } from 'web3-core';\nimport { decodeEventABI } from 'web3-eth';\n/**\n * ContractLogsSubscription to be used to subscribe to events logs.\n *\n * Following events are supported and can be accessed with either {@link ContractLogsSubscription.once} or ${@link ContractLogsSubscription.on} methods.\n *\n * - **connected**: Emitted when the subscription is connected.\n * - **data**: Fires on each incoming event with the event object as argument.\n * - **changed**: Fires on each event which was removed from the blockchain. The event will have the additional property `removed: true`.\n * - **error**: Fires on each error.\n *\n * ```ts\n * const subscription = await myContract.events.MyEvent({\n *   filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23\n *   fromBlock: 0\n * });\n *\n * subscription.on(\"connected\", function(subscriptionId){\n *   console.log(subscriptionId);\n * });\n *\n * subscription.on('data', function(event){\n *   console.log(event); // same results as the optional callback above\n * });\n *\n * subscription.on('changed', function(event){\n *   // remove event from local database\n * })\n *\n * subscription.on('error', function(error, receipt) { // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\n *   ...\n * });\n *\n * // event output example\n * > {\n *   returnValues: {\n *       myIndexedParam: 20,\n *       myOtherIndexedParam: '0x123456789...',\n *       myNonIndexParam: 'My String'\n *   },\n *   raw: {\n *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n *   },\n *   event: 'MyEvent',\n *   signature: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n *   logIndex: 0,\n *   transactionIndex: 0,\n *   transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n *   blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n *   blockNumber: 1234,\n *   address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n * }\n * ```\n */\nexport class ContractLogsSubscription extends Web3Subscription {\n    constructor(args, options) {\n        super(args, options);\n        this.address = args.address;\n        this.topics = args.topics;\n        this.abi = args.abi;\n        this.jsonInterface = args.jsonInterface;\n    }\n    _buildSubscriptionParams() {\n        return ['logs', { address: this.address, topics: this.topics }];\n    }\n    formatSubscriptionResult(data) {\n        return decodeEventABI(this.abi, data, this.jsonInterface, super.returnFormat);\n    }\n}\n/**\n * @deprecated LogsSubscription is renamed to ContractLogsSubscription in this package to not be confused with LogsSubscription at 'web3-eth'.\n */\nexport const LogsSubscription = ContractLogsSubscription;\n//# sourceMappingURL=contract_log_subscription.js.map","/**\n * RLP Encoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * This function takes in data, converts it to Uint8Array if not,\n * and adds a length for recursion.\n * @param input Will be converted to Uint8Array\n * @returns Uint8Array of encoded data\n **/\nexport function encode(input) {\n    if (Array.isArray(input)) {\n        const output = [];\n        let outputLength = 0;\n        for (let i = 0; i < input.length; i++) {\n            const encoded = encode(input[i]);\n            output.push(encoded);\n            outputLength += encoded.length;\n        }\n        return concatBytes(encodeLength(outputLength, 192), ...output);\n    }\n    const inputBuf = toBytes(input);\n    if (inputBuf.length === 1 && inputBuf[0] < 128) {\n        return inputBuf;\n    }\n    return concatBytes(encodeLength(inputBuf.length, 128), inputBuf);\n}\n/**\n * Slices a Uint8Array, throws if the slice goes out-of-bounds of the Uint8Array.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input, start, end) {\n    if (end > input.length) {\n        throw new Error('invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds');\n    }\n    return input.slice(start, end);\n}\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v) {\n    if (v[0] === 0) {\n        throw new Error('invalid RLP: extra zeros');\n    }\n    return parseHexByte(bytesToHex(v));\n}\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        return Uint8Array.from([len + offset]);\n    }\n    const hexLength = numberToHex(len);\n    const lLength = hexLength.length / 2;\n    const firstByte = numberToHex(offset + 55 + lLength);\n    return Uint8Array.from(hexToBytes(firstByte + hexLength));\n}\nexport function decode(input, stream = false) {\n    if (typeof input === 'undefined' || input === null || input.length === 0) {\n        return Uint8Array.from([]);\n    }\n    const inputBytes = toBytes(input);\n    const decoded = _decode(inputBytes);\n    if (stream) {\n        return {\n            data: decoded.data,\n            remainder: decoded.remainder.slice(),\n        };\n    }\n    if (decoded.remainder.length !== 0) {\n        throw new Error('invalid RLP: remainder must be zero');\n    }\n    return decoded.data;\n}\n/** Decode an input with RLP */\nfunction _decode(input) {\n    let length, llength, data, innerRemainder, d;\n    const decoded = [];\n    const firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.subarray(1),\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Uint8Array.from([]);\n        }\n        else {\n            data = safeSlice(input, 1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error('invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed');\n        }\n        return {\n            data,\n            remainder: input.subarray(length),\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error('invalid RLP: not enough bytes for string length');\n        }\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length <= 55) {\n            throw new Error('invalid RLP: expected string length to be greater than 55');\n        }\n        data = safeSlice(input, llength, length + llength);\n        return {\n            data,\n            remainder: input.subarray(length + llength),\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between 0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = safeSlice(input, 1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.subarray(length),\n        };\n    }\n    else {\n        // a list over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length < 56) {\n            throw new Error('invalid RLP: encoded list too short');\n        }\n        const totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error('invalid RLP: total length is larger than the data');\n        }\n        innerRemainder = safeSlice(input, llength, totalLength);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.subarray(totalLength),\n        };\n    }\n}\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    // Pre-caching chars with `cachedHexes` speeds this up 6x\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += cachedHexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction parseHexByte(hexByte) {\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte))\n        throw new Error('Invalid byte sequence');\n    return byte;\n}\n// Caching slows it down 2-3x\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        array[i] = parseHexByte(hex.slice(j, j + 2));\n    }\n    return array;\n}\n/** Concatenates two Uint8Arrays into one. */\nfunction concatBytes(...arrays) {\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction utf8ToBytes(utf) {\n    return new TextEncoder().encode(utf);\n}\n/** Transform an integer into its hexadecimal value */\nfunction numberToHex(integer) {\n    if (integer < 0) {\n        throw new Error('Invalid integer as argument, must be unsigned!');\n    }\n    const hex = integer.toString(16);\n    return hex.length % 2 ? `0${hex}` : hex;\n}\n/** Pad a string to be even */\nfunction padToEven(a) {\n    return a.length % 2 ? `0${a}` : a;\n}\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str) {\n    return str.length >= 2 && str[0] === '0' && str[1] === 'x';\n}\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform anything into a Uint8Array */\nfunction toBytes(v) {\n    if (v instanceof Uint8Array) {\n        return v;\n    }\n    if (typeof v === 'string') {\n        if (isHexPrefixed(v)) {\n            return hexToBytes(padToEven(stripHexPrefix(v)));\n        }\n        return utf8ToBytes(v);\n    }\n    if (typeof v === 'number' || typeof v === 'bigint') {\n        if (!v) {\n            return Uint8Array.from([]);\n        }\n        return hexToBytes(numberToHex(v));\n    }\n    if (v === null || v === undefined) {\n        return Uint8Array.from([]);\n    }\n    throw new Error('toBytes: received unsupported type ' + typeof v);\n}\nexport const utils = {\n    bytesToHex,\n    concatBytes,\n    hexToBytes,\n    utf8ToBytes,\n};\nexport const RLP = { encode, decode };\n//# sourceMappingURL=index.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { RLP } from '@ethereumjs/rlp';\nimport { InvalidAddressError, InvalidMethodParamsError, InvalidNumberError, Web3ContractError, } from 'web3-errors';\nimport { isNullish, mergeDeep, isContractInitOptions, keccak256, toChecksumAddress, hexToNumber, } from 'web3-utils';\nimport { isAddress, isHexString } from 'web3-validator';\nimport { encodeMethodABI } from './encoding.js';\nconst dataInputEncodeMethodHelper = (txParams, abi, params, dataInputFill) => {\n    var _a, _b;\n    const tx = {};\n    if (!isNullish(txParams.data) || dataInputFill === 'both') {\n        tx.data = encodeMethodABI(abi, params, ((_a = txParams.data) !== null && _a !== void 0 ? _a : txParams.input));\n    }\n    if (!isNullish(txParams.input) || dataInputFill === 'both') {\n        tx.input = encodeMethodABI(abi, params, ((_b = txParams.input) !== null && _b !== void 0 ? _b : txParams.data));\n    }\n    // if input and data is empty, use web3config default\n    if (isNullish(tx.input) && isNullish(tx.data)) {\n        tx[dataInputFill] = encodeMethodABI(abi, params);\n    }\n    return { data: tx.data, input: tx.input };\n};\nexport const getSendTxParams = ({ abi, params, options, contractOptions, }) => {\n    var _a, _b, _c;\n    const deploymentCall = (_c = (_b = (_a = options === null || options === void 0 ? void 0 : options.input) !== null && _a !== void 0 ? _a : options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : contractOptions.input) !== null && _c !== void 0 ? _c : contractOptions.data;\n    if (!deploymentCall && !(options === null || options === void 0 ? void 0 : options.to) && !contractOptions.address) {\n        throw new Web3ContractError('Contract address not specified');\n    }\n    if (!(options === null || options === void 0 ? void 0 : options.from) && !contractOptions.from) {\n        throw new Web3ContractError('Contract \"from\" address not specified');\n    }\n    let txParams = mergeDeep({\n        to: contractOptions.address,\n        gas: contractOptions.gas,\n        gasPrice: contractOptions.gasPrice,\n        from: contractOptions.from,\n        input: contractOptions.input,\n        maxPriorityFeePerGas: contractOptions.maxPriorityFeePerGas,\n        maxFeePerGas: contractOptions.maxFeePerGas,\n        data: contractOptions.data,\n    }, options);\n    const dataInput = dataInputEncodeMethodHelper(txParams, abi, params, options === null || options === void 0 ? void 0 : options.dataInputFill);\n    txParams = Object.assign(Object.assign({}, txParams), { data: dataInput.data, input: dataInput.input });\n    return txParams;\n};\nexport const getEthTxCallParams = ({ abi, params, options, contractOptions, }) => {\n    if (!(options === null || options === void 0 ? void 0 : options.to) && !contractOptions.address) {\n        throw new Web3ContractError('Contract address not specified');\n    }\n    let txParams = mergeDeep({\n        to: contractOptions.address,\n        gas: contractOptions.gas,\n        gasPrice: contractOptions.gasPrice,\n        from: contractOptions.from,\n        input: contractOptions.input,\n        maxPriorityFeePerGas: contractOptions.maxPriorityFeePerGas,\n        maxFeePerGas: contractOptions.maxFeePerGas,\n        data: contractOptions.data,\n    }, options);\n    const dataInput = dataInputEncodeMethodHelper(txParams, abi, params, options === null || options === void 0 ? void 0 : options.dataInputFill);\n    txParams = Object.assign(Object.assign({}, txParams), { data: dataInput.data, input: dataInput.input });\n    return txParams;\n};\nexport const getEstimateGasParams = ({ abi, params, options, contractOptions, }) => {\n    let txParams = mergeDeep({\n        to: contractOptions.address,\n        gas: contractOptions.gas,\n        gasPrice: contractOptions.gasPrice,\n        from: contractOptions.from,\n        input: contractOptions.input,\n        data: contractOptions.data,\n    }, options);\n    const dataInput = dataInputEncodeMethodHelper(txParams, abi, params, options === null || options === void 0 ? void 0 : options.dataInputFill);\n    txParams = Object.assign(Object.assign({}, txParams), { data: dataInput.data, input: dataInput.input });\n    return txParams;\n};\nexport const isWeb3ContractContext = (options) => typeof options === 'object' &&\n    !isNullish(options) &&\n    Object.keys(options).length !== 0 &&\n    !isContractInitOptions(options);\nexport const getCreateAccessListParams = ({ abi, params, options, contractOptions, }) => {\n    if (!(options === null || options === void 0 ? void 0 : options.to) && !contractOptions.address) {\n        throw new Web3ContractError('Contract address not specified');\n    }\n    if (!(options === null || options === void 0 ? void 0 : options.from) && !contractOptions.from) {\n        throw new Web3ContractError('Contract \"from\" address not specified');\n    }\n    let txParams = mergeDeep({\n        to: contractOptions.address,\n        gas: contractOptions.gas,\n        gasPrice: contractOptions.gasPrice,\n        from: contractOptions.from,\n        input: contractOptions.input,\n        maxPriorityFeePerGas: contractOptions.maxPriorityFeePerGas,\n        maxFeePerGas: contractOptions.maxFeePerGas,\n        data: contractOptions.data,\n    }, options);\n    const dataInput = dataInputEncodeMethodHelper(txParams, abi, params, options === null || options === void 0 ? void 0 : options.dataInputFill);\n    txParams = Object.assign(Object.assign({}, txParams), { data: dataInput.data, input: dataInput.input });\n    return txParams;\n};\nexport const createContractAddress = (from, nonce) => {\n    if (!isAddress(from))\n        throw new InvalidAddressError(`Invalid address given ${from}`);\n    let nonceValue = nonce;\n    if (typeof nonce === 'string' && isHexString(nonce))\n        nonceValue = hexToNumber(nonce);\n    else if (typeof nonce === 'string' && !isHexString(nonce))\n        throw new InvalidNumberError('Invalid nonce value format');\n    const rlpEncoded = RLP.encode([from, nonceValue]);\n    const result = keccak256(rlpEncoded);\n    const contractAddress = '0x'.concat(result.substring(26));\n    return toChecksumAddress(contractAddress);\n};\nexport const create2ContractAddress = (from, salt, initCode) => {\n    if (!isAddress(from))\n        throw new InvalidAddressError(`Invalid address given ${from}`);\n    if (!isHexString(salt))\n        throw new InvalidMethodParamsError(`Invalid salt value ${salt}`);\n    if (!isHexString(initCode))\n        throw new InvalidMethodParamsError(`Invalid initCode value ${initCode}`);\n    const initCodeHash = keccak256(initCode);\n    const initCodeHashPadded = initCodeHash.padStart(64, '0'); // Pad to 32 bytes (64 hex characters)\n    const create2Params = ['0xff', from, salt, initCodeHashPadded].map(x => x.replace(/0x/, ''));\n    const create2Address = `0x${create2Params.join('')}`;\n    return toChecksumAddress(`0x${keccak256(create2Address).slice(26)}`); // Slice to get the last 20 bytes (40 hex characters) & checksum\n};\n//# sourceMappingURL=utils.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Web3ContractError } from 'web3-errors';\nimport { sendTransaction } from 'web3-eth';\nimport { decodeFunctionCall } from 'web3-eth-abi';\nimport { DEFAULT_RETURN_FORMAT, } from 'web3-types';\nimport { format } from 'web3-utils';\nimport { isNullish } from 'web3-validator';\nimport { encodeMethodABI } from './encoding.js';\nimport { getSendTxParams } from './utils.js';\n/*\n * This class is only supposed to be used for the return of `new Contract(...).deploy(...)` method.\n */\nexport class DeployerMethodClass {\n    _contractMethodDeploySend(tx) {\n        // eslint-disable-next-line no-use-before-define\n        const returnTxOptions = {\n            transactionResolver: (receipt) => {\n                if (receipt.status === BigInt(0)) {\n                    throw new Web3ContractError(\"code couldn't be stored\", receipt);\n                }\n                const newContract = this.parent.clone();\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                newContract.options.address = receipt.contractAddress;\n                return newContract;\n            },\n            contractAbi: this.parent.options.jsonInterface,\n            // TODO Should make this configurable by the user\n            checkRevertBeforeSending: false,\n        };\n        return isNullish(this.parent.getTransactionMiddleware())\n            ? sendTransaction(this.parent, tx, this.parent.defaultReturnFormat, returnTxOptions) // not calling this with undefined Middleware because it will not break if Eth package is not updated\n            : sendTransaction(this.parent, tx, this.parent.defaultReturnFormat, returnTxOptions, this.parent.getTransactionMiddleware());\n    }\n    constructor(\n    // eslint-disable-next-line no-use-before-define\n    parent, deployOptions) {\n        this.parent = parent;\n        this.deployOptions = deployOptions;\n        const { args, abi, contractOptions, deployData } = this.calculateDeployParams();\n        this.args = args;\n        this.constructorAbi = abi;\n        this.contractOptions = contractOptions;\n        this.deployData = deployData;\n    }\n    send(options) {\n        const modifiedOptions = Object.assign({}, options);\n        const tx = this.populateTransaction(modifiedOptions);\n        return this._contractMethodDeploySend(tx);\n    }\n    populateTransaction(txOptions) {\n        var _a, _b;\n        const modifiedContractOptions = Object.assign(Object.assign({}, this.contractOptions), { from: (_b = (_a = this.contractOptions.from) !== null && _a !== void 0 ? _a : this.parent.defaultAccount) !== null && _b !== void 0 ? _b : undefined });\n        // args, abi, contractOptions, deployData\n        const tx = getSendTxParams({\n            abi: this.constructorAbi,\n            params: this.args,\n            options: Object.assign(Object.assign({}, txOptions), { dataInputFill: this.parent.contractDataInputFill }),\n            contractOptions: modifiedContractOptions,\n        });\n        // @ts-expect-error remove unnecessary field\n        if (tx.dataInputFill) {\n            // @ts-expect-error remove unnecessary field\n            delete tx.dataInputFill;\n        }\n        return tx;\n    }\n    calculateDeployParams() {\n        var _a, _b, _c, _d, _e, _f;\n        let abi = this.parent.options.jsonInterface.find(j => j.type === 'constructor');\n        if (!abi) {\n            abi = {\n                type: 'constructor',\n                stateMutability: '',\n            };\n        }\n        const _input = format({ format: 'bytes' }, (_b = (_a = this.deployOptions) === null || _a === void 0 ? void 0 : _a.input) !== null && _b !== void 0 ? _b : this.parent.options.input, DEFAULT_RETURN_FORMAT);\n        const _data = format({ format: 'bytes' }, (_d = (_c = this.deployOptions) === null || _c === void 0 ? void 0 : _c.data) !== null && _d !== void 0 ? _d : this.parent.options.data, DEFAULT_RETURN_FORMAT);\n        if ((!_input || _input.trim() === '0x') && (!_data || _data.trim() === '0x')) {\n            throw new Web3ContractError('contract creation without any data provided.');\n        }\n        const args = (_f = (_e = this.deployOptions) === null || _e === void 0 ? void 0 : _e.arguments) !== null && _f !== void 0 ? _f : [];\n        const contractOptions = Object.assign(Object.assign({}, this.parent.options), { input: _input, data: _data });\n        const deployData = _input !== null && _input !== void 0 ? _input : _data;\n        return { args, abi, contractOptions, deployData };\n    }\n    estimateGas(options_1) {\n        return __awaiter(this, arguments, void 0, function* (options, returnFormat = this.parent.defaultReturnFormat) {\n            const modifiedOptions = Object.assign({}, options);\n            return this.parent.contractMethodEstimateGas({\n                abi: this.constructorAbi,\n                params: this.args,\n                returnFormat,\n                options: modifiedOptions,\n                contractOptions: this.contractOptions,\n            });\n        });\n    }\n    encodeABI() {\n        return encodeMethodABI(this.constructorAbi, this.args, format({ format: 'bytes' }, this.deployData, this.parent.defaultReturnFormat));\n    }\n    decodeData(data) {\n        return Object.assign(Object.assign({}, decodeFunctionCall(this.constructorAbi, data.replace(this.deployData, ''), false)), { __method__: this.constructorAbi.type });\n    }\n}\n//# sourceMappingURL=contract-deployer-method-class.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Web3SubscriptionManager } from 'web3-core';\nimport { DEFAULT_RETURN_FORMAT } from 'web3-types';\n/**\n * Similar to `Web3SubscriptionManager` but has a reference to the Contract that uses\n */\nexport class ContractSubscriptionManager extends Web3SubscriptionManager {\n    /**\n     *\n     * @param - Web3SubscriptionManager\n     * @param - parentContract\n     *\n     * @example\n     * ```ts\n     * const requestManager = new Web3RequestManager(\"ws://localhost:8545\");\n     * const contract = new Contract(...)\n     * const subscriptionManager = new Web3SubscriptionManager(requestManager, {}, contract);\n     * ```\n     */\n    constructor(self, parentContract) {\n        super(self.requestManager, self.registeredSubscriptions);\n        this.parentContract = parentContract;\n    }\n    /**\n     * Will create a new subscription\n     *\n     * @param name - The subscription you want to subscribe to\n     * @param args - Optional additional parameters, depending on the subscription type\n     * @param returnFormat- ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     *\n     * Will subscribe to a specific topic (note: name)\n     * @returns The subscription object\n     */\n    subscribe(name_1, args_1) {\n        const _super = Object.create(null, {\n            subscribe: { get: () => super.subscribe }\n        });\n        return __awaiter(this, arguments, void 0, function* (name, args, returnFormat = DEFAULT_RETURN_FORMAT) {\n            return _super.subscribe.call(this, name, args !== null && args !== void 0 ? args : this.parentContract.options, returnFormat);\n        });\n    }\n}\n//# sourceMappingURL=contract-subscription-manager.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Web3Context, Web3ConfigEvent, } from 'web3-core';\nimport { ContractExecutionError, ContractTransactionDataAndInputError, SubscriptionError, Web3ContractError, } from 'web3-errors';\nimport { createAccessList, call, estimateGas, getLogs, sendTransaction, decodeEventABI, NewHeadsSubscription, ALL_EVENTS, ALL_EVENTS_ABI, } from 'web3-eth';\nimport { decodeFunctionCall, decodeFunctionReturn, encodeEventSignature, encodeFunctionSignature, decodeContractErrorData, isAbiErrorFragment, isAbiEventFragment, isAbiFunctionFragment, jsonInterfaceMethodToString, } from 'web3-eth-abi';\nimport { BlockTags, } from 'web3-types';\nimport { format, isDataFormat, keccak256, toChecksumAddress, isContractInitOptions, } from 'web3-utils';\nimport { isNullish, validator, utils as validatorUtils, Web3ValidatorError, } from 'web3-validator';\nimport { encodeEventABI, encodeMethodABI } from './encoding.js';\nimport { ContractLogsSubscription } from './contract_log_subscription.js';\nimport { getCreateAccessListParams, getEstimateGasParams, getEthTxCallParams, getSendTxParams, isWeb3ContractContext, } from './utils.js';\n// eslint-disable-next-line import/no-cycle\nimport { DeployerMethodClass } from './contract-deployer-method-class.js';\n// eslint-disable-next-line import/no-cycle\nimport { ContractSubscriptionManager } from './contract-subscription-manager.js';\nconst contractSubscriptions = {\n    logs: ContractLogsSubscription,\n    newHeads: NewHeadsSubscription,\n    newBlockHeaders: NewHeadsSubscription,\n};\n/**\n * The `web3.eth.Contract` makes it easy to interact with smart contracts on the ethereum blockchain.\n * For using contract package, first install Web3 package using: `npm i web3` or `yarn add web3` based on your package manager, after that contracts features can be used as mentioned in following snippet.\n * ```ts\n *\n * import { Web3 } from 'web3';\n *\n * const web3 = new Web3('https://127.0.0.1:4545');\n * const abi = [...] as const; // your contract ABI\n *\n * let contract = new web3.eth.Contract(abi,'0xdAC17F958D2ee523a2206206994597C13D831ec7');\n * await contract.methods.balanceOf('0xdAC17F958D2ee523a2206206994597C13D831ec7').call();\n * ```\n * For using individual package install `web3-eth-contract` and `web3-core` packages using: `npm i web3-eth-contract web3-core` or `yarn add web3-eth-contract web3-core`. This is more efficient approach for building lightweight applications.\n * ```ts\n *\n * import { Web3Context } from 'web3-core';\n * import { Contract } from 'web3-eth-contract';\n *\n * const abi = [...] as const; // your contract ABI\n *\n * let contract = new web3.eth.Contract(\n * \tabi,\n * \t'0xdAC17F958D2ee523a2206206994597C13D831ec7'\n * \t new Web3Context('http://127.0.0.1:8545'));\n *\n * await contract.methods.balanceOf('0xdAC17F958D2ee523a2206206994597C13D831ec7').call();\n * ```\n * ## Generated Methods\n * Following methods are generated by web3.js contract object for each of contract functions by using its ABI.\n *\n * ### send\n * This is used to send a transaction to the smart contract and execute its method. Note this can alter the smart contract state.\n *\n * #### Parameters\n * options?: PayableTxOptions | NonPayableTxOptions\n *\n * #### Returns\n * [Web3PromiEvent](/api/web3/namespace/core#Web3PromiEvent) : Web3 Promi Event\n *\n * ```ts\n * // using the promise\n * myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'})\n * \t.then(function(receipt){\n * \t\t// other parts of code to use receipt\n * \t});\n *\n *\n * // using the event emitter\n * myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'})\n * \t.on('transactionHash', function(hash){\n * \t\t// ...\n * \t})\n * \t.on('confirmation', function(confirmationNumber, receipt){\n * \t\t// ...\n * \t})\n * \t.on('receipt', function(receipt){\n * \t\t// ...\n * \t})\n * \t.on('error', function(error, receipt) {\n * \t\t// ...\n * \t});\n *\n * ```\n *\n * ### call\n * This will execute smart contract method in the EVM without sending any transaction. Note calling cannot alter the smart contract state.\n *\n * #### Parameters\n * options?: PayableCallOptions | NonPayableCallOptions,\n * block?: BlockNumberOrTag,\n *\n * #### Returns\n * Promise : having results of call\n *\n * ```ts\n *\n * let myContract = new web3.eth.Contract(abi, address);\n *\n * myContract.methods.myFunction().call()\n * .then(console.log);\n *\n * ```\n * ### estimateGas\n * Returns the amount of gas consumed by executing the method in EVM without creating a new transaction on the blockchain. The returned amount can be used as a gas estimate for executing the transaction publicly. The actual gas used can be different when sending the transaction later, as the state of the smart contract can be different at that time.\n *\n * #### Parameters\n * options?: PayableCallOptions,\n * returnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n *\n * #### Returns\n * Promise: The gas amount estimated.\n *\n * ```ts\n * const estimatedGas = await contract.methods.approve('0xdAC17F958D2ee523a2206206994597C13D831ec7', 300)\n *     .estimateGas();\n *\n * ```\n *\n * ### encodeABI\n * Encodes the ABI for this method. The resulting hex string is 32-bit function signature hash plus the passed parameters in Solidity tightly packed format. This can be used to send a transaction, call a method, or pass it into another smart contract’s method as arguments. Set the data field on web3.eth.sendTransaction options as the encodeABI() result and it is the same as calling the contract method with contract.myMethod.send().\n *\n * Some use cases for encodeABI() include: preparing a smart contract transaction for a multisignature wallet, working with offline wallets and cold storage and creating transaction payload for complex smart contract proxy calls.\n *\n * #### Parameters\n * None\n *\n * #### Returns\n * String: The encoded ABI.\n *\n * ```ts\n * const encodedABI = await contract.methods.approve('0xdAC17F958D2ee523a2206206994597C13D831ec7', 300)\n *     .encodeABI();\n *\n * ```\n *\n\n * ### decodeMethodData\n * Decodes the given ABI-encoded data, revealing both the method name and the parameters used in the smart contract call.\n * This function reverses the encoding process happens at the method `encodeABI`.\n * It's particularly useful for debugging and understanding the interactions with and between smart contracts.\n *\n * #### Parameters\n *\n * - `data` **HexString**: The string of ABI-encoded data that needs to be decoded. This should include the method signature and the encoded parameters.\n *\n * #### Returns\n *\n * - **Object**: This object combines both the decoded parameters and the method name in a readable format. Specifically, the returned object contains:\n *   - `__method__` **String**: The name of the contract method, reconstructed from the ABI.\n *   - `__length__` **Number**: The number of parameters decoded.\n *   - Additional properties representing each parameter by name, as well as their position and values.\n *\n * #### Example\n *\n * Given an ABI-encoded string from a transaction, you can decode this data to identify the method called and the parameters passed.\n * Here's a simplified example:\n *\n *\n * ```typescript\n * const GreeterAbi = [\n * \t{\n * \t\tinputs: [\n * \t\t\t{\n * \t\t\t\tinternalType: 'string',\n * \t\t\t\tname: '_greeting',\n * \t\t\t\ttype: 'string',\n * \t\t\t},\n * \t\t],\n * \t\tname: 'setGreeting',\n * \t\toutputs: [],\n * \t\ttype: 'function',\n * \t},\n * ];\n * const contract = new Contract(GreeterAbi); // Initialize with your contract's ABI\n *\n * // The ABI-encoded data string for \"setGreeting('Hello World')\"\n * const encodedData =\n * \t'0xa41368620000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000b48656c6c6f20576f726c64000000000000000000000000000000000000000000';\n *\n * try {\n * \tconst decoded = contract.decodeMethodData(encodedData);\n * \tconsole.log(decoded.__method__); // Outputs: \"setGreeting(string)\"\n * \tconsole.log(decoded); // Outputs the detailed parameter data\n * \t// This tells that the method called was `setGreeting` with a single string parameter \"Hello World\":\n * \t// {\n * \t//   __method__: 'setGreeting(string)',\n * \t//   __length__: 1,\n * \t//   '0': 'Hello World',\n * \t//   _greeting: 'Hello World'\n * \t// }\n * } catch (error) {\n * \tconsole.error(error);\n * }\n * ```\n *\n\n * ### createAccessList\n * This will create an access list a method execution will access when executed in the EVM.\n * Note: You must specify a from address and gas if it’s not specified in options when instantiating parent contract object.\n *\n * #### Parameters\n * options?: PayableCallOptions | NonPayableCallOptions,\n * block?: BlockNumberOrTag,\n *\n * #### Returns\n * Promise: The generated access list for transaction.\n *\n * ```ts\n * const accessList = await contract.methods.approve('0xbEe634C21c16F05B03B704BaE071536121e6cFeA', 300)\n *     .createAccessList({\n *         from: \"0x9992695e1053bb737d3cfae4743dcfc4b94f203d\"\n *    });\n * ```\n *\n */\nexport class Contract extends Web3Context {\n    get subscriptionManager() {\n        return this._subscriptionManager;\n    }\n    constructor(jsonInterface, addressOrOptionsOrContext, optionsOrContextOrReturnFormat, contextOrReturnFormat, returnFormat) {\n        var _a, _b, _c;\n        // eslint-disable-next-line no-nested-ternary\n        const options = isContractInitOptions(addressOrOptionsOrContext)\n            ? addressOrOptionsOrContext\n            : isContractInitOptions(optionsOrContextOrReturnFormat)\n                ? optionsOrContextOrReturnFormat\n                : undefined;\n        let contractContext;\n        if (isWeb3ContractContext(addressOrOptionsOrContext)) {\n            contractContext = addressOrOptionsOrContext;\n        }\n        else if (isWeb3ContractContext(optionsOrContextOrReturnFormat)) {\n            contractContext = optionsOrContextOrReturnFormat;\n        }\n        else {\n            contractContext = contextOrReturnFormat;\n        }\n        let provider;\n        if (typeof addressOrOptionsOrContext === 'object' &&\n            'provider' in addressOrOptionsOrContext) {\n            provider = addressOrOptionsOrContext.provider;\n        }\n        else if (typeof optionsOrContextOrReturnFormat === 'object' &&\n            'provider' in optionsOrContextOrReturnFormat) {\n            provider = optionsOrContextOrReturnFormat.provider;\n        }\n        else if (typeof contextOrReturnFormat === 'object' &&\n            'provider' in contextOrReturnFormat) {\n            provider = contextOrReturnFormat.provider;\n        }\n        else {\n            provider = Contract.givenProvider;\n        }\n        super(Object.assign(Object.assign({}, contractContext), { provider, registeredSubscriptions: contractSubscriptions }));\n        /**\n         * Set to true if you want contracts' defaults to sync with global defaults.\n         */\n        this.syncWithContext = false;\n        this._functions = {};\n        this._subscriptionManager = new ContractSubscriptionManager(super.subscriptionManager, this);\n        // Init protected properties\n        if (contractContext === null || contractContext === void 0 ? void 0 : contractContext.wallet) {\n            this._wallet = contractContext.wallet;\n        }\n        if (contractContext === null || contractContext === void 0 ? void 0 : contractContext.accountProvider) {\n            this._accountProvider = contractContext.accountProvider;\n        }\n        if (!isNullish(options) &&\n            !isNullish(options.data) &&\n            !isNullish(options.input) &&\n            this.config.contractDataInputFill !== 'both')\n            throw new ContractTransactionDataAndInputError({\n                data: options.data,\n                input: options.input,\n            });\n        this._overloadedMethodAbis = new Map();\n        // eslint-disable-next-line no-nested-ternary\n        const returnDataFormat = isDataFormat(contextOrReturnFormat)\n            ? contextOrReturnFormat\n            : isDataFormat(optionsOrContextOrReturnFormat)\n                ? optionsOrContextOrReturnFormat\n                : returnFormat !== null && returnFormat !== void 0 ? returnFormat : this.defaultReturnFormat;\n        const address = typeof addressOrOptionsOrContext === 'string' ? addressOrOptionsOrContext : undefined;\n        this.config.contractDataInputFill =\n            (_a = options === null || options === void 0 ? void 0 : options.dataInputFill) !== null && _a !== void 0 ? _a : this.config.contractDataInputFill;\n        this._parseAndSetJsonInterface(jsonInterface, returnDataFormat);\n        if (this.defaultReturnFormat !== returnDataFormat) {\n            this.defaultReturnFormat = returnDataFormat;\n        }\n        if (!isNullish(address)) {\n            this._parseAndSetAddress(address, returnDataFormat);\n        }\n        this.options = {\n            address,\n            jsonInterface: this._jsonInterface,\n            gas: (_b = options === null || options === void 0 ? void 0 : options.gas) !== null && _b !== void 0 ? _b : options === null || options === void 0 ? void 0 : options.gasLimit,\n            gasPrice: options === null || options === void 0 ? void 0 : options.gasPrice,\n            from: options === null || options === void 0 ? void 0 : options.from,\n            input: options === null || options === void 0 ? void 0 : options.input,\n            data: options === null || options === void 0 ? void 0 : options.data,\n        };\n        this.syncWithContext = (_c = options === null || options === void 0 ? void 0 : options.syncWithContext) !== null && _c !== void 0 ? _c : false;\n        if (contractContext instanceof Web3Context) {\n            this.subscribeToContextEvents(contractContext);\n        }\n        Object.defineProperty(this.options, 'address', {\n            set: (value) => this._parseAndSetAddress(value, returnDataFormat),\n            get: () => this._address,\n        });\n        Object.defineProperty(this.options, 'jsonInterface', {\n            set: (value) => this._parseAndSetJsonInterface(value, returnDataFormat),\n            get: () => this._jsonInterface,\n        });\n        if (contractContext instanceof Web3Context) {\n            contractContext.on(Web3ConfigEvent.CONFIG_CHANGE, event => {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                this.setConfig({ [event.name]: event.newValue });\n            });\n        }\n    }\n    setTransactionMiddleware(transactionMiddleware) {\n        this.transactionMiddleware = transactionMiddleware;\n    }\n    getTransactionMiddleware() {\n        return this.transactionMiddleware;\n    }\n    /**\n     * Subscribe to an event.\n     *\n     * ```ts\n     * await myContract.events.MyEvent([options])\n     * ```\n     *\n     * There is a special event `allEvents` that can be used to subscribe all events.\n     *\n     * ```ts\n     * await myContract.events.allEvents([options])\n     * ```\n     *\n     * @returns - When individual event is accessed will returns {@link ContractBoundEvent} object\n     */\n    get events() {\n        return this._events;\n    }\n    /**\n     * Creates a transaction object for that method, which then can be `called`, `send`, `estimated`, `createAccessList` , or `ABI encoded`.\n     *\n     * The methods of this smart contract are available through:\n     *\n     * The name: `myContract.methods.myMethod(123)`\n     * The name with parameters: `myContract.methods['myMethod(uint256)'](123)`\n     * The signature `myContract.methods['0x58cf5f10'](123)`\n     *\n     * This allows calling functions with same name but different parameters from the JavaScript contract object.\n     *\n     * \\> The method signature does not provide a type safe interface, so we recommend to use method `name` instead.\n     *\n     * ```ts\n     * // calling a method\n     * const result = await myContract.methods.myMethod(123).call({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n     *\n     * // or sending and using a promise\n     * const receipt = await myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n     *\n     * // or sending and using the events\n     * const sendObject = myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n     * sendObject.on('transactionHash', function(hash){\n     *   ...\n     * });\n     * sendObject.on('receipt', function(receipt){\n     *   ...\n     * });\n     * sendObject.on('confirmation', function(confirmationNumber, receipt){\n     *   ...\n     * });\n     * sendObject.on('error', function(error, receipt) {\n     *   ...\n     * });\n     * ```\n     *\n     * @returns - Either returns {@link PayableMethodObject} or {@link NonPayableMethodObject} based on the definitions of the ABI of that contract.\n     */\n    get methods() {\n        return this._methods;\n    }\n    /**\n     * Clones the current contract instance. This doesn't deploy contract on blockchain and only creates a local clone.\n     *\n     * @returns - The new contract instance.\n     *\n     * ```ts\n     * const contract1 = new web3.eth.Contract(abi, address, {gasPrice: '12345678', from: fromAddress});\n     *\n     * const contract2 = contract1.clone();\n     * contract2.options.address = '0xdAC17F958D2ee523a2206206994597C13D831ec7';\n     *\n     * (contract1.options.address !== contract2.options.address);\n     * > true\n     * ```\n     */\n    clone() {\n        let newContract;\n        if (this.options.address) {\n            newContract = new Contract([...this._jsonInterface, ...this._errorsInterface], this.options.address, {\n                gas: this.options.gas,\n                gasPrice: this.options.gasPrice,\n                from: this.options.from,\n                input: this.options.input,\n                data: this.options.data,\n                provider: this.currentProvider,\n                syncWithContext: this.syncWithContext,\n                dataInputFill: this.config.contractDataInputFill,\n            }, this.getContextObject());\n        }\n        else {\n            newContract = new Contract([...this._jsonInterface, ...this._errorsInterface], {\n                gas: this.options.gas,\n                gasPrice: this.options.gasPrice,\n                from: this.options.from,\n                input: this.options.input,\n                data: this.options.data,\n                provider: this.currentProvider,\n                syncWithContext: this.syncWithContext,\n                dataInputFill: this.config.contractDataInputFill,\n            }, this.getContextObject());\n        }\n        if (this.context)\n            newContract.subscribeToContextEvents(this.context);\n        return newContract;\n    }\n    /**\n     * Call this function to deploy the contract to the blockchain. After successful deployment the promise will resolve with a new contract instance.\n     *\n     * ```ts\n     * myContract.deploy({\n     *   input: '0x12345...', // data keyword can be used, too.\n     *   arguments: [123, 'My String']\n     * })\n     * .send({\n     *   from: '0x1234567890123456789012345678901234567891',\n     *   gas: 1500000,\n     *   gasPrice: '30000000000000'\n     * }, function(error, transactionHash){ ... })\n     * .on('error', function(error){ ... })\n     * .on('transactionHash', function(transactionHash){ ... })\n     * .on('receipt', function(receipt){\n     *  console.log(receipt.contractAddress) // contains the new contract address\n     * })\n     * .on('confirmation', function(confirmationNumber, receipt){ ... })\n     * .then(function(newContractInstance){\n     *   console.log(newContractInstance.options.address) // instance with the new contract address\n     * });\n     *\n     *\n     * // When the data is already set as an option to the contract itself\n     * myContract.options.data = '0x12345...';\n     *\n     * myContract.deploy({\n     *   arguments: [123, 'My String']\n     * })\n     * .send({\n     *   from: '0x1234567890123456789012345678901234567891',\n     *   gas: 1500000,\n     *   gasPrice: '30000000000000'\n     * })\n     * .then(function(newContractInstance){\n     *   console.log(newContractInstance.options.address) // instance with the new contract address\n     * });\n     *\n     *\n     * // Simply encoding\n     * myContract.deploy({\n     *   input: '0x12345...',\n     *   arguments: [123, 'My String']\n     * })\n     * .encodeABI();\n     * > '0x12345...0000012345678765432'\n     *\n     *\n     * // decoding\n     * myContract.deploy({\n     *   input: '0x12345...',\n     *   // arguments: [123, 'My Greeting'] if you just need to decode the data, you can skip the arguments\n     * })\n     * .decodeData('0x12345...0000012345678765432');\n     * > {\n     *      __method__: 'constructor',\n     *      __length__: 2,\n     *      '0': '123',\n     *      _id: '123',\n     *      '1': 'My Greeting',\n     *      _greeting: 'My Greeting',\n     *   }\n     *\n     *\n     * // Gas estimation\n     * myContract.deploy({\n     *   input: '0x12345...',\n     *   arguments: [123, 'My String']\n     * })\n     * .estimateGas(function(err, gas){\n     *   console.log(gas);\n     * });\n     * ```\n     *\n     * @returns - The transaction object\n     */\n    deploy(deployOptions) {\n        return new DeployerMethodClass(this, deployOptions);\n    }\n    getPastEvents(param1, param2, param3) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const eventName = typeof param1 === 'string' ? param1 : ALL_EVENTS;\n            const options = \n            // eslint-disable-next-line no-nested-ternary\n            typeof param1 !== 'string' && !isDataFormat(param1)\n                ? param1\n                : !isDataFormat(param2)\n                    ? param2\n                    : {};\n            // eslint-disable-next-line no-nested-ternary\n            const returnFormat = isDataFormat(param1)\n                ? param1\n                : isDataFormat(param2)\n                    ? param2\n                    : param3 !== null && param3 !== void 0 ? param3 : this.defaultReturnFormat;\n            const abi = eventName === 'allEvents' || eventName === ALL_EVENTS\n                ? ALL_EVENTS_ABI\n                : this._jsonInterface.find(j => 'name' in j && j.name === eventName);\n            if (!abi) {\n                throw new Web3ContractError(`Event ${String(eventName)} not found.`);\n            }\n            const { fromBlock, toBlock, topics, address } = encodeEventABI(this.options, abi, options !== null && options !== void 0 ? options : {});\n            const logs = yield getLogs(this, { fromBlock, toBlock, topics, address }, returnFormat);\n            const decodedLogs = logs\n                ? logs.map(log => typeof log === 'string'\n                    ? log\n                    : decodeEventABI(abi, log, this._jsonInterface, returnFormat))\n                : [];\n            const filter = (_a = options === null || options === void 0 ? void 0 : options.filter) !== null && _a !== void 0 ? _a : {};\n            const filterKeys = Object.keys(filter);\n            if (filterKeys.length > 0) {\n                return decodedLogs.filter(log => {\n                    if (typeof log === 'string')\n                        return true;\n                    return filterKeys.every((key) => {\n                        var _a;\n                        if (Array.isArray(filter[key])) {\n                            return filter[key].some((v) => String(log.returnValues[key]).toUpperCase() ===\n                                String(v).toUpperCase());\n                        }\n                        const inputAbi = (_a = abi.inputs) === null || _a === void 0 ? void 0 : _a.filter(input => input.name === key)[0];\n                        if ((inputAbi === null || inputAbi === void 0 ? void 0 : inputAbi.indexed) && inputAbi.type === 'string') {\n                            const hashedIndexedString = keccak256(filter[key]);\n                            if (hashedIndexedString === String(log.returnValues[key]))\n                                return true;\n                        }\n                        return (String(log.returnValues[key]).toUpperCase() ===\n                            String(filter[key]).toUpperCase());\n                    });\n                });\n            }\n            return decodedLogs;\n        });\n    }\n    _parseAndSetAddress(value, returnFormat = this.defaultReturnFormat) {\n        this._address = value\n            ? toChecksumAddress(format({ format: 'address' }, value, returnFormat))\n            : value;\n    }\n    decodeMethodData(data) {\n        const methodSignature = data.slice(0, 10);\n        const functionsAbis = this._jsonInterface.filter(j => j.type !== 'error');\n        const abi = functionsAbis.find(a => methodSignature === encodeFunctionSignature(jsonInterfaceMethodToString(a)));\n        if (!abi) {\n            throw new Web3ContractError(`The ABI for the provided method signature ${methodSignature} was not found.`);\n        }\n        return decodeFunctionCall(abi, data);\n    }\n    _parseAndSetJsonInterface(abis, returnFormat = this.defaultReturnFormat) {\n        var _a, _b;\n        this._functions = {};\n        this._methods = {};\n        this._events = {};\n        let result = [];\n        const functionsAbi = abis.filter(abi => abi.type !== 'error');\n        const errorsAbi = abis.filter(abi => isAbiErrorFragment(abi));\n        for (const a of functionsAbi) {\n            const abi = Object.assign(Object.assign({}, a), { signature: '' });\n            if (isAbiFunctionFragment(abi)) {\n                const methodName = jsonInterfaceMethodToString(abi);\n                const methodSignature = encodeFunctionSignature(methodName);\n                abi.methodNameWithInputs = methodName;\n                abi.signature = methodSignature;\n                // make constant and payable backwards compatible\n                abi.constant =\n                    abi.stateMutability === 'view' ||\n                        abi.stateMutability === 'pure' ||\n                        abi.constant;\n                abi.payable = abi.stateMutability === 'payable' || abi.payable;\n                this._overloadedMethodAbis.set(abi.name, [\n                    ...((_a = this._overloadedMethodAbis.get(abi.name)) !== null && _a !== void 0 ? _a : []),\n                    abi,\n                ]);\n                const abiFragment = (_b = this._overloadedMethodAbis.get(abi.name)) !== null && _b !== void 0 ? _b : [];\n                const contractMethod = this._createContractMethod(abiFragment, errorsAbi);\n                const exactContractMethod = this._createContractMethod(abiFragment, errorsAbi, true);\n                this._functions[methodName] = {\n                    signature: methodSignature,\n                    method: exactContractMethod,\n                };\n                // We don't know a particular type of the Abi method so can't type check\n                this._methods[abi.name] =\n                    contractMethod;\n                // We don't know a particular type of the Abi method so can't type check\n                this._methods[methodName] =\n                    exactContractMethod;\n                // We don't know a particular type of the Abi method so can't type check\n                this._methods[methodSignature] =\n                    exactContractMethod;\n            }\n            else if (isAbiEventFragment(abi)) {\n                const eventName = jsonInterfaceMethodToString(abi);\n                const eventSignature = encodeEventSignature(eventName);\n                const event = this._createContractEvent(abi, returnFormat);\n                abi.signature = eventSignature;\n                if (!(eventName in this._events) || abi.name === 'bound') {\n                    // It's a private type and we don't want to expose it and no need to check\n                    this._events[eventName] = event;\n                }\n                // It's a private type and we don't want to expose it and no need to check\n                this._events[abi.name] = event;\n                // It's a private type and we don't want to expose it and no need to check\n                this._events[eventSignature] = event;\n            }\n            result = [...result, abi];\n        }\n        this._events.allEvents = this._createContractEvent(ALL_EVENTS_ABI, returnFormat);\n        this._jsonInterface = [...result];\n        this._errorsInterface = errorsAbi;\n    }\n    // eslint-disable-next-line class-methods-use-this\n    _getAbiParams(abi, params) {\n        var _a;\n        try {\n            return validatorUtils.transformJsonDataToAbiFormat((_a = abi.inputs) !== null && _a !== void 0 ? _a : [], params);\n        }\n        catch (error) {\n            throw new Web3ContractError(`Invalid parameters for method ${abi.name}: ${error.message}`);\n        }\n    }\n    _createContractMethod(abiArr, errorsAbis, exact = false) {\n        const abi = abiArr[abiArr.length - 1];\n        return (...params) => {\n            var _a, _b, _c;\n            let abiParams;\n            const abis = (_b = (exact\n                ? (_a = this._overloadedMethodAbis\n                    .get(abi.name)) === null || _a === void 0 ? void 0 : _a.filter(_abi => _abi.signature === abi.signature)\n                : this._overloadedMethodAbis.get(abi.name))) !== null && _b !== void 0 ? _b : [];\n            let methodAbi = abis[0];\n            const internalErrorsAbis = errorsAbis;\n            const arrayOfAbis = abis.filter(_abi => { var _a; return ((_a = _abi.inputs) !== null && _a !== void 0 ? _a : []).length === params.length; });\n            if (abis.length === 1 || arrayOfAbis.length === 0) {\n                abiParams = this._getAbiParams(methodAbi, params);\n                validator.validate((_c = abi.inputs) !== null && _c !== void 0 ? _c : [], abiParams);\n            }\n            else {\n                const errors = [];\n                // all the methods that have is valid for the given inputs\n                const applicableMethodAbi = [];\n                for (const _abi of arrayOfAbis) {\n                    try {\n                        abiParams = this._getAbiParams(_abi, params);\n                        validator.validate(_abi.inputs, abiParams);\n                        applicableMethodAbi.push(_abi);\n                    }\n                    catch (e) {\n                        errors.push(e);\n                    }\n                }\n                if (applicableMethodAbi.length === 1) {\n                    [methodAbi] = applicableMethodAbi; // take the first item that is the only item in the array\n                }\n                else if (applicableMethodAbi.length > 1) {\n                    [methodAbi] = applicableMethodAbi; // take the first item in the array\n                    console.warn(`Multiple methods found that is compatible with the given inputs.\\n\\tFound ${applicableMethodAbi.length} compatible methods: ${JSON.stringify(applicableMethodAbi.map(m => `${m.methodNameWithInputs} (signature: ${m.signature})`))} \\n\\tThe first one will be used: ${methodAbi.methodNameWithInputs}`);\n                    // TODO: 5.x Should throw a new error with the list of methods found.\n                    // Related issue: https://github.com/web3/web3.js/issues/6923\n                    // This is in order to provide an error message when there is more than one method found that fits the inputs.\n                    // To do that, replace the pervious line of code with something like the following line:\n                    // throw new Web3ValidatorError({ message: 'Multiple methods found',  ... list of applicable methods }));\n                }\n                if (errors.length === arrayOfAbis.length) {\n                    throw new Web3ValidatorError(errors);\n                }\n            }\n            const methods = {\n                arguments: abiParams,\n                call: (options, block) => __awaiter(this, void 0, void 0, function* () {\n                    return this._contractMethodCall(methodAbi, abiParams, internalErrorsAbis, options, block);\n                }),\n                send: (options) => this._contractMethodSend(methodAbi, abiParams, internalErrorsAbis, options),\n                populateTransaction: (options, contractOptions) => {\n                    var _a, _b;\n                    let modifiedContractOptions = contractOptions !== null && contractOptions !== void 0 ? contractOptions : this.options;\n                    modifiedContractOptions = Object.assign(Object.assign({}, modifiedContractOptions), { input: undefined, from: (_b = (_a = modifiedContractOptions === null || modifiedContractOptions === void 0 ? void 0 : modifiedContractOptions.from) !== null && _a !== void 0 ? _a : this.defaultAccount) !== null && _b !== void 0 ? _b : undefined });\n                    const tx = getSendTxParams({\n                        abi,\n                        params,\n                        options: Object.assign(Object.assign({}, options), { dataInputFill: this.config.contractDataInputFill }),\n                        contractOptions: modifiedContractOptions,\n                    });\n                    // @ts-expect-error remove unnecessary field\n                    if (tx.dataInputFill) {\n                        // @ts-expect-error remove unnecessary field\n                        delete tx.dataInputFill;\n                    }\n                    return tx;\n                },\n                estimateGas: (options_1, ...args_1) => __awaiter(this, [options_1, ...args_1], void 0, function* (options, returnFormat = this\n                    .defaultReturnFormat) {\n                    return this.contractMethodEstimateGas({\n                        abi: methodAbi,\n                        params: abiParams,\n                        returnFormat,\n                        options,\n                    });\n                }),\n                encodeABI: () => encodeMethodABI(methodAbi, abiParams),\n                decodeData: (data) => decodeFunctionCall(methodAbi, data),\n                createAccessList: (options, block) => __awaiter(this, void 0, void 0, function* () {\n                    return this._contractMethodCreateAccessList(methodAbi, abiParams, internalErrorsAbis, options, block);\n                }),\n            };\n            if (methodAbi.stateMutability === 'payable') {\n                return methods;\n            }\n            return methods;\n        };\n    }\n    _contractMethodCall(abi, params, errorsAbi, options, block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const tx = getEthTxCallParams({\n                abi,\n                params,\n                options: Object.assign(Object.assign({}, options), { dataInputFill: this.config.contractDataInputFill }),\n                contractOptions: Object.assign(Object.assign({}, this.options), { from: (_a = this.options.from) !== null && _a !== void 0 ? _a : this.config.defaultAccount }),\n            });\n            try {\n                const result = yield call(this, tx, block, this.defaultReturnFormat);\n                return decodeFunctionReturn(abi, result);\n            }\n            catch (error) {\n                if (error instanceof ContractExecutionError) {\n                    // this will parse the error data by trying to decode the ABI error inputs according to EIP-838\n                    decodeContractErrorData(errorsAbi, error.cause);\n                }\n                throw error;\n            }\n        });\n    }\n    _contractMethodCreateAccessList(abi, params, errorsAbi, options, block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const tx = getCreateAccessListParams({\n                abi,\n                params,\n                options: Object.assign(Object.assign({}, options), { dataInputFill: this.config.contractDataInputFill }),\n                contractOptions: Object.assign(Object.assign({}, this.options), { from: (_a = this.options.from) !== null && _a !== void 0 ? _a : this.config.defaultAccount }),\n            });\n            try {\n                return createAccessList(this, tx, block, this.defaultReturnFormat);\n            }\n            catch (error) {\n                if (error instanceof ContractExecutionError) {\n                    // this will parse the error data by trying to decode the ABI error inputs according to EIP-838\n                    decodeContractErrorData(errorsAbi, error.cause);\n                }\n                throw error;\n            }\n        });\n    }\n    _contractMethodSend(abi, params, errorsAbi, options, contractOptions) {\n        var _a, _b;\n        let modifiedContractOptions = contractOptions !== null && contractOptions !== void 0 ? contractOptions : this.options;\n        modifiedContractOptions = Object.assign(Object.assign({}, modifiedContractOptions), { input: undefined, from: (_b = (_a = modifiedContractOptions.from) !== null && _a !== void 0 ? _a : this.defaultAccount) !== null && _b !== void 0 ? _b : undefined });\n        const tx = getSendTxParams({\n            abi,\n            params,\n            options: Object.assign(Object.assign({}, options), { dataInputFill: this.config.contractDataInputFill }),\n            contractOptions: modifiedContractOptions,\n        });\n        const transactionToSend = isNullish(this.transactionMiddleware)\n            ? sendTransaction(this, tx, this.defaultReturnFormat, {\n                // TODO Should make this configurable by the user\n                checkRevertBeforeSending: false,\n                contractAbi: this._jsonInterface, // explicitly not passing middleware so if some one is using old eth package it will not break\n            })\n            : sendTransaction(this, tx, this.defaultReturnFormat, {\n                // TODO Should make this configurable by the user\n                checkRevertBeforeSending: false,\n                contractAbi: this._jsonInterface,\n            }, this.transactionMiddleware);\n        // eslint-disable-next-line no-void\n        void transactionToSend.on('error', (error) => {\n            if (error instanceof ContractExecutionError) {\n                // this will parse the error data by trying to decode the ABI error inputs according to EIP-838\n                decodeContractErrorData(errorsAbi, error.cause);\n            }\n        });\n        return transactionToSend;\n    }\n    contractMethodEstimateGas(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ abi, params, returnFormat, options, contractOptions, }) {\n            const tx = getEstimateGasParams({\n                abi,\n                params,\n                options: Object.assign(Object.assign({}, options), { dataInputFill: this.config.contractDataInputFill }),\n                contractOptions: contractOptions !== null && contractOptions !== void 0 ? contractOptions : this.options,\n            });\n            return estimateGas(this, tx, BlockTags.LATEST, returnFormat !== null && returnFormat !== void 0 ? returnFormat : this.defaultReturnFormat);\n        });\n    }\n    // eslint-disable-next-line class-methods-use-this\n    _createContractEvent(abi, returnFormat = this.defaultReturnFormat) {\n        return (...params) => {\n            var _a;\n            const { topics, fromBlock } = encodeEventABI(this.options, abi, params[0]);\n            const sub = new ContractLogsSubscription({\n                address: this.options.address,\n                topics,\n                abi,\n                jsonInterface: this._jsonInterface,\n            }, {\n                subscriptionManager: this.subscriptionManager,\n                returnFormat,\n            });\n            if (!isNullish(fromBlock)) {\n                // emit past events when fromBlock is defined\n                this.getPastEvents(abi.name, { fromBlock, topics }, returnFormat)\n                    .then(logs => {\n                    if (logs) {\n                        logs.forEach(log => sub.emit('data', log));\n                    }\n                })\n                    .catch((error) => {\n                    sub.emit('error', new SubscriptionError('Failed to get past events.', error));\n                });\n            }\n            (_a = this.subscriptionManager) === null || _a === void 0 ? void 0 : _a.addSubscription(sub).catch((error) => {\n                sub.emit('error', new SubscriptionError('Failed to subscribe.', error));\n            });\n            return sub;\n        };\n    }\n    subscribeToContextEvents(context) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const contractThis = this;\n        this.context = context;\n        if (contractThis.syncWithContext) {\n            context.on(Web3ConfigEvent.CONFIG_CHANGE, event => {\n                contractThis.setConfig({ [event.name]: event.newValue });\n            });\n        }\n    }\n}\n//# sourceMappingURL=contract.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * The `web3.eth.Contract` object makes it easy to interact with smart contracts on the Ethereum blockchain.\n * When you create a new contract object you give it the JSON interface of the respective smart contract and\n * web3 will auto convert all calls into low level ABI calls over RPC for you.\n * This allows you to interact with smart contracts as if they were JavaScript objects.\n *\n * To use it standalone:\n *\n * ```ts\n * const Contract = require('web3-eth-contract');\n *\n * // set provider for all later instances to use\n * Contract.setProvider('ws://localhost:8546');\n *\n * const contract = new Contract(jsonInterface, address);\n *\n * contract.methods.somFunc().send({from: ....})\n * .on('receipt', function(){\n *    ...\n * });\n * ```\n */\n/**\n * This comment _supports3_ [Markdown](https://marked.js.org/)\n */\nimport { Contract } from './contract.js';\nexport * from './encoding.js';\nexport * from './contract.js';\nexport * from './contract-deployer-method-class.js';\nexport * from './contract_log_subscription.js';\nexport * from './types.js';\nexport * from './utils.js';\nexport default Contract;\n//# sourceMappingURL=index.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n//\n/**\n * An object holding the interface Ids of the ENS resolver contracts. Please see [how to write a resolver](https://docs.ens.domains/contract-developer-guide/writing-a-resolver).\n */\nexport const interfaceIds = {\n    addr: '0x3b3b57de',\n    name: '0x691f3431',\n    abi: '0x2203ab56',\n    pubkey: '0xc8690233',\n    text: '0x59d1d43c',\n    contenthash: '0xbc1c58d1',\n};\n/**\n * An object holding the functions that are supported by the ENS resolver contracts/interfaces.\n */\nexport const methodsInInterface = {\n    setAddr: 'addr',\n    addr: 'addr',\n    setPubkey: 'pubkey',\n    pubkey: 'pubkey',\n    setContenthash: 'contenthash',\n    contenthash: 'contenthash',\n    text: 'text',\n    name: 'name',\n};\n/**\n * An object holding the addressed of the ENS registries on the different networks (mainnet, goerli).\n */\nexport const registryAddresses = {\n    main: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    goerli: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n};\nexport const networkIds = {\n    '0x1': 'main',\n    '0x5': 'goerli',\n};\n//# sourceMappingURL=config.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// https://github.com/ensdomains/ens-contracts/blob/master/contracts/registry/ENSRegistry.sol\nexport const ENSRegistryAbi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'label',\n                type: 'bytes32',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'owner',\n                type: 'address',\n            },\n        ],\n        name: 'NewOwner',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'resolver',\n                type: 'address',\n            },\n        ],\n        name: 'NewResolver',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'owner',\n                type: 'address',\n            },\n        ],\n        name: 'Transfer',\n        type: 'event',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                internalType: 'address',\n                name: 'operator',\n                type: 'address',\n            },\n        ],\n        name: 'isApprovedForAll',\n        outputs: [\n            {\n                internalType: 'bool',\n                name: '',\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n        ],\n        name: 'owner',\n        outputs: [\n            {\n                internalType: 'address',\n                name: '',\n                type: 'address',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n        ],\n        name: 'recordExists',\n        outputs: [\n            {\n                internalType: 'bool',\n                name: '',\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n        ],\n        name: 'resolver',\n        outputs: [\n            {\n                internalType: 'address',\n                name: '',\n                type: 'address',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n        ],\n        name: 'ttl',\n        outputs: [\n            {\n                internalType: 'uint64',\n                name: '',\n                type: 'uint64',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n];\n//# sourceMappingURL=ENSRegistry.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// https://github.com/ensdomains/ens-contracts/blob/master/contracts/resolvers/PublicResolver.sol\nexport const PublicResolverAbi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'a',\n                type: 'address',\n            },\n        ],\n        name: 'AddrChanged',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'coinType',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                internalType: 'bytes',\n                name: 'newAddress',\n                type: 'bytes',\n            },\n        ],\n        name: 'AddressChanged',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'operator',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'bool',\n                name: 'approved',\n                type: 'bool',\n            },\n        ],\n        name: 'ApprovalForAll',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n            {\n                indexed: false,\n                internalType: 'bytes',\n                name: 'hash',\n                type: 'bytes',\n            },\n        ],\n        name: 'ContenthashChanged',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n            {\n                indexed: false,\n                internalType: 'bytes',\n                name: 'name',\n                type: 'bytes',\n            },\n            {\n                indexed: false,\n                internalType: 'uint16',\n                name: 'resource',\n                type: 'uint16',\n            },\n            {\n                indexed: false,\n                internalType: 'bytes',\n                name: 'record',\n                type: 'bytes',\n            },\n        ],\n        name: 'DNSRecordChanged',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n            {\n                indexed: false,\n                internalType: 'bytes',\n                name: 'name',\n                type: 'bytes',\n            },\n            {\n                indexed: false,\n                internalType: 'uint16',\n                name: 'resource',\n                type: 'uint16',\n            },\n        ],\n        name: 'DNSRecordDeleted',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n        ],\n        name: 'DNSZoneCleared',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n            {\n                indexed: false,\n                internalType: 'bytes',\n                name: 'lastzonehash',\n                type: 'bytes',\n            },\n            {\n                indexed: false,\n                internalType: 'bytes',\n                name: 'zonehash',\n                type: 'bytes',\n            },\n        ],\n        name: 'DNSZonehashChanged',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                internalType: 'bytes4',\n                name: 'interfaceID',\n                type: 'bytes4',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'implementer',\n                type: 'address',\n            },\n        ],\n        name: 'InterfaceChanged',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n            {\n                indexed: false,\n                internalType: 'string',\n                name: 'name',\n                type: 'string',\n            },\n        ],\n        name: 'NameChanged',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n            {\n                indexed: false,\n                internalType: 'bytes32',\n                name: 'x',\n                type: 'bytes32',\n            },\n            {\n                indexed: false,\n                internalType: 'bytes32',\n                name: 'y',\n                type: 'bytes32',\n            },\n        ],\n        name: 'PubkeyChanged',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                internalType: 'string',\n                name: 'indexedKey',\n                type: 'string',\n            },\n            {\n                indexed: false,\n                internalType: 'string',\n                name: 'key',\n                type: 'string',\n            },\n        ],\n        name: 'TextChanged',\n        type: 'event',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n            {\n                internalType: 'uint256',\n                name: 'contentTypes',\n                type: 'uint256',\n            },\n        ],\n        name: 'ABI',\n        outputs: [\n            {\n                internalType: 'uint256',\n                name: '',\n                type: 'uint256',\n            },\n            {\n                internalType: 'bytes',\n                name: '',\n                type: 'bytes',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n        ],\n        name: 'addr',\n        outputs: [\n            {\n                internalType: 'address payable',\n                name: '',\n                type: 'address',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n            {\n                internalType: 'uint256',\n                name: 'coinType',\n                type: 'uint256',\n            },\n        ],\n        name: 'addr',\n        outputs: [\n            {\n                internalType: 'bytes',\n                name: '',\n                type: 'bytes',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n        ],\n        name: 'contenthash',\n        outputs: [\n            {\n                internalType: 'bytes',\n                name: '',\n                type: 'bytes',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n            {\n                internalType: 'bytes32',\n                name: 'name',\n                type: 'bytes32',\n            },\n            {\n                internalType: 'uint16',\n                name: 'resource',\n                type: 'uint16',\n            },\n        ],\n        name: 'dnsRecord',\n        outputs: [\n            {\n                internalType: 'bytes',\n                name: '',\n                type: 'bytes',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n            {\n                internalType: 'bytes32',\n                name: 'name',\n                type: 'bytes32',\n            },\n        ],\n        name: 'hasDNSRecords',\n        outputs: [\n            {\n                internalType: 'bool',\n                name: '',\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n            {\n                internalType: 'bytes4',\n                name: 'interfaceID',\n                type: 'bytes4',\n            },\n        ],\n        name: 'interfaceImplementer',\n        outputs: [\n            {\n                internalType: 'address',\n                name: '',\n                type: 'address',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                internalType: 'address',\n                name: 'operator',\n                type: 'address',\n            },\n        ],\n        name: 'isApprovedForAll',\n        outputs: [\n            {\n                internalType: 'bool',\n                name: '',\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n        ],\n        name: 'name',\n        outputs: [\n            {\n                internalType: 'string',\n                name: '',\n                type: 'string',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n        ],\n        name: 'pubkey',\n        outputs: [\n            {\n                internalType: 'bytes32',\n                name: 'x',\n                type: 'bytes32',\n            },\n            {\n                internalType: 'bytes32',\n                name: 'y',\n                type: 'bytes32',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes4',\n                name: 'interfaceID',\n                type: 'bytes4',\n            },\n        ],\n        name: 'supportsInterface',\n        outputs: [\n            {\n                internalType: 'bool',\n                name: '',\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n            {\n                internalType: 'string',\n                name: 'key',\n                type: 'string',\n            },\n        ],\n        name: 'text',\n        outputs: [\n            {\n                internalType: 'string',\n                name: '',\n                type: 'string',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n        ],\n        name: 'zonehash',\n        outputs: [\n            {\n                internalType: 'bytes',\n                name: '',\n                type: 'bytes',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32',\n            },\n            {\n                internalType: 'address',\n                name: 'a',\n                type: 'address',\n            },\n        ],\n        name: 'setAddr',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n];\n//# sourceMappingURL=PublicResolver.js.map","// created 2024-09-13T06:42:45.675Z\n// compressed base64-encoded blob for include-ens data\n// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js\n// see: https://github.com/adraffy/ens-normalize.js#security\n// SHA-256: 0ca3917bee1eee342d64c631cb1dbaac37b167d848887d59f6d68328dc99ac09\nvar COMPRESSED$1 = '';\nconst FENCED = new Map([[8217,\"apostrophe\"],[8260,\"fraction slash\"],[12539,\"middle dot\"]]);\nconst NSM_MAX = 4;\n\nfunction decode_arithmetic(bytes) {\r\n\tlet pos = 0;\r\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\r\n\t\r\n\t// decode the frequency table\r\n\tlet symbol_count = u16();\r\n\tlet total = 1;\r\n\tlet acc = [0, 1]; // first symbol has frequency 1\r\n\tfor (let i = 1; i < symbol_count; i++) {\r\n\t\tacc.push(total += u16());\r\n\t}\r\n\r\n\t// skip the sized-payload that the last 3 symbols index into\r\n\tlet skip = u16();\r\n\tlet pos_payload = pos;\r\n\tpos += skip;\r\n\r\n\tlet read_width = 0;\r\n\tlet read_buffer = 0; \r\n\tfunction read_bit() {\r\n\t\tif (read_width == 0) {\r\n\t\t\t// this will read beyond end of buffer\r\n\t\t\t// but (undefined|0) => zero pad\r\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\r\n\t\t\tread_width = 8;\r\n\t\t}\r\n\t\treturn (read_buffer >> --read_width) & 1;\r\n\t}\r\n\r\n\tconst N = 31;\r\n\tconst FULL = 2**N;\r\n\tconst HALF = FULL >>> 1;\r\n\tconst QRTR = HALF >> 1;\r\n\tconst MASK = FULL - 1;\r\n\r\n\t// fill register\r\n\tlet register = 0;\r\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\r\n\r\n\tlet symbols = [];\r\n\tlet low = 0;\r\n\tlet range = FULL; // treat like a float\r\n\twhile (true) {\r\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\r\n\t\tlet start = 0;\r\n\t\tlet end = symbol_count;\r\n\t\twhile (end - start > 1) { // binary search\r\n\t\t\tlet mid = (start + end) >>> 1;\r\n\t\t\tif (value < acc[mid]) {\r\n\t\t\t\tend = mid;\r\n\t\t\t} else {\r\n\t\t\t\tstart = mid;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (start == 0) break; // first symbol is end mark\r\n\t\tsymbols.push(start);\r\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\r\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1;\r\n\t\twhile (((a ^ b) & HALF) == 0) {\r\n\t\t\tregister = (register << 1) & MASK | read_bit();\r\n\t\t\ta = (a << 1) & MASK;\r\n\t\t\tb = (b << 1) & MASK | 1;\r\n\t\t}\r\n\t\twhile (a & ~b & QRTR) {\r\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\r\n\t\t\ta = (a << 1) ^ HALF;\r\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\r\n\t\t}\r\n\t\tlow = a;\r\n\t\trange = 1 + b - a;\r\n\t}\r\n\tlet offset = symbol_count - 4;\r\n\treturn symbols.map(x => { // index into payload\r\n\t\tswitch (x - offset) {\r\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 1: return offset + bytes[pos_payload++];\r\n\t\t\tdefault: return x - 1;\r\n\t\t}\r\n\t});\r\n}\t\r\n\r\n// returns an iterator which returns the next symbol\r\nfunction read_payload(v) {\r\n\tlet pos = 0;\r\n\treturn () => v[pos++];\r\n}\r\nfunction read_compressed_payload(s) {\r\n\treturn read_payload(decode_arithmetic(unsafe_atob(s)));\r\n}\r\n\r\n// unsafe in the sense:\r\n// expected well-formed Base64 w/o padding \r\n// 20220922: added for https://github.com/adraffy/ens-normalize.js/issues/4\r\nfunction unsafe_atob(s) {\r\n\tlet lookup = [];\r\n\t[...'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'].forEach((c, i) => lookup[c.charCodeAt(0)] = i);\r\n\tlet n = s.length;\r\n\tlet ret = new Uint8Array((6 * n) >> 3);\r\n\tfor (let i = 0, pos = 0, width = 0, carry = 0; i < n; i++) {\r\n\t\tcarry = (carry << 6) | lookup[s.charCodeAt(i)];\r\n\t\twidth += 6;\r\n\t\tif (width >= 8) {\r\n\t\t\tret[pos++] = (carry >> (width -= 8));\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\r\nfunction signed(i) { \r\n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\r\n}\r\n\r\nfunction read_deltas(n, next) {\r\n\tlet v = Array(n);\r\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\r\n\treturn v;\r\n}\r\n\r\n// [123][5] => [0 3] [1 1] [0 0]\r\nfunction read_sorted(next, prev = 0) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet x = next();\r\n\t\tlet n = next();\r\n\t\tif (!n) break;\r\n\t\tprev += x;\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tret.push(prev + i);\r\n\t\t}\r\n\t\tprev += n + 1;\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction read_sorted_arrays(next) {\r\n\treturn read_array_while(() => { \r\n\t\tlet v = read_sorted(next);\r\n\t\tif (v.length) return v;\r\n\t});\r\n}\r\n\r\n// returns map of x => ys\r\nfunction read_mapped(next) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet w = next();\r\n\t\tif (w == 0) break;\r\n\t\tret.push(read_linear_table(w, next));\r\n\t}\r\n\twhile (true) {\r\n\t\tlet w = next() - 1;\r\n\t\tif (w < 0) break;\r\n\t\tret.push(read_replacement_table(w, next));\r\n\t}\r\n\treturn ret.flat();\r\n}\r\n\r\n// read until next is falsy\r\n// return array of read values\r\nfunction read_array_while(next) {\r\n\tlet v = [];\r\n\twhile (true) {\r\n\t\tlet x = next(v.length);\r\n\t\tif (!x) break;\r\n\t\tv.push(x);\r\n\t}\r\n\treturn v;\r\n}\r\n\r\n// read w columns of length n\r\n// return as n rows of length w\r\nfunction read_transposed(n, w, next) {\r\n\tlet m = Array(n).fill().map(() => []);\r\n\tfor (let i = 0; i < w; i++) {\r\n\t\tread_deltas(n, next).forEach((x, j) => m[j].push(x));\r\n\t}\r\n\treturn m;\r\n}\r\n \r\n// returns [[x, ys], [x+dx, ys+dy], [x+2*dx, ys+2*dy], ...]\r\n// where dx/dy = steps, n = run size, w = length of y\r\nfunction read_linear_table(w, next) {\r\n\tlet dx = 1 + next();\r\n\tlet dy = next();\r\n\tlet vN = read_array_while(next);\r\n\tlet m = read_transposed(vN.length, 1+w, next);\r\n\treturn m.flatMap((v, i) => {\r\n\t\tlet [x, ...ys] = v;\r\n\t\treturn Array(vN[i]).fill().map((_, j) => {\r\n\t\t\tlet j_dy = j * dy;\r\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\r\n\t\t});\r\n\t});\r\n}\r\n\r\n// return [[x, ys...], ...]\r\n// where w = length of y\r\nfunction read_replacement_table(w, next) { \r\n\tlet n = 1 + next();\r\n\tlet m = read_transposed(n, 1+w, next);\r\n\treturn m.map(v => [v[0], v.slice(1)]);\r\n}\r\n\r\n\r\nfunction read_trie(next) {\r\n\tlet ret = [];\r\n\tlet sorted = read_sorted(next); \r\n\texpand(decode([]), []);\r\n\treturn ret; // not sorted\r\n\tfunction decode(Q) { // characters that lead into this node\r\n\t\tlet S = next(); // state: valid, save, check\r\n\t\tlet B = read_array_while(() => { // buckets leading to new nodes\r\n\t\t\tlet cps = read_sorted(next).map(i => sorted[i]);\r\n\t\t\tif (cps.length) return decode(cps);\r\n\t\t});\r\n\t\treturn {S, B, Q};\r\n\t}\r\n\tfunction expand({S, B}, cps, saved) {\r\n\t\tif (S & 4 && saved === cps[cps.length-1]) return;\r\n\t\tif (S & 2) saved = cps[cps.length-1];\r\n\t\tif (S & 1) ret.push(cps); \r\n\t\tfor (let br of B) {\r\n\t\t\tfor (let cp of br.Q) {\r\n\t\t\t\texpand(br, [...cps, cp], saved);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\n\nfunction hex_cp(cp) {\r\n\treturn cp.toString(16).toUpperCase().padStart(2, '0');\r\n}\r\n\r\nfunction quote_cp(cp) {\r\n\treturn `{${hex_cp(cp)}}`; // raffy convention: like \"\\u{X}\" w/o the \"\\u\"\r\n}\r\n\r\n/*\r\nexport function explode_cp(s) {\r\n\treturn [...s].map(c => c.codePointAt(0));\r\n}\r\n*/\r\nfunction explode_cp(s) { // this is about 2x faster\r\n\tlet cps = [];\r\n\tfor (let pos = 0, len = s.length; pos < len; ) {\r\n\t\tlet cp = s.codePointAt(pos);\r\n\t\tpos += cp < 0x10000 ? 1 : 2;\r\n\t\tcps.push(cp);\r\n\t}\r\n\treturn cps;\r\n}\r\n\r\nfunction str_from_cps(cps) {\r\n\tconst chunk = 4096;\r\n\tlet len = cps.length;\r\n\tif (len < chunk) return String.fromCodePoint(...cps);\r\n\tlet buf = [];\r\n\tfor (let i = 0; i < len; ) {\r\n\t\tbuf.push(String.fromCodePoint(...cps.slice(i, i += chunk)));\r\n\t}\r\n\treturn buf.join('');\r\n}\r\n\r\nfunction compare_arrays(a, b) {\r\n\tlet n = a.length;\r\n\tlet c = n - b.length;\r\n\tfor (let i = 0; c == 0 && i < n; i++) c = a[i] - b[i];\r\n\treturn c;\r\n}\r\n\r\nfunction array_replace(v, a, b) {\r\n\tlet prev = 0;\r\n\twhile (true) {\r\n\t\tlet next = v.indexOf(a, prev);\r\n\t\tif (next < 0) break;\r\n\t\tv[next] = b; \r\n\t\tprev = next + 1;\r\n\t}\r\n}\n\n// created 2024-09-13T06:42:45.675Z\n// compressed base64-encoded blob for include-nf data\n// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js\n// see: https://github.com/adraffy/ens-normalize.js#security\n// SHA-256: a79d5f9b1879a7b416aa659f4a3d788f80a8cf5f0ab955a456592c02f556a28c\nvar COMPRESSED = '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';\n\n// https://unicode.org/reports/tr15/\r\n// for reference implementation\r\n// see: /derive/nf.js\r\n\r\n\r\n// algorithmic hangul\r\n// https://www.unicode.org/versions/Unicode15.0.0/ch03.pdf (page 144)\r\nconst S0 = 0xAC00;\r\nconst L0 = 0x1100;\r\nconst V0 = 0x1161;\r\nconst T0 = 0x11A7;\r\nconst L_COUNT = 19;\r\nconst V_COUNT = 21;\r\nconst T_COUNT = 28;\r\nconst N_COUNT = V_COUNT * T_COUNT;\r\nconst S_COUNT = L_COUNT * N_COUNT;\r\nconst S1 = S0 + S_COUNT;\r\nconst L1 = L0 + L_COUNT;\r\nconst V1 = V0 + V_COUNT;\r\nconst T1 = T0 + T_COUNT;\r\n\r\nfunction unpack_cc(packed) {\r\n\treturn (packed >> 24) & 0xFF;\r\n}\r\nfunction unpack_cp(packed) {\r\n\treturn packed & 0xFFFFFF;\r\n}\r\n\r\nlet SHIFTED_RANK, EXCLUSIONS, DECOMP, RECOMP;\r\n\r\n// export function nf_deinit() {\r\n// \tif (!SHIFTED_RANK) return;\r\n// \tSHIFTED_RANK = EXCLUSIONS = DECOMP = RECOMP = undefined;\r\n// }\r\n\r\nfunction init$1() {\r\n\t//console.time('nf');\r\n\tlet r = read_compressed_payload(COMPRESSED);\r\n\tSHIFTED_RANK = new Map(read_sorted_arrays(r).flatMap((v, i) => v.map(x => [x, (i+1) << 24]))); // pre-shifted\r\n\tEXCLUSIONS = new Set(read_sorted(r));\r\n\tDECOMP = new Map();\r\n\tRECOMP = new Map();\r\n\tfor (let [cp, cps] of read_mapped(r)) {\r\n\t\tif (!EXCLUSIONS.has(cp) && cps.length == 2) {\r\n\t\t\tlet [a, b] = cps;\r\n\t\t\tlet bucket = RECOMP.get(a);\r\n\t\t\tif (!bucket) {\r\n\t\t\t\tbucket = new Map();\r\n\t\t\t\tRECOMP.set(a, bucket);\r\n\t\t\t}\r\n\t\t\tbucket.set(b, cp);\r\n\t\t}\r\n\t\tDECOMP.set(cp, cps.reverse()); // stored reversed\r\n\t}\r\n\t//console.timeEnd('nf');\r\n\t// 20230905: 11ms\r\n}\r\n\r\nfunction is_hangul(cp) {\r\n\treturn cp >= S0 && cp < S1;\r\n}\r\n\r\nfunction compose_pair(a, b) {\r\n\tif (a >= L0 && a < L1 && b >= V0 && b < V1) {\r\n\t\treturn S0 + (a - L0) * N_COUNT + (b - V0) * T_COUNT;\r\n\t} else if (is_hangul(a) && b > T0 && b < T1 && (a - S0) % T_COUNT == 0) {\r\n\t\treturn a + (b - T0);\r\n\t} else {\r\n\t\tlet recomp = RECOMP.get(a);\r\n\t\tif (recomp) {\r\n\t\t\trecomp = recomp.get(b);\r\n\t\t\tif (recomp) {\r\n\t\t\t\treturn recomp;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n}\r\n\r\nfunction decomposed(cps) {\r\n\tif (!SHIFTED_RANK) init$1();\r\n\tlet ret = [];\r\n\tlet buf = [];\r\n\tlet check_order = false;\r\n\tfunction add(cp) {\r\n\t\tlet cc = SHIFTED_RANK.get(cp);\r\n\t\tif (cc) {\r\n\t\t\tcheck_order = true;\r\n\t\t\tcp |= cc;\r\n\t\t}\r\n\t\tret.push(cp);\r\n\t}\r\n\tfor (let cp of cps) {\r\n\t\twhile (true) {\r\n\t\t\tif (cp < 0x80) {\r\n\t\t\t\tret.push(cp);\r\n\t\t\t} else if (is_hangul(cp)) {\r\n\t\t\t\tlet s_index = cp - S0;\r\n\t\t\t\tlet l_index = s_index / N_COUNT | 0;\r\n\t\t\t\tlet v_index = (s_index % N_COUNT) / T_COUNT | 0;\r\n\t\t\t\tlet t_index = s_index % T_COUNT;\r\n\t\t\t\tadd(L0 + l_index);\r\n\t\t\t\tadd(V0 + v_index);\r\n\t\t\t\tif (t_index > 0) add(T0 + t_index);\r\n\t\t\t} else {\r\n\t\t\t\tlet mapped = DECOMP.get(cp);\r\n\t\t\t\tif (mapped) {\r\n\t\t\t\t\tbuf.push(...mapped);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tadd(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!buf.length) break;\r\n\t\t\tcp = buf.pop();\r\n\t\t}\r\n\t}\r\n\tif (check_order && ret.length > 1) {\r\n\t\tlet prev_cc = unpack_cc(ret[0]);\r\n\t\tfor (let i = 1; i < ret.length; i++) {\r\n\t\t\tlet cc = unpack_cc(ret[i]);\r\n\t\t\tif (cc == 0 || prev_cc <= cc) {\r\n\t\t\t\tprev_cc = cc;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet j = i-1;\r\n\t\t\twhile (true) {\r\n\t\t\t\tlet tmp = ret[j+1];\r\n\t\t\t\tret[j+1] = ret[j];\r\n\t\t\t\tret[j] = tmp;\r\n\t\t\t\tif (!j) break;\r\n\t\t\t\tprev_cc = unpack_cc(ret[--j]);\r\n\t\t\t\tif (prev_cc <= cc) break;\r\n\t\t\t}\r\n\t\t\tprev_cc = unpack_cc(ret[i]);\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction composed_from_decomposed(v) {\r\n\tlet ret = [];\r\n\tlet stack = [];\r\n\tlet prev_cp = -1;\r\n\tlet prev_cc = 0;\r\n\tfor (let packed of v) {\r\n\t\tlet cc = unpack_cc(packed);\r\n\t\tlet cp = unpack_cp(packed);\r\n\t\tif (prev_cp == -1) {\r\n\t\t\tif (cc == 0) {\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tret.push(cp);\r\n\t\t\t}\r\n\t\t} else if (prev_cc > 0 && prev_cc >= cc) {\r\n\t\t\tif (cc == 0) {\r\n\t\t\t\tret.push(prev_cp, ...stack);\r\n\t\t\t\tstack.length = 0;\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(cp);\r\n\t\t\t}\r\n\t\t\tprev_cc = cc;\r\n\t\t} else {\r\n\t\t\tlet composed = compose_pair(prev_cp, cp);\r\n\t\t\tif (composed >= 0) {\r\n\t\t\t\tprev_cp = composed;\r\n\t\t\t} else if (prev_cc == 0 && cc == 0) {\r\n\t\t\t\tret.push(prev_cp);\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(cp);\r\n\t\t\t\tprev_cc = cc;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (prev_cp >= 0) {\r\n\t\tret.push(prev_cp, ...stack);\t\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// note: cps can be iterable\r\nfunction nfd(cps) {\r\n\treturn decomposed(cps).map(unpack_cp);\r\n}\r\nfunction nfc(cps) {\r\n\treturn composed_from_decomposed(decomposed(cps));\r\n}\n\nconst HYPHEN = 0x2D;\r\nconst STOP = 0x2E;\r\nconst STOP_CH = '.';\r\nconst FE0F = 0xFE0F;\r\nconst UNIQUE_PH = 1;\r\n\r\n// 20230913: replace [...v] with Array_from(v) to avoid large spreads\r\nconst Array_from = x => Array.from(x); // Array.from.bind(Array);\r\n\r\nfunction group_has_cp(g, cp) {\r\n\t// 20230913: keep primary and secondary distinct instead of creating valid union\r\n\treturn g.P.has(cp) || g.Q.has(cp);\r\n}\r\n\r\nclass Emoji extends Array {\r\n\tget is_emoji() { return true; } // free tagging system\r\n}\r\n\r\nlet MAPPED, IGNORED, CM, NSM, ESCAPE, NFC_CHECK, GROUPS, WHOLE_VALID, WHOLE_MAP, VALID, EMOJI_LIST, EMOJI_ROOT;\r\n\r\n// export function ens_deinit() {\r\n// \tnf_deinit();\r\n// \tif (!MAPPED) return;\r\n// \tMAPPED = IGNORED = CM = NSM = ESCAPE = NFC_CHECK = GROUPS = WHOLE_VALID = WHOLE_MAP = VALID = EMOJI_LIST = EMOJI_ROOT = undefined;\r\n// }\r\n\r\nfunction init() {\r\n\tif (MAPPED) return;\r\n\t\r\n\tlet r = read_compressed_payload(COMPRESSED$1);\r\n\tconst read_sorted_array = () => read_sorted(r);\r\n\tconst read_sorted_set = () => new Set(read_sorted_array());\r\n\tconst set_add_many = (set, v) => v.forEach(x => set.add(x));\r\n\r\n\tMAPPED = new Map(read_mapped(r)); \r\n\tIGNORED = read_sorted_set(); // ignored characters are not valid, so just read raw codepoints\r\n\r\n\t/*\r\n\t// direct include from payload is smaller than the decompression code\r\n\tconst FENCED = new Map(read_array_while(() => {\r\n\t\tlet cp = r();\r\n\t\tif (cp) return [cp, read_str(r())];\r\n\t}));\r\n\t*/\r\n\t// 20230217: we still need all CM for proper error formatting\r\n\t// but norm only needs NSM subset that are potentially-valid\r\n\tCM = read_sorted_array();\r\n\tNSM = new Set(read_sorted_array().map(i => CM[i]));\r\n\tCM = new Set(CM);\r\n\t\r\n\tESCAPE = read_sorted_set(); // characters that should not be printed\r\n\tNFC_CHECK = read_sorted_set(); // only needed to illustrate ens_tokenize() transformations\r\n\r\n\tlet chunks = read_sorted_arrays(r);\r\n\tlet unrestricted = r();\r\n\t//const read_chunked = () => new Set(read_sorted_array().flatMap(i => chunks[i]).concat(read_sorted_array()));\r\n\tconst read_chunked = () => {\r\n\t\t// 20230921: build set in parts, 2x faster\r\n\t\tlet set = new Set();\r\n\t\tread_sorted_array().forEach(i => set_add_many(set, chunks[i]));\r\n\t\tset_add_many(set, read_sorted_array());\r\n\t\treturn set; \r\n\t};\r\n\tGROUPS = read_array_while(i => {\r\n\t\t// minifier property mangling seems unsafe\r\n\t\t// so these are manually renamed to single chars\r\n\t\tlet N = read_array_while(r).map(x => x+0x60);\r\n\t\tif (N.length) {\r\n\t\t\tlet R = i >= unrestricted; // unrestricted then restricted\r\n\t\t\tN[0] -= 32; // capitalize\r\n\t\t\tN = str_from_cps(N);\r\n\t\t\tif (R) N=`Restricted[${N}]`;\r\n\t\t\tlet P = read_chunked(); // primary\r\n\t\t\tlet Q = read_chunked(); // secondary\r\n\t\t\tlet M = !r(); // not-whitelisted, check for NSM\r\n\t\t\t// *** this code currently isn't needed ***\r\n\t\t\t/*\r\n\t\t\tlet V = [...P, ...Q].sort((a, b) => a-b); // derive: sorted valid\r\n\t\t\tlet M = r()-1; // number of combining mark\r\n\t\t\tif (M < 0) { // whitelisted\r\n\t\t\t\tM = new Map(read_array_while(() => {\r\n\t\t\t\t\tlet i = r();\r\n\t\t\t\t\tif (i) return [V[i-1], read_array_while(() => {\r\n\t\t\t\t\t\tlet v = read_array_while(r);\r\n\t\t\t\t\t\tif (v.length) return v.map(x => x-1);\r\n\t\t\t\t\t})];\r\n\t\t\t\t}));\r\n\t\t\t}*/\r\n\t\t\treturn {N, P, Q, M, R};\r\n\t\t}\r\n\t});\r\n\r\n\t// decode compressed wholes\r\n\tWHOLE_VALID = read_sorted_set();\r\n\tWHOLE_MAP = new Map();\r\n\tlet wholes = read_sorted_array().concat(Array_from(WHOLE_VALID)).sort((a, b) => a-b); // must be sorted\r\n\twholes.forEach((cp, i) => {\r\n\t\tlet d = r(); \r\n\t\tlet w = wholes[i] = d ? wholes[i-d] : {V: [], M: new Map()};\r\n\t\tw.V.push(cp); // add to member set\r\n\t\tif (!WHOLE_VALID.has(cp)) {\r\n\t\t\tWHOLE_MAP.set(cp, w);  // register with whole map\r\n\t\t}\r\n\t});\r\n\r\n\t// compute confusable-extent complements\r\n\t// usage: WHOLE_MAP.get(cp).M.get(cp) = complement set\r\n\tfor (let {V, M} of new Set(WHOLE_MAP.values())) {\r\n\t\t// connect all groups that have each whole character\r\n\t\tlet recs = [];\r\n\t\tfor (let cp of V) {\r\n\t\t\tlet gs = GROUPS.filter(g => group_has_cp(g, cp));\r\n\t\t\tlet rec = recs.find(({G}) => gs.some(g => G.has(g)));\r\n\t\t\tif (!rec) {\r\n\t\t\t\trec = {G: new Set(), V: []};\r\n\t\t\t\trecs.push(rec);\r\n\t\t\t}\r\n\t\t\trec.V.push(cp);\r\n\t\t\tset_add_many(rec.G, gs);\r\n\t\t}\r\n\t\t// per character cache groups which are not a member of the extent\r\n\t\tlet union = recs.flatMap(x => Array_from(x.G)); // all of the groups used by this whole\r\n\t\tfor (let {G, V} of recs) {\r\n\t\t\tlet complement = new Set(union.filter(g => !G.has(g))); // groups not covered by the extent\r\n\t\t\tfor (let cp of V) {\r\n\t\t\t\tM.set(cp, complement); // this is the same reference\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// compute valid set\r\n\t// 20230924: VALID was union but can be re-used\r\n\tVALID = new Set(); // exists in 1+ groups\r\n\tlet multi = new Set(); // exists in 2+ groups\r\n\tconst add_to_union = cp => VALID.has(cp) ? multi.add(cp) : VALID.add(cp);\r\n\tfor (let g of GROUPS) {\r\n\t\tfor (let cp of g.P) add_to_union(cp);\r\n\t\tfor (let cp of g.Q) add_to_union(cp);\r\n\t}\r\n\t// dual purpose WHOLE_MAP: return placeholder if unique non-confusable\r\n\tfor (let cp of VALID) {\r\n\t\tif (!WHOLE_MAP.has(cp) && !multi.has(cp)) {\r\n\t\t\tWHOLE_MAP.set(cp, UNIQUE_PH);\r\n\t\t}\r\n\t}\r\n\t// add all decomposed parts\r\n\t// see derive: \"Valid is Closed (via Brute-force)\"\r\n\tset_add_many(VALID, nfd(VALID));\r\n\t\r\n\t// decode emoji\r\n\t// 20230719: emoji are now fully-expanded to avoid quirk logic \r\n\tEMOJI_LIST = read_trie(r).map(v => Emoji.from(v)).sort(compare_arrays);\r\n\tEMOJI_ROOT = new Map(); // this has approx 7K nodes (2+ per emoji)\r\n\tfor (let cps of EMOJI_LIST) {\r\n\t\t// 20230719: change to *slightly* stricter algorithm which disallows \r\n\t\t// insertion of misplaced FE0F in emoji sequences (matching ENSIP-15)\r\n\t\t// example: beautified [A B] (eg. flag emoji) \r\n\t\t//  before: allow: [A FE0F B], error: [A FE0F FE0F B] \r\n\t\t//   after: error: both\r\n\t\t// note: this code now matches ENSNormalize.{cs,java} logic\r\n\t\tlet prev = [EMOJI_ROOT];\r\n\t\tfor (let cp of cps) {\r\n\t\t\tlet next = prev.map(node => {\r\n\t\t\t\tlet child = node.get(cp);\r\n\t\t\t\tif (!child) {\r\n\t\t\t\t\t// should this be object? \r\n\t\t\t\t\t// (most have 1-2 items, few have many)\r\n\t\t\t\t\t// 20230719: no, v8 default map is 4?\r\n\t\t\t\t\tchild = new Map();\r\n\t\t\t\t\tnode.set(cp, child);\r\n\t\t\t\t}\r\n\t\t\t\treturn child;\r\n\t\t\t});\r\n\t\t\tif (cp === FE0F) {\r\n\t\t\t\tprev.push(...next); // less than 20 elements\r\n\t\t\t} else {\r\n\t\t\t\tprev = next;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let x of prev) {\r\n\t\t\tx.V = cps;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// if escaped: {HEX}\r\n//       else: \"x\" {HEX}\r\nfunction quoted_cp(cp) {\r\n\treturn (should_escape(cp) ? '' : `${bidi_qq(safe_str_from_cps([cp]))} `) + quote_cp(cp);\r\n}\r\n\r\n// 20230211: some messages can be mixed-directional and result in spillover\r\n// use 200E after a quoted string to force the remainder of a string from \r\n// acquring the direction of the quote\r\n// https://www.w3.org/International/questions/qa-bidi-unicode-controls#exceptions\r\nfunction bidi_qq(s) {\r\n\treturn `\"${s}\"\\u200E`; // strong LTR\r\n}\r\n\r\nfunction check_label_extension(cps) {\r\n\tif (cps.length >= 4 && cps[2] == HYPHEN && cps[3] == HYPHEN) {\r\n\t\tthrow new Error(`invalid label extension: \"${str_from_cps(cps.slice(0, 4))}\"`); // this can only be ascii so cant be bidi\r\n\t}\r\n}\r\nfunction check_leading_underscore(cps) {\r\n\tconst UNDERSCORE = 0x5F;\r\n\tfor (let i = cps.lastIndexOf(UNDERSCORE); i > 0; ) {\r\n\t\tif (cps[--i] !== UNDERSCORE) {\r\n\t\t\tthrow new Error('underscore allowed only at start');\r\n\t\t}\r\n\t}\r\n}\r\n// check that a fenced cp is not leading, trailing, or touching another fenced cp\r\nfunction check_fenced(cps) {\r\n\tlet cp = cps[0];\r\n\tlet prev = FENCED.get(cp);\r\n\tif (prev) throw error_placement(`leading ${prev}`);\r\n\tlet n = cps.length;\r\n\tlet last = -1; // prevents trailing from throwing\r\n\tfor (let i = 1; i < n; i++) {\r\n\t\tcp = cps[i];\r\n\t\tlet match = FENCED.get(cp);\r\n\t\tif (match) {\r\n\t\t\t// since cps[0] isn't fenced, cps[1] cannot throw\r\n\t\t\tif (last == i) throw error_placement(`${prev} + ${match}`);\r\n\t\t\tlast = i + 1;\r\n\t\t\tprev = match;\r\n\t\t}\r\n\t}\r\n\tif (last == n) throw error_placement(`trailing ${prev}`);\r\n}\r\n\r\n// create a safe to print string \r\n// invisibles are escaped\r\n// leading cm uses placeholder\r\n// if cps exceed max, middle truncate with ellipsis\r\n// quoter(cp) => string, eg. 3000 => \"{3000}\"\r\n// note: in html, you'd call this function then replace [<>&] with entities\r\nfunction safe_str_from_cps(cps, max = Infinity, quoter = quote_cp) {\r\n\t//if (Number.isInteger(cps)) cps = [cps];\r\n\t//if (!Array.isArray(cps)) throw new TypeError(`expected codepoints`);\r\n\tlet buf = [];\r\n\tif (is_combining_mark(cps[0])) buf.push('◌');\r\n\tif (cps.length > max) {\r\n\t\tmax >>= 1;\r\n\t\tcps = [...cps.slice(0, max), 0x2026, ...cps.slice(-max)];\r\n\t}\r\n\tlet prev = 0;\r\n\tlet n = cps.length;\r\n\tfor (let i = 0; i < n; i++) {\r\n\t\tlet cp = cps[i];\r\n\t\tif (should_escape(cp)) {\r\n\t\t\tbuf.push(str_from_cps(cps.slice(prev, i)));\r\n\t\t\tbuf.push(quoter(cp));\r\n\t\t\tprev = i + 1;\r\n\t\t}\r\n\t}\r\n\tbuf.push(str_from_cps(cps.slice(prev, n)));\r\n\treturn buf.join('');\r\n}\r\n\r\n// note: set(s) cannot be exposed because they can be modified\r\n// note: Object.freeze() doesn't work\r\nfunction is_combining_mark(cp, only_nsm) { // 20240127: add extra argument\r\n\tinit();\r\n\treturn only_nsm ? NSM.has(cp) : CM.has(cp);\r\n}\r\nfunction should_escape(cp) {\r\n\tinit();\r\n\treturn ESCAPE.has(cp);\r\n}\r\n\r\n// return all supported emoji as fully-qualified emoji \r\n// ordered by length then lexicographic \r\nfunction ens_emoji() {\r\n\tinit();\r\n\treturn EMOJI_LIST.map(x => x.slice()); // emoji are exposed so copy\r\n}\r\n\r\nfunction ens_normalize_fragment(frag, decompose) {\r\n\tinit();\r\n\tlet nf = decompose ? nfd : nfc;\r\n\treturn frag.split(STOP_CH).map(label => str_from_cps(tokens_from_str(explode_cp(label), nf, filter_fe0f).flat())).join(STOP_CH);\r\n}\r\n\r\nfunction ens_normalize(name) {\r\n\treturn flatten(split(name, nfc, filter_fe0f));\r\n}\r\n\r\nfunction ens_beautify(name) {\r\n\tlet labels = split(name, nfc, x => x); // emoji not exposed\r\n\tfor (let {type, output, error} of labels) {\r\n\t\tif (error) break; // flatten will throw\r\n\r\n\t\t// replace leading/trailing hyphen\r\n\t\t// 20230121: consider beautifing all or leading/trailing hyphen to unicode variant\r\n\t\t// not exactly the same in every font, but very similar: \"-\" vs \"‐\"\r\n\t\t/*\r\n\t\tconst UNICODE_HYPHEN = 0x2010;\r\n\t\t// maybe this should replace all for visual consistancy?\r\n\t\t// `node tools/reg-count.js regex ^-\\{2,\\}` => 592\r\n\t\t//for (let i = 0; i < output.length; i++) if (output[i] == 0x2D) output[i] = 0x2010;\r\n\t\tif (output[0] == HYPHEN) output[0] = UNICODE_HYPHEN;\r\n\t\tlet end = output.length-1;\r\n\t\tif (output[end] == HYPHEN) output[end] = UNICODE_HYPHEN;\r\n\t\t*/\r\n\t\t// 20230123: WHATWG URL uses \"CheckHyphens\" false\r\n\t\t// https://url.spec.whatwg.org/#idna\r\n\r\n\t\t// update ethereum symbol\r\n\t\t// ξ => Ξ if not greek\r\n\t\tif (type !== 'Greek') array_replace(output, 0x3BE, 0x39E);\r\n\r\n\t\t// 20221213: fixes bidi subdomain issue, but breaks invariant (200E is disallowed)\r\n\t\t// could be fixed with special case for: 2D (.) + 200E (LTR)\r\n\t\t// https://discuss.ens.domains/t/bidi-label-ordering-spoof/15824\r\n\t\t//output.splice(0, 0, 0x200E);\r\n\t}\r\n\treturn flatten(labels);\r\n}\r\n\r\nfunction ens_split(name, preserve_emoji) {\r\n\treturn split(name, nfc, preserve_emoji ? x => x.slice() : filter_fe0f); // emoji are exposed so copy\r\n}\r\n\r\nfunction split(name, nf, ef) {\r\n\tif (!name) return []; // 20230719: empty name allowance\r\n\tinit();\r\n\tlet offset = 0;\r\n\t// https://unicode.org/reports/tr46/#Validity_Criteria\r\n\t// 4.) \"The label must not contain a U+002E ( . ) FULL STOP.\"\r\n\treturn name.split(STOP_CH).map(label => {\r\n\t\tlet input = explode_cp(label);\r\n\t\tlet info = {\r\n\t\t\tinput,\r\n\t\t\toffset, // codepoint, not substring!\r\n\t\t};\r\n\t\toffset += input.length + 1; // + stop\r\n\t\ttry {\r\n\t\t\t// 1.) \"The label must be in Unicode Normalization Form NFC\"\r\n\t\t\tlet tokens = info.tokens = tokens_from_str(input, nf, ef);\r\n\t\t\tlet token_count = tokens.length;\r\n\t\t\tlet type;\r\n\t\t\tif (!token_count) { // the label was effectively empty (could of had ignored characters)\r\n\t\t\t\t//norm = [];\r\n\t\t\t\t//type = 'None'; // use this instead of next match, \"ASCII\"\r\n\t\t\t\t// 20230120: change to strict\r\n\t\t\t\t// https://discuss.ens.domains/t/ens-name-normalization-2nd/14564/59\r\n\t\t\t\tthrow new Error(`empty label`);\r\n\t\t\t} \r\n\t\t\tlet norm = info.output = tokens.flat();\r\n\t\t\tcheck_leading_underscore(norm);\r\n\t\t\tlet emoji = info.emoji = token_count > 1 || tokens[0].is_emoji; // same as: tokens.some(x => x.is_emoji);\r\n\t\t\tif (!emoji && norm.every(cp => cp < 0x80)) { // special case for ascii\r\n\t\t\t\t// 20230123: matches matches WHATWG, see note 3.3\r\n\t\t\t\tcheck_label_extension(norm); // only needed for ascii\r\n\t\t\t\t// cant have fenced\r\n\t\t\t\t// cant have cm\r\n\t\t\t\t// cant have wholes\r\n\t\t\t\t// see derive: \"Fastpath ASCII\"\r\n\t\t\t\ttype = 'ASCII';\r\n\t\t\t} else {\r\n\t\t\t\tlet chars = tokens.flatMap(x => x.is_emoji ? [] : x); // all of the nfc tokens concat together\r\n\t\t\t\tif (!chars.length) { // theres no text, just emoji\r\n\t\t\t\t\ttype = 'Emoji';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 5.) \"The label must not begin with a combining mark, that is: General_Category=Mark.\"\r\n\t\t\t\t\tif (CM.has(norm[0])) throw error_placement('leading combining mark');\r\n\t\t\t\t\tfor (let i = 1; i < token_count; i++) { // we've already checked the first token\r\n\t\t\t\t\t\tlet cps = tokens[i];\r\n\t\t\t\t\t\tif (!cps.is_emoji && CM.has(cps[0])) { // every text token has emoji neighbors, eg. EtEEEtEt...\r\n\t\t\t\t\t\t\t// bidi_qq() not needed since emoji is LTR and cps is a CM\r\n\t\t\t\t\t\t\tthrow error_placement(`emoji + combining mark: \"${str_from_cps(tokens[i-1])} + ${safe_str_from_cps([cps[0]])}\"`); \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcheck_fenced(norm);\r\n\t\t\t\t\tlet unique = Array_from(new Set(chars));\r\n\t\t\t\t\tlet [g] = determine_group(unique); // take the first match\r\n\t\t\t\t\t// see derive: \"Matching Groups have Same CM Style\"\r\n\t\t\t\t\t// alternative: could form a hybrid type: Latin/Japanese/...\t\r\n\t\t\t\t\tcheck_group(g, chars); // need text in order\r\n\t\t\t\t\tcheck_whole(g, unique); // only need unique text (order would be required for multiple-char confusables)\r\n\t\t\t\t\ttype = g.N;\r\n\t\t\t\t\t// 20230121: consider exposing restricted flag\r\n\t\t\t\t\t// it's simpler to just check for 'Restricted'\r\n\t\t\t\t\t// or even better: type.endsWith(']')\r\n\t\t\t\t\t//if (g.R) info.restricted = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinfo.type = type;\r\n\t\t} catch (err) {\r\n\t\t\tinfo.error = err; // use full error object\r\n\t\t}\r\n\t\treturn info;\r\n\t});\r\n}\r\n\r\nfunction check_whole(group, unique) {\r\n\tlet maker;\r\n\tlet shared = [];\r\n\tfor (let cp of unique) {\r\n\t\tlet whole = WHOLE_MAP.get(cp);\r\n\t\tif (whole === UNIQUE_PH) return; // unique, non-confusable\r\n\t\tif (whole) {\r\n\t\t\tlet set = whole.M.get(cp); // groups which have a character that look-like this character\r\n\t\t\tmaker = maker ? maker.filter(g => set.has(g)) : Array_from(set);\r\n\t\t\tif (!maker.length) return; // confusable intersection is empty\r\n\t\t} else {\r\n\t\t\tshared.push(cp); \r\n\t\t}\r\n\t}\r\n\tif (maker) {\r\n\t\t// we have 1+ confusable\r\n\t\t// check if any of the remaining groups\r\n\t\t// contain the shared characters too\r\n\t\tfor (let g of maker) {\r\n\t\t\tif (shared.every(cp => group_has_cp(g, cp))) {\r\n\t\t\t\tthrow new Error(`whole-script confusable: ${group.N}/${g.N}`);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// assumption: unique.size > 0\r\n// returns list of matching groups\r\nfunction determine_group(unique) {\r\n\tlet groups = GROUPS;\r\n\tfor (let cp of unique) {\r\n\t\t// note: we need to dodge CM that are whitelisted\r\n\t\t// but that code isn't currently necessary\r\n\t\tlet gs = groups.filter(g => group_has_cp(g, cp));\r\n\t\tif (!gs.length) {\r\n\t\t\tif (!GROUPS.some(g => group_has_cp(g, cp))) { \r\n\t\t\t\t// the character was composed of valid parts\r\n\t\t\t\t// but it's NFC form is invalid\r\n\t\t\t\t// 20230716: change to more exact statement, see: ENSNormalize.{cs,java}\r\n\t\t\t\t// note: this doesn't have to be a composition\r\n\t\t\t\t// 20230720: change to full check\r\n\t\t\t\tthrow error_disallowed(cp); // this should be rare\r\n\t\t\t} else {\r\n\t\t\t\t// there is no group that contains all these characters\r\n\t\t\t\t// throw using the highest priority group that matched\r\n\t\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\t\tthrow error_group_member(groups[0], cp);\r\n\t\t\t}\r\n\t\t}\r\n\t\tgroups = gs;\r\n\t\tif (gs.length == 1) break; // there is only one group left\r\n\t}\r\n\t// there are at least 1 group(s) with all of these characters\r\n\treturn groups;\r\n}\r\n\r\n// throw on first error\r\nfunction flatten(split) {\r\n\treturn split.map(({input, error, output}) => {\r\n\t\tif (error) {\r\n\t\t\t// don't print label again if just a single label\r\n\t\t\tlet msg = error.message;\r\n\t\t\t// bidi_qq() only necessary if msg is digits\r\n\t\t\tthrow new Error(split.length == 1 ? msg : `Invalid label ${bidi_qq(safe_str_from_cps(input, 63))}: ${msg}`); \r\n\t\t}\r\n\t\treturn str_from_cps(output);\r\n\t}).join(STOP_CH);\r\n}\r\n\r\nfunction error_disallowed(cp) {\r\n\t// TODO: add cp to error?\r\n\treturn new Error(`disallowed character: ${quoted_cp(cp)}`); \r\n}\r\nfunction error_group_member(g, cp) {\r\n\tlet quoted = quoted_cp(cp);\r\n\tlet gg = GROUPS.find(g => g.P.has(cp)); // only check primary\r\n\tif (gg) {\r\n\t\tquoted = `${gg.N} ${quoted}`;\r\n\t}\r\n\treturn new Error(`illegal mixture: ${g.N} + ${quoted}`);\r\n}\r\nfunction error_placement(where) {\r\n\treturn new Error(`illegal placement: ${where}`);\r\n}\r\n\r\n// assumption: cps.length > 0\r\n// assumption: cps[0] isn't a CM\r\n// assumption: the previous character isn't an emoji\r\nfunction check_group(g, cps) {\r\n\tfor (let cp of cps) {\r\n\t\tif (!group_has_cp(g, cp)) {\r\n\t\t\t// for whitelisted scripts, this will throw illegal mixture on invalid cm, eg. \"e{300}{300}\"\r\n\t\t\t// at the moment, it's unnecessary to introduce an extra error type\r\n\t\t\t// until there exists a whitelisted multi-character\r\n\t\t\t//   eg. if (M < 0 && is_combining_mark(cp)) { ... }\r\n\t\t\t// there are 3 cases:\r\n\t\t\t//   1. illegal cm for wrong group => mixture error\r\n\t\t\t//   2. illegal cm for same group => cm error\r\n\t\t\t//       requires set of whitelist cm per group: \r\n\t\t\t//        eg. new Set([...g.P, ...g.Q].flatMap(nfc).filter(cp => CM.has(cp)))\r\n\t\t\t//   3. wrong group => mixture error\r\n\t\t\tthrow error_group_member(g, cp);\r\n\t\t}\r\n\t}\r\n\t//if (M >= 0) { // we have a known fixed cm count\r\n\tif (g.M) { // we need to check for NSM\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // see: assumption\r\n\t\t\t// 20230210: bugfix: using cps instead of decomposed h/t Carbon225\r\n\t\t\t/*\r\n\t\t\tif (CM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(decomposed[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: ${g.N} ${bidi_qq(str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\t// 20230217: switch to NSM counting\r\n\t\t\t// https://www.unicode.org/reports/tr39/#Optional_Detection\r\n\t\t\tif (NSM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\tfor (let cp; j < e && NSM.has(cp = decomposed[j]); j++) {\r\n\t\t\t\t\t// a. Forbid sequences of the same nonspacing mark.\r\n\t\t\t\t\tfor (let k = i; k < j; k++) { // O(n^2) but n < 100\r\n\t\t\t\t\t\tif (decomposed[k] == cp) {\r\n\t\t\t\t\t\t\tthrow new Error(`duplicate non-spacing marks: ${quoted_cp(cp)}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// parse to end so we have full nsm count\r\n\t\t\t\t// b. Forbid sequences of more than 4 nonspacing marks (gc=Mn or gc=Me).\r\n\t\t\t\tif (j - i > NSM_MAX) {\r\n\t\t\t\t\t// note: this slice starts with a base char or spacing-mark cm\r\n\t\t\t\t\tthrow new Error(`excessive non-spacing marks: ${bidi_qq(safe_str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${NSM_MAX})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// *** this code currently isn't needed ***\r\n\t/*\r\n\tlet cm_whitelist = M instanceof Map;\r\n\tfor (let i = 0, e = cps.length; i < e; ) {\r\n\t\tlet cp = cps[i++];\r\n\t\tlet seqs = cm_whitelist && M.get(cp);\r\n\t\tif (seqs) { \r\n\t\t\t// list of codepoints that can follow\r\n\t\t\t// if this exists, this will always be 1+\r\n\t\t\tlet j = i;\r\n\t\t\twhile (j < e && CM.has(cps[j])) j++;\r\n\t\t\tlet cms = cps.slice(i, j);\r\n\t\t\tlet match = seqs.find(seq => !compare_arrays(seq, cms));\r\n\t\t\tif (!match) throw new Error(`disallowed combining mark sequence: \"${safe_str_from_cps([cp, ...cms])}\"`);\r\n\t\t\ti = j;\r\n\t\t} else if (!V.has(cp)) {\r\n\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\tlet quoted = quoted_cp(cp);\r\n\t\t\tfor (let cp of cps) {\r\n\t\t\t\tlet u = UNIQUE.get(cp);\r\n\t\t\t\tif (u && u !== g) {\r\n\t\t\t\t\t// if both scripts are restricted this error is confusing\r\n\t\t\t\t\t// because we don't differentiate RestrictedA from RestrictedB \r\n\t\t\t\t\tif (!u.R) quoted = `${quoted} is ${u.N}`;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow new Error(`disallowed ${g.N} character: ${quoted}`);\r\n\t\t\t//throw new Error(`disallowed character: ${quoted} (expected ${g.N})`);\r\n\t\t\t//throw new Error(`${g.N} does not allow: ${quoted}`);\r\n\t\t}\r\n\t}\r\n\tif (!cm_whitelist) {\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // we know it can't be cm leading\r\n\t\t\tif (CM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(decomposed[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: \"${str_from_cps(decomposed.slice(i-1, j))}\" (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t*/\r\n}\r\n\r\n// given a list of codepoints\r\n// returns a list of lists, where emoji are a fully-qualified (as Array subclass)\r\n// eg. explode_cp(\"abc💩d\") => [[61, 62, 63], Emoji[1F4A9, FE0F], [64]]\r\n// 20230818: rename for 'process' name collision h/t Javarome\r\n// https://github.com/adraffy/ens-normalize.js/issues/23\r\nfunction tokens_from_str(input, nf, ef) {\r\n\tlet ret = [];\r\n\tlet chars = [];\r\n\tinput = input.slice().reverse(); // flip so we can pop\r\n\twhile (input.length) {\r\n\t\tlet emoji = consume_emoji_reversed(input);\r\n\t\tif (emoji) {\r\n\t\t\tif (chars.length) {\r\n\t\t\t\tret.push(nf(chars));\r\n\t\t\t\tchars = [];\r\n\t\t\t}\r\n\t\t\tret.push(ef(emoji));\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (VALID.has(cp)) {\r\n\t\t\t\tchars.push(cp);\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\tchars.push(...cps); // less than 10 elements\r\n\t\t\t\t} else if (!IGNORED.has(cp)) {\r\n\t\t\t\t\t// 20230912: unicode 15.1 changed the order of processing such that\r\n\t\t\t\t\t// disallowed parts are only rejected after NFC\r\n\t\t\t\t\t// https://unicode.org/reports/tr46/#Validity_Criteria\r\n\t\t\t\t\t// this doesn't impact normalization as of today\r\n\t\t\t\t\t// technically, this error can be removed as the group logic will apply similar logic\r\n\t\t\t\t\t// however the error type might be less clear\r\n\t\t\t\t\tthrow error_disallowed(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (chars.length) {\r\n\t\tret.push(nf(chars));\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction filter_fe0f(cps) {\r\n\treturn cps.filter(cp => cp != FE0F);\r\n}\r\n\r\n// given array of codepoints\r\n// returns the longest valid emoji sequence (or undefined if no match)\r\n// *MUTATES* the supplied array\r\n// disallows interleaved ignored characters\r\n// fills (optional) eaten array with matched codepoints\r\nfunction consume_emoji_reversed(cps, eaten) {\r\n\tlet node = EMOJI_ROOT;\r\n\tlet emoji;\r\n\tlet pos = cps.length;\r\n\twhile (pos) {\r\n\t\tnode = node.get(cps[--pos]);\r\n\t\tif (!node) break;\r\n\t\tlet {V} = node;\r\n\t\tif (V) { // this is a valid emoji (so far)\r\n\t\t\temoji = V;\r\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // (optional) copy input, used for ens_tokenize()\r\n\t\t\tcps.length = pos; // truncate\r\n\t\t}\r\n\t}\r\n\treturn emoji;\r\n}\r\n\r\n// ************************************************************\r\n// tokenizer \r\n\r\nconst TY_VALID = 'valid';\r\nconst TY_MAPPED = 'mapped';\r\nconst TY_IGNORED = 'ignored';\r\nconst TY_DISALLOWED = 'disallowed';\r\nconst TY_EMOJI = 'emoji';\r\nconst TY_NFC = 'nfc';\r\nconst TY_STOP = 'stop';\r\n\r\nfunction ens_tokenize(name, {\r\n\tnf = true, // collapse unnormalized runs into a single token\r\n} = {}) {\r\n\tinit();\r\n\tlet input = explode_cp(name).reverse();\r\n\tlet eaten = [];\r\n\tlet tokens = [];\r\n\twhile (input.length) {\r\n\t\tlet emoji = consume_emoji_reversed(input, eaten);\r\n\t\tif (emoji) {\r\n\t\t\ttokens.push({\r\n\t\t\t\ttype: TY_EMOJI,\r\n\t\t\t\temoji: emoji.slice(), // copy emoji\r\n\t\t\t\tinput: eaten,\r\n\t\t\t\tcps: filter_fe0f(emoji)\r\n\t\t\t});\r\n\t\t\teaten = []; // reset buffer\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (cp == STOP) {\r\n\t\t\t\ttokens.push({type: TY_STOP, cp});\r\n\t\t\t} else if (VALID.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_VALID, cps: [cp]});\r\n\t\t\t} else if (IGNORED.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_IGNORED, cp});\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\ttokens.push({type: TY_MAPPED, cp, cps: cps.slice()});\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttokens.push({type: TY_DISALLOWED, cp});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (nf) {\r\n\t\tfor (let i = 0, start = -1; i < tokens.length; i++) {\r\n\t\t\tlet token = tokens[i];\r\n\t\t\tif (is_valid_or_mapped(token.type)) {\r\n\t\t\t\tif (requires_check(token.cps)) { // normalization might be needed\r\n\t\t\t\t\tlet end = i + 1;\r\n\t\t\t\t\tfor (let pos = end; pos < tokens.length; pos++) { // find adjacent text\r\n\t\t\t\t\t\tlet {type, cps} = tokens[pos];\r\n\t\t\t\t\t\tif (is_valid_or_mapped(type)) {\r\n\t\t\t\t\t\t\tif (!requires_check(cps)) break;\r\n\t\t\t\t\t\t\tend = pos + 1;\r\n\t\t\t\t\t\t} else if (type !== TY_IGNORED) { // || type !== TY_DISALLOWED) { \r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (start < 0) start = i;\r\n\t\t\t\t\tlet slice = tokens.slice(start, end);\r\n\t\t\t\t\tlet cps0 = slice.flatMap(x => is_valid_or_mapped(x.type) ? x.cps : []); // strip junk tokens\r\n\t\t\t\t\tlet cps = nfc(cps0);\r\n\t\t\t\t\tif (compare_arrays(cps, cps0)) { // bundle into an nfc token\r\n\t\t\t\t\t\ttokens.splice(start, end - start, {\r\n\t\t\t\t\t\t\ttype: TY_NFC, \r\n\t\t\t\t\t\t\tinput: cps0, // there are 3 states: tokens0 ==(process)=> input ==(nfc)=> tokens/cps\r\n\t\t\t\t\t\t\tcps, \r\n\t\t\t\t\t\t\ttokens0: collapse_valid_tokens(slice),\r\n\t\t\t\t\t\t\ttokens: ens_tokenize(str_from_cps(cps), {nf: false})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ti = start;\r\n\t\t\t\t\t} else { \r\n\t\t\t\t\t\ti = end - 1; // skip to end of slice\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstart = -1; // reset\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstart = i; // remember last\r\n\t\t\t\t}\r\n\t\t\t} else if (token.type !== TY_IGNORED) { // 20221024: is this correct?\r\n\t\t\t\tstart = -1; // reset\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn collapse_valid_tokens(tokens);\r\n}\r\n\r\nfunction is_valid_or_mapped(type) {\r\n\treturn type == TY_VALID || type == TY_MAPPED;\r\n}\r\n\r\nfunction requires_check(cps) {\r\n\treturn cps.some(cp => NFC_CHECK.has(cp));\r\n}\r\n\r\nfunction collapse_valid_tokens(tokens) {\r\n\tfor (let i = 0; i < tokens.length; i++) {\r\n\t\tif (tokens[i].type == TY_VALID) {\r\n\t\t\tlet j = i + 1;\r\n\t\t\twhile (j < tokens.length && tokens[j].type == TY_VALID) j++;\r\n\t\t\ttokens.splice(i, j - i, {type: TY_VALID, cps: tokens.slice(i, j).flatMap(x => x.cps)});\r\n\t\t}\r\n\t}\r\n\treturn tokens;\r\n}\n\nexport { ens_beautify, ens_emoji, ens_normalize, ens_normalize_fragment, ens_split, ens_tokenize, is_combining_mark, nfc, nfd, safe_str_from_cps, should_escape };\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { sha3Raw } from 'web3-utils';\n// eslint-disable-next-line camelcase\nimport { ens_normalize } from '@adraffy/ens-normalize';\nexport const normalize = (name) => ens_normalize(name);\nexport const namehash = (inputName) => {\n    // Reject empty names:\n    let node = '';\n    for (let i = 0; i < 32; i += 1) {\n        node += '00';\n    }\n    if (inputName) {\n        const name = normalize(inputName);\n        const labels = name.split('.');\n        for (let i = labels.length - 1; i >= 0; i -= 1) {\n            const labelSha = sha3Raw(labels[i]).slice(2);\n            node = sha3Raw(`0x${node}${labelSha}`).slice(2);\n        }\n    }\n    return `0x${node}`;\n};\n//# sourceMappingURL=utils.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Contract } from 'web3-eth-contract';\nimport { ENSRegistryAbi } from './abi/ens/ENSRegistry.js';\nimport { PublicResolverAbi } from './abi/ens/PublicResolver.js';\nimport { registryAddresses } from './config.js';\nimport { namehash } from './utils.js';\nexport class Registry {\n    constructor(context, customRegistryAddress) {\n        this.contract = new Contract(ENSRegistryAbi, customRegistryAddress !== null && customRegistryAddress !== void 0 ? customRegistryAddress : registryAddresses.main, context);\n        this.context = context;\n    }\n    getOwner(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const result = this.contract.methods.owner(namehash(name)).call();\n                return result;\n            }\n            catch (error) {\n                throw new Error(); // TODO: TransactionRevertInstructionError Needs to be added after web3-eth call method is implemented\n            }\n        });\n    }\n    getTTL(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return this.contract.methods.ttl(namehash(name)).call();\n            }\n            catch (error) {\n                throw new Error(); // TODO: TransactionRevertInstructionError Needs to be added after web3-eth call method is implemented\n            }\n        });\n    }\n    recordExists(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const promise = this.contract.methods.recordExists(namehash(name)).call();\n                return promise;\n            }\n            catch (error) {\n                throw new Error(); // TODO: TransactionRevertInstructionError Needs to be added after web3-eth call method is implemented\n            }\n        });\n    }\n    getResolver(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return this.contract.methods\n                    .resolver(namehash(name))\n                    .call()\n                    .then(address => {\n                    // address type is unknown, not sure why\n                    if (typeof address === 'string') {\n                        const contract = new Contract(PublicResolverAbi, address, this.context);\n                        // TODO: set contract provider needs to be added when ens current provider\n                        return contract;\n                    }\n                    throw new Error();\n                });\n            }\n            catch (error) {\n                throw new Error(); // TODO: TransactionRevertInstructionError Needs to be added after web3-eth call method is implemented\n            }\n        });\n    }\n    get events() {\n        return this.contract.events;\n    }\n}\n//# sourceMappingURL=registry.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ResolverMethodMissingError } from 'web3-errors';\nimport { isNullish, sha3 } from 'web3-utils';\nimport { isHexStrict } from 'web3-validator';\nimport { interfaceIds, methodsInInterface } from './config.js';\nimport { namehash } from './utils.js';\n//  Default public resolver\n//  https://github.com/ensdomains/resolvers/blob/master/contracts/PublicResolver.sol\nexport class Resolver {\n    constructor(registry) {\n        this.registry = registry;\n    }\n    getResolverContractAdapter(ENSName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //  TODO : (Future 4.1.0 TDB) cache resolver contract if frequently queried same ENS name, refresh cache based on TTL and usage, also limit cache size, optional cache with a flag\n            return this.registry.getResolver(ENSName);\n        });\n    }\n    //  https://eips.ethereum.org/EIPS/eip-165\n    // eslint-disable-next-line class-methods-use-this\n    checkInterfaceSupport(resolverContract, methodName) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isNullish(interfaceIds[methodName]))\n                throw new ResolverMethodMissingError((_a = resolverContract.options.address) !== null && _a !== void 0 ? _a : '', methodName);\n            const supported = yield resolverContract.methods\n                .supportsInterface(interfaceIds[methodName])\n                .call();\n            if (!supported)\n                throw new ResolverMethodMissingError((_b = resolverContract.options.address) !== null && _b !== void 0 ? _b : '', methodName);\n        });\n    }\n    supportsInterface(ENSName, interfaceId) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const resolverContract = yield this.getResolverContractAdapter(ENSName);\n            let interfaceIdParam = interfaceId;\n            if (!isHexStrict(interfaceIdParam)) {\n                interfaceIdParam = (_a = sha3(interfaceId)) !== null && _a !== void 0 ? _a : '';\n                if (interfaceId === '')\n                    throw new Error('Invalid interface Id');\n                interfaceIdParam = interfaceIdParam.slice(0, 10);\n            }\n            return resolverContract.methods.supportsInterface(interfaceIdParam).call();\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-inferrable-types\n    getAddress(ENSName, coinType = 60) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resolverContract = yield this.getResolverContractAdapter(ENSName);\n            yield this.checkInterfaceSupport(resolverContract, methodsInInterface.addr);\n            return resolverContract.methods.addr(namehash(ENSName), coinType).call();\n        });\n    }\n    getPubkey(ENSName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resolverContract = yield this.getResolverContractAdapter(ENSName);\n            yield this.checkInterfaceSupport(resolverContract, methodsInInterface.pubkey);\n            return resolverContract.methods.pubkey(namehash(ENSName)).call();\n        });\n    }\n    getContenthash(ENSName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resolverContract = yield this.getResolverContractAdapter(ENSName);\n            yield this.checkInterfaceSupport(resolverContract, methodsInInterface.contenthash);\n            return resolverContract.methods.contenthash(namehash(ENSName)).call();\n        });\n    }\n    setAddress(ENSName, address, txConfig) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resolverContract = yield this.getResolverContractAdapter(ENSName);\n            yield this.checkInterfaceSupport(resolverContract, methodsInInterface.setAddr);\n            return resolverContract.methods\n                .setAddr(namehash(ENSName), address)\n                .send(txConfig);\n        });\n    }\n    getText(ENSName, key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resolverContract = yield this.getResolverContractAdapter(ENSName);\n            yield this.checkInterfaceSupport(resolverContract, methodsInInterface.text);\n            return resolverContract.methods\n                .text(namehash(ENSName), key).call();\n        });\n    }\n    getName(address, checkInterfaceSupport = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const reverseName = `${address.toLowerCase().substring(2)}.addr.reverse`;\n            const resolverContract = yield this.getResolverContractAdapter(reverseName);\n            if (checkInterfaceSupport)\n                yield this.checkInterfaceSupport(resolverContract, methodsInInterface.name);\n            return resolverContract.methods\n                .name(namehash(reverseName)).call();\n        });\n    }\n}\n//# sourceMappingURL=resolver.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Web3Context } from 'web3-core';\nimport { ENSNetworkNotSyncedError, ENSUnsupportedNetworkError, } from 'web3-errors';\nimport { isSyncing } from 'web3-eth';\nimport { getId } from 'web3-net';\nimport { FMT_NUMBER, } from 'web3-types';\nimport { isAddress } from 'web3-validator';\nimport { networkIds, registryAddresses } from './config.js';\nimport { Registry } from './registry.js';\nimport { Resolver } from './resolver.js';\n/**\n * This class is designed to interact with the ENS system on the Ethereum blockchain.\n * For using ENS package, first install Web3 package using: `npm i web3` or `yarn add web3` based on your package manager, after that ENS features can be used as mentioned in following snippet.\n * ```ts\n *\n * import { Web3 } from 'web3';\n *\n * const web3 = new Web3('https://127.0.0.1:4545');\n *\n * console.log(await web3.eth.ens.getAddress('ethereum.eth'))\n * ```\n * For using individual package install `web3-eth-ens` packages using: `npm i web3-eth-ens` or `yarn add web3-eth-ens`. This is more efficient approach for building lightweight applications.\n *\n * ```ts\n *import { ENS } from 'web3-eth-ens';\n *\n * const ens = new ENS(undefined,'https://127.0.0.1:4545');\n *\n * console.log(await ens.getAddress('vitalik.eth'));\n * ```\n */\nexport class ENS extends Web3Context {\n    /**\n     * Use to create an instance of ENS\n     * @param registryAddr - (Optional) The address of the ENS registry (default: mainnet registry address)\n     * @param provider - (Optional) The provider to use for the ENS instance\n     * @example\n     * ```ts\n     * const ens = new ENS(\n     * \t\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n     * \t\"http://localhost:8545\"\n     * );\n     *\n     * console.log( ens.defaultChain);\n     * > mainnet\n     * ```\n     */\n    constructor(registryAddr, provider) {\n        super(provider !== null && provider !== void 0 ? provider : '');\n        this.registryAddress = registryAddr !== null && registryAddr !== void 0 ? registryAddr : registryAddresses.main; // will default to main registry address\n        this._registry = new Registry(this.getContextObject(), registryAddr);\n        this._resolver = new Resolver(this._registry);\n    }\n    /**\n     * Returns the Resolver by the given address\n     * @param name - The name of the ENS domain\n     * @returns - An contract instance of the resolver\n     *\n     * @example\n     * ```ts\n     * const resolver = await ens.getResolver('resolver');\n     *\n     * console.log(resolver.options.address);\n     * > '0x1234567890123456789012345678901234567890'\n     * ```\n     */\n    getResolver(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._registry.getResolver(name);\n        });\n    }\n    /**\n     * Returns true if the record exists\n     * @param name - The ENS name\n     * @returns - Returns `true` if node exists in this ENS registry. This will return `false` for records that are in the legacy ENS registry but have not yet been migrated to the new one.\n     * @example\n     * ```ts\n     * const exists = await web3.eth.ens.recordExists('ethereum.eth');\n     * ```\n     */\n    recordExists(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._registry.recordExists(name);\n        });\n    }\n    /**\n     * Returns the caching TTL (time-to-live) of an ENS name.\n     * @param name - The ENS name\n     * @returns - Returns the caching TTL (time-to-live) of a name.\n     * @example\n     * ```ts\n     * const owner = await web3.eth.ens.getTTL('ethereum.eth');\n     * ```\n     */\n    getTTL(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._registry.getTTL(name);\n        });\n    }\n    /**\n     * Returns the owner by the given name and current configured or detected Registry\n     * @param name - The ENS name\n     * @returns - Returns the address of the owner of the name.\n     * @example\n     * ```ts\n     * const owner = await web3.eth.ens.getOwner('ethereum.eth');\n     * ```\n     */\n    getOwner(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._registry.getOwner(name);\n        });\n    }\n    /**\n     * Resolves an ENS name to an Ethereum address.\n     * @param ENSName - The ENS name to resolve\n     * @param coinType - (Optional) The coin type, defaults to 60 (ETH)\n     * @returns - The Ethereum address of the given name\n     * ```ts\n     * const address = await web3.eth.ens.getAddress('ethereum.eth');\n     * console.log(address);\n     * > '0xfB6916095ca1df60bB79Ce92cE3Ea74c37c5d359'\n     * ```\n     */\n    getAddress(ENSName, coinType = 60) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._resolver.getAddress(ENSName, coinType);\n        });\n    }\n    /**\n     * ERC-634 - Returns the text content stored in the resolver for the specified key.\n     * @param ENSName - The ENS name to resolve\n     * @param key - The key to resolve https://github.com/ethereum/ercs/blob/master/ERCS/erc-634.md#global-keys\n     * @returns - The value content stored in the resolver for the specified key\n     */\n    getText(ENSNameOrAddr, key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isAddress(ENSNameOrAddr))\n                return this._resolver.getText(yield (this._resolver.getName(ENSNameOrAddr, false)), key);\n            return this._resolver.getText(ENSNameOrAddr, key);\n        });\n    }\n    /**\n     * Resolves the name of an ENS node.\n     * @param ENSName - The node to resolve\n     * @returns - The name\n     */\n    getName(ENSName, checkInterfaceSupport = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._resolver.getName(ENSName, checkInterfaceSupport);\n        });\n    }\n    /**\n     * Returns the X and Y coordinates of the curve point for the public key.\n     * @param ENSName - The ENS name\n     * @returns - The X and Y coordinates of the curve point for the public key\n     * @example\n     * ```ts\n     * const key = await web3.eth.ens.getPubkey('ethereum.eth');\n     * console.log(key);\n     * > {\n     * \"0\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n     * \"1\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n     * \"x\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n     * \"y\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n     * }\n     * ```\n     */\n    getPubkey(ENSName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._resolver.getPubkey(ENSName);\n        });\n    }\n    /**\n     * Returns the content hash object associated with an ENS node.\n     * @param ENSName - The ENS name\n     * @returns - The content hash object associated with an ENS node\n     * @example\n     * ```ts\n     * const hash = await web3.eth.ens.getContenthash('ethereum.eth');\n     * console.log(hash);\n     * > 'QmaEBknbGT4bTQiQoe2VNgBJbRfygQGktnaW5TbuKixjYL'\n     * ```\n     */\n    getContenthash(ENSName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._resolver.getContenthash(ENSName);\n        });\n    }\n    /**\n     * Checks if the current used network is synced and looks for ENS support there.\n     * Throws an error if not.\n     * @returns - The address of the ENS registry if the network has been detected successfully\n     * @example\n     * ```ts\n     * console.log(await web3.eth.ens.checkNetwork());\n     * > '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n     * ```\n     */\n    checkNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const now = Date.now() / 1000;\n            if (!this._lastSyncCheck || now - this._lastSyncCheck > 3600) {\n                const syncInfo = yield isSyncing(this);\n                if (!(typeof syncInfo === 'boolean' && !syncInfo)) {\n                    throw new ENSNetworkNotSyncedError();\n                }\n                this._lastSyncCheck = now;\n            }\n            if (this._detectedAddress) {\n                return this._detectedAddress;\n            }\n            const networkType = yield getId(this, Object.assign(Object.assign({}, this.defaultReturnFormat), { number: FMT_NUMBER.HEX })); // get the network from provider\n            const addr = registryAddresses[networkIds[networkType]];\n            if (typeof addr === 'undefined') {\n                throw new ENSUnsupportedNetworkError(networkType);\n            }\n            this._detectedAddress = addr;\n            return this._detectedAddress;\n        });\n    }\n    /**\n     * Returns true if the related Resolver does support the given signature or interfaceId.\n     * @param ENSName - The ENS name\n     * @param interfaceId - The signature of the function or the interfaceId as described in the ENS documentation\n     * @returns - `true` if the related Resolver does support the given signature or interfaceId.\n     * @example\n     * ```ts\n     * const supports = await web3.eth.ens.supportsInterface('ethereum.eth', 'addr(bytes32');\n     * console.log(supports);\n     * > true\n     * ```\n     */\n    supportsInterface(ENSName, interfaceId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._resolver.supportsInterface(ENSName, interfaceId);\n        });\n    }\n    /**\n     * @returns - Returns all events that can be emitted by the ENS registry.\n     */\n    get events() {\n        return this._registry.events;\n    }\n    /**\n     * Sets the address of an ENS name in his resolver.\n     * @param name - The ENS name\n     * @param address - The address to set\n     * @param txConfig - (Optional) The transaction config\n     * @returns - The transaction receipt\n     * ```ts\n     * const receipt = await ens.setAddress('web3js.eth','0xe2597eb05cf9a87eb1309e86750c903ec38e527e');\n     *```\n     */\n    setAddress(name, address, txConfig) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._resolver.setAddress(name, address, txConfig);\n        });\n    }\n}\n//# sourceMappingURL=ens.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { toChecksumAddress, utf8ToHex } from 'web3-utils';\nimport { formatTransaction } from 'web3-eth';\nimport { ETH_DATA_FORMAT } from 'web3-types';\nimport { validator, isHexStrict } from 'web3-validator';\nimport { personalRpcMethods } from 'web3-rpc-methods';\nexport const getAccounts = (requestManager) => __awaiter(void 0, void 0, void 0, function* () {\n    const result = yield personalRpcMethods.getAccounts(requestManager);\n    return result.map(toChecksumAddress);\n});\nexport const newAccount = (requestManager, password) => __awaiter(void 0, void 0, void 0, function* () {\n    validator.validate(['string'], [password]);\n    const result = yield personalRpcMethods.newAccount(requestManager, password);\n    return toChecksumAddress(result);\n});\nexport const unlockAccount = (requestManager, address, password, unlockDuration) => __awaiter(void 0, void 0, void 0, function* () {\n    validator.validate(['address', 'string', 'uint'], [address, password, unlockDuration]);\n    return personalRpcMethods.unlockAccount(requestManager, address, password, unlockDuration);\n});\nexport const lockAccount = (requestManager, address) => __awaiter(void 0, void 0, void 0, function* () {\n    validator.validate(['address'], [address]);\n    return personalRpcMethods.lockAccount(requestManager, address);\n});\nexport const importRawKey = (requestManager, keyData, passphrase) => __awaiter(void 0, void 0, void 0, function* () {\n    validator.validate(['string', 'string'], [keyData, passphrase]);\n    return personalRpcMethods.importRawKey(requestManager, keyData, passphrase);\n});\nexport const sendTransaction = (requestManager, tx, passphrase, config) => __awaiter(void 0, void 0, void 0, function* () {\n    const formattedTx = formatTransaction(tx, ETH_DATA_FORMAT, {\n        transactionSchema: config === null || config === void 0 ? void 0 : config.customTransactionSchema,\n    });\n    return personalRpcMethods.sendTransaction(requestManager, formattedTx, passphrase);\n});\nexport const signTransaction = (requestManager, tx, passphrase, config) => __awaiter(void 0, void 0, void 0, function* () {\n    const formattedTx = formatTransaction(tx, ETH_DATA_FORMAT, {\n        transactionSchema: config === null || config === void 0 ? void 0 : config.customTransactionSchema,\n    });\n    return personalRpcMethods.signTransaction(requestManager, formattedTx, passphrase);\n});\nexport const sign = (requestManager, data, address, passphrase) => __awaiter(void 0, void 0, void 0, function* () {\n    validator.validate(['string', 'address', 'string'], [data, address, passphrase]);\n    const dataToSign = isHexStrict(data) ? data : utf8ToHex(data);\n    return personalRpcMethods.sign(requestManager, dataToSign, address, passphrase);\n});\nexport const ecRecover = (requestManager, signedData, signature) => __awaiter(void 0, void 0, void 0, function* () {\n    validator.validate(['string', 'string'], [signedData, signature]);\n    const signedDataString = isHexStrict(signedData) ? signedData : utf8ToHex(signedData);\n    return personalRpcMethods.ecRecover(requestManager, signedDataString, signature);\n});\n//# sourceMappingURL=rpc_method_wrappers.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Web3Context } from 'web3-core';\nimport * as rpcWrappers from './rpc_method_wrappers.js';\n/**\n * Eth Personal allows you to interact with the Ethereum node’s accounts.\n * For using Eth Personal package, first install Web3 package using: `npm i web3` or `yarn add web3` based on your package manager.\n * ```ts\n *\n *import { Web3 } from 'web3';\n *  const web3 = new Web3('http://127.0.0.1:7545');\n *\n *  console.log(await web3.eth.personal.getAccounts());\n *\n * ```\n * For using individual package install `web3-eth-personal` packages using: `npm i web3-eth-personal` or `yarn add web3-eth-personal`.\n *\n * ```ts\n * import {Personal} from 'web3-eth-personal';\n *\n * const personal = new Personal('http://127.0.0.1:7545');\n * console.log(await personal.getAccounts());\n * ```\n */\nexport class Personal extends Web3Context {\n    /**\n     *Returns a list of accounts the node controls by using the provider and calling the RPC method personal_listAccounts. Using `web3.eth.accounts.create()` will not add accounts into this list. For that use `web3.eth.personal.newAccount()`.\n     * @returns - An array of addresses controlled by the node.\n     * @example\n     * ```ts\n     *  const accounts = await personal.getAccounts();\n     * console.log(accounts);\n     * >\n     * [\n     * \t'0x79D7BbaC53C9aF700d0B250e9AE789E503Fcd6AE',\n     * \t'0xe2597eB05CF9a87eB1309e86750C903EC38E527e',\n     * \t'0x7eD0e85B8E1E925600B4373e6d108F34AB38a401',\n     * \t'0xE4bEEf667408b99053dC147Ed19592aDa0d77F59',\n     * \t'0x7AB80aeB6bb488B7f6c41c58e83Ef248eB39c882',\n     * \t'0x12B1D9d74d73b1C3A245B19C1C5501c653aF1af9',\n     * \t'0x1a6075A263Ee140e00Dbf8E374Fc5A443d097894',\n     * \t'0x4FEC0A51024B13030D26E70904B066C6d41157A5',\n     * \t'0x03095dc4857BB26f3a4550c5651Df8b7f6b6B1Ef',\n     * \t'0xac0B9b6e8A17991cb172B2ABAF45Fb5eb769E540'\n     * ]\n     * ```\n     */\n    getAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return rpcWrappers.getAccounts(this.requestManager);\n        });\n    }\n    /**\n     * Creates a new account and returns its address.\n     * **_NOTE:_**  This function sends a sensitive information like password. Never call this function over a unsecured Websocket or HTTP provider, as your password will be sent in plain text!\n     * @param password - The password to encrypt the account with.\n     * @returns - The address of the new account.\n     * @example\n     * ```ts\n     * const addr = await web3.eth.personal.newAccount('password');\n     * console.log(addr);\n     * > '0x1234567891011121314151617181920212223456'\n     * ```\n     */\n    newAccount(password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return rpcWrappers.newAccount(this.requestManager, password);\n        });\n    }\n    /**\n     * Unlocks an account for a given duration.\n     * @param address - The address of the account to unlock.\n     * @param password - The password of the account to unlock.\n     * @param unlockDuration - The duration in seconds to unlock the account for.\n     * @example\n     * ```ts\n     * await personal.unlockAccount(\n     * \t\"0x0d4aa485ecbc499c70860feb7e5aaeaf5fd8172e\",\n     * \t\"123456\",\n     * \t600\n     * );\n     * ```\n     */\n    unlockAccount(address, password, unlockDuration) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return rpcWrappers.unlockAccount(this.requestManager, address, password, unlockDuration);\n        });\n    }\n    /**\n     * Locks the given account\n     * @param address - The address of the account to lock.\n     * @returns - `true` if the account was locked, otherwise `false`.\n     * @example\n     * ```ts\n     * await personal.lockAccount(\n     * \t\"0x0d4aa485ecbc499c70860feb7e5aaeaf5fd8172e\"\n     * );\n     * ```\n     */\n    lockAccount(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return rpcWrappers.lockAccount(this.requestManager, address);\n        });\n    }\n    /**\n     * Imports the given private key into the key store, encrypting it with the passphrase.\n     * @param keyData - An unencrypted private key (hex string).\n     * @param passphrase  - The password of the account\n     * @returns - The address of the new account.\n     * @example\n     * ```ts\n     * const accountAddress = await personal.importRawKey(\n     * \t\"abe40cb08850da918ee951b237fa87946499b2d8643e4aa12b0610b050c731f6\",\n     * \t\"123456\"\n     * );\n     *\n     * console.log(unlockTx);\n     * > 0x8727a8b34ec833154b72b62cac05d69f86eb6556\n     * ```\n     */\n    importRawKey(keyData, passphrase) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return rpcWrappers.importRawKey(this.requestManager, keyData, passphrase);\n        });\n    }\n    /**\n     * This method sends a transaction over the management API.\n     * **_NOTE:_** Sending your account password over an unsecured HTTP RPC connection is highly unsecure.\n     * @param tx - The transaction options\n     * @param passphrase - The passphrase of the current account\n     * @returns - The transaction hash\n     * @example\n     * ```ts\n     * const txHash = personal\n     * .sendTransaction({\n     *  \tfrom: \"0x0d4aa485ecbc499c70860feb7e5aaeaf5fd8172e\",\n     * \tgasPrice: \"20000000000\",\n     * \tgas: \"21000\",\n     * \tto: \"0x3535353535353535353535353535353535353535\",\n     * \tvalue: \"1000000\",\n     * \tdata: \"\",\n     * \tnonce: 0,\n     * },\n     * \"123456\");\n     *\n     * console.log(txHash);\n     * > 0x9445325c3c5638c9fe425b003b8c32f03e9f99d409555a650a6838ba712bb51b\n     * ```\n     */\n    sendTransaction(tx, passphrase) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return rpcWrappers.sendTransaction(this.requestManager, tx, passphrase, this.config);\n        });\n    }\n    /**\n     * Signs a transaction. This account needs to be unlocked.\n     * **_NOTE:_** Sending your account password over an unsecured HTTP RPC connection is highly unsecure.\n     * @param tx - The transaction data to sign. See sendTransaction  for more information.\n     * @param passphrase - The password of the `from` account, to sign the transaction with.\n     * @returns - The RLP encoded transaction. The `raw` property can be used to send the transaction using  sendSignedTransaction.\n     * @example\n     * ```ts\n     * const tx = personal\n     * .signTransaction({\n     * \tfrom: \"0x0d4aa485ecbc499c70860feb7e5aaeaf5fd8172e\",\n     * \tgasPrice: \"20000000000\",\n     * \tgas: \"21000\",\n     * \tto: \"0x3535353535353535353535353535353535353535\",\n     * \tvalue: \"1000000000000000000\",\n     * \tdata: \"\",\n     * \tnonce: 0,\n     * },\n     * \"123456\");\n     *\n     * console.log(tx);\n     *\n     * > {\n     * \traw: '0xf86e808504a817c800825208943535353535353535353535353535353535353535880de0b6b3a764000080820a95a0c951c03238fe930e6e69ab9d6af9f29248a514048e44884f0e60c4de40de3526a038b71399bf0c8925749ab79e91ce6cd2fc068c84c18ff6a197b48c4cbef01e00',\n     * \ttx: {\n     * \ttype: '0x0',\n     * \tnonce: '0x0',\n     * \tgasPrice: '0x4a817c800',\n     * \tmaxPriorityFeePerGas: null,\n     * \tmaxFeePerGas: null,\n     * \tgas: '0x5208',\n     * \tvalue: '0xde0b6b3a7640000',\n     * \tinput: '0x',\n     * \tv: '0xa95',\n     * \tr: '0xc951c03238fe930e6e69ab9d6af9f29248a514048e44884f0e60c4de40de3526',\n     * \ts: '0x38b71399bf0c8925749ab79e91ce6cd2fc068c84c18ff6a197b48c4cbef01e00',\n     * \tto: '0x3535353535353535353535353535353535353535',\n     * \thash: '0x65e3df790ab2a32068b13cff970b26445b8995229ae4abbed61bd996f09fce69'\n     * \t}\n     * }\n     * ```\n     */\n    signTransaction(tx, passphrase) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return rpcWrappers.signTransaction(this.requestManager, tx, passphrase, this.config);\n        });\n    }\n    /**\n     * Calculates an Ethereum specific signature with:\n     * sign(keccak256(\"\\x19Ethereum Signed Message:\\n\" + dataToSign.length + dataToSign)))\n     * Adding a prefix to the message makes the calculated signature recognisable as an Ethereum specific signature.\n     *\n     * If you have the original message and the signed message, you can discover the signing account address using web3.eth.personal.ecRecover\n     * **_NOTE:_** Sending your account password over an unsecured HTTP RPC connection is highly unsecure.\n     * @param data - The data to sign.\n     * @param address - The address to sign with.\n     * @param passphrase - The passphrase to decrypt the account with.\n     * @returns - The signature.\n     * @example\n     * ```ts\n     * const sig = await personal.sign(\"Hello world\", \"0x0D4Aa485ECbC499c70860fEb7e5AaeAf5fd8172E\", \"123456\")\n     * console.log(sig)\n     * > 0x5d21d01b3198ac34d0585a9d76c4d1c8123e5e06746c8962318a1c08ffb207596e6fce4a6f377b7c0fc98c5f646cd73438c80e8a1a95cbec55a84c2889dca0301b\n     * ```\n     */\n    sign(data, address, passphrase) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return rpcWrappers.sign(this.requestManager, data, address, passphrase);\n        });\n    }\n    /**\n     * Recovers the account that signed the data.\n     * @param signedData - Data that was signed. If String it will be converted using {@link utf8ToHex}\n     * @param signature - The signature\n     * @returns - The address of the account that signed the data.\n     * @example\n     * ```ts\n     *  const address = await personal.ecRecover(\n     * \t\"Hello world\",\n     * \t\"0x5d21d01b3198ac34d0585a9d76c4d1c8123e5e06746c8962318a1c08ffb207596e6fce4a6f377b7c0fc98c5f646cd73438c80e8a1a95cbec55a84c2889dca0301b\"\n     * );\n     * console.log(address);\n     * > 0x0d4aa485ecbc499c70860feb7e5aaeaf5fd8172e\n     * ```\n     */\n    ecRecover(signedData, signature) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return rpcWrappers.ecRecover(this.requestManager, signedData, signature);\n        });\n    }\n}\n//# sourceMappingURL=personal.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport var Transport;\n(function (Transport) {\n    Transport[\"HTTPS\"] = \"https\";\n    Transport[\"WebSocket\"] = \"wss\";\n})(Transport || (Transport = {}));\nexport var Network;\n(function (Network) {\n    Network[\"ETH_MAINNET\"] = \"eth_mainnet\";\n    Network[\"ETH_SEPOLIA\"] = \"eth_sepolia\";\n    Network[\"ETH_HOLESKY\"] = \"eth_holesky\";\n    Network[\"POLYGON_MAINNET\"] = \"polygon_mainnet\";\n    Network[\"POLYGON_AMOY\"] = \"polygon_amoy\";\n    Network[\"AVALANCHE_C_MAINNET\"] = \"avalanche_c_mainnet\";\n    Network[\"AVALANCHE_P_MAINNET\"] = \"avalanche_p_mainnet\";\n    Network[\"AVALANCHE_X_MAINNET\"] = \"avalanche_x_mainnet\";\n    Network[\"ARBITRUM_MAINNET\"] = \"arbitrum_mainnet\";\n    Network[\"ARBITRUM_SEPOLIA\"] = \"arbitrum_sepolia\";\n    Network[\"BASE_MAINNET\"] = \"base_mainnet\";\n    Network[\"BASE_SEPOLIA\"] = \"base_sepolia\";\n    Network[\"OPTIMISM_MAINNET\"] = \"optimism_mainnet\";\n    Network[\"OPTIMISM_SEPOLIA\"] = \"optimism_sepolia\";\n    Network[\"FANTOM_MAINNET\"] = \"fantom_mainnet\";\n    Network[\"FANTOM_TESTNET\"] = \"fantom_testnet\";\n    Network[\"DYMENSION_MAINNET\"] = \"dymension_mainnet\";\n    Network[\"DYMENSION_TESTNET\"] = \"dymension_testnet\";\n    Network[\"BNB_MAINNET\"] = \"bnb_mainnet\";\n    Network[\"BNB_TESTNET\"] = \"bnb_testnet\";\n    Network[\"BSC_MAINNET\"] = \"bsc_mainnet\";\n    Network[\"BSC_TESTNET\"] = \"bsc_testnet\";\n    Network[\"ARBITRUM_ONE\"] = \"arbitrum_one\";\n    Network[\"ARBITRUM_NOVA\"] = \"arbitrum_nova\";\n    Network[\"AVALANCHE_FUJI_C\"] = \"avalanche_fuji_c\";\n    Network[\"AVALANCHE_FUJI_P\"] = \"avalanche_fuji_p\";\n    Network[\"AVALANCHE_FUJI_X\"] = \"avalanche_fuji_x\";\n    Network[\"BLAST_MAINNET\"] = \"blast_mainnet\";\n    Network[\"OPBNB_MAINNET\"] = \"opbnb_mainnet\";\n    Network[\"OPBNB_TESTNET\"] = \"opbnb_testnet\";\n    Network[\"GNOSIS_MAINNET\"] = \"gnosis_mainnet\";\n    Network[\"GNOSIS_CHIADO\"] = \"gnosis_chiado\";\n    Network[\"PULSECHAIN_MAINNET\"] = \"pulsechain_mainnet\";\n    Network[\"PULSECHAIN_TESTNET\"] = \"pulsechain_testnet\";\n    Network[\"KAVA_MAINNET\"] = \"kava_mainnet\";\n    Network[\"CRONOS_MAINNET\"] = \"cronos_mainnet\";\n    Network[\"MANTLE_MAINNET\"] = \"mantle_mainnet\";\n    Network[\"CHILIZ_MAINNET\"] = \"chiliz_mainnet\";\n    Network[\"CHILIZ_SPICY\"] = \"chiliz_spicy\";\n    Network[\"MOONBEAM_MAINNET\"] = \"moonbeam_mainnet\";\n    Network[\"TAIKO_MAINNET\"] = \"taiko_mainnet\";\n    Network[\"TAIKO_HEKLA\"] = \"taiko_hekla\";\n    Network[\"LINEA_MAINNET\"] = \"linea_mainnet\";\n    Network[\"LINEA_SEPOLIA\"] = \"linea_sepolia\";\n    Network[\"BAHAMUT_MAINNET\"] = \"bahamut_mainnet\";\n    Network[\"SCROLL_MAINNET\"] = \"scroll_mainnet\";\n    Network[\"SCROLL_SEPOLIA\"] = \"scroll_sepolia\";\n    Network[\"TRON_MAINNET\"] = \"tron_mainnet\";\n    Network[\"SYSCOIN_MAINNET\"] = \"syscoin_mainnet\";\n    Network[\"SYSCOIN_TANENBAUM\"] = \"syscoin_tanenbaum\";\n    Network[\"MOONRIVER_MAINNET\"] = \"moonriver_mainnet\";\n    Network[\"HAQQ_MAINNET\"] = \"haqq_mainnet\";\n    Network[\"EVMOS_MAINNET\"] = \"evmos_mainnet\";\n    Network[\"EVMOS_TESTNET\"] = \"evmos_testnet\";\n    Network[\"BERACHAIN_TESTNET\"] = \"berachain_testnet\";\n})(Network || (Network = {}));\n//# sourceMappingURL=types.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/* eslint-disable max-classes-per-file */\nimport { BaseWeb3Error } from 'web3-errors';\nconst ERR_QUICK_NODE_RATE_LIMIT = 1300;\nexport class QuickNodeRateLimitError extends BaseWeb3Error {\n    constructor(error) {\n        super(`You've reach the rate limit of free RPC calls from our Partner Quick Nodes. There are two options you can either create a paid Quick Nodes account and get 20% off for 2 months using WEB3JS referral code, or use Free public RPC endpoint.`, error);\n        this.code = ERR_QUICK_NODE_RATE_LIMIT;\n    }\n}\nconst ERR_PROVIDER_CONFIG_OPTIONS = 1301;\nexport class ProviderConfigOptionsError extends BaseWeb3Error {\n    constructor(msg) {\n        super(`Invalid provider config options given for ${msg}`);\n        this.code = ERR_PROVIDER_CONFIG_OPTIONS;\n    }\n}\n/* eslint-enable max-classes-per-file */\n//# sourceMappingURL=errors.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport HttpProvider from 'web3-providers-http';\nimport WebSocketProvider from 'web3-providers-ws';\nimport { Eip1193Provider } from 'web3-utils';\nimport { Transport } from './types.js';\nimport { ProviderConfigOptionsError } from './errors.js';\n/*\nThis class can be used to create new providers only when there is custom logic required in each Request method like\nchecking specific HTTP status codes and performing any action, throwing new error types or setting additional HTTP headers in requests, or even modifying requests.\n\nAnother simpler approach can be a function simply returning URL strings instead of using the following class in case if\nno additional logic implementation is required in the provider.\n*/\nexport class Web3ExternalProvider extends Eip1193Provider {\n    constructor(network, transport, token, host, providerConfigOptions) {\n        super();\n        if (providerConfigOptions !== undefined &&\n            transport === Transport.HTTPS &&\n            !('providerOptions' in providerConfigOptions)) {\n            throw new ProviderConfigOptionsError('HTTP Provider');\n        }\n        else if (providerConfigOptions !== undefined &&\n            transport === Transport.WebSocket &&\n            !('socketOptions' in providerConfigOptions ||\n                'reconnectOptions' in providerConfigOptions)) {\n            throw new ProviderConfigOptionsError('Websocket Provider');\n        }\n        this.transport = transport;\n        if (transport === Transport.HTTPS) {\n            this.provider = new HttpProvider(this.getRPCURL(network, transport, token, host), providerConfigOptions);\n        }\n        else if (transport === Transport.WebSocket) {\n            this.provider = new WebSocketProvider(this.getRPCURL(network, transport, token, host), providerConfigOptions === null || providerConfigOptions === void 0 ? void 0 : providerConfigOptions.socketOptions, providerConfigOptions === null || providerConfigOptions === void 0 ? void 0 : providerConfigOptions.reconnectOptions);\n        }\n    }\n    request(payload, requestOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.transport === Transport.HTTPS) {\n                return (yield this.provider.request(payload, requestOptions));\n            }\n            return this.provider.request(payload);\n        });\n    }\n    getStatus() {\n        return this.provider.getStatus();\n    }\n    supportsSubscriptions() {\n        return this.provider.supportsSubscriptions();\n    }\n    once(_type, _listener) {\n        var _a;\n        if ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.once) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            this.provider.once(_type, _listener);\n        }\n    }\n    removeAllListeners(_type) {\n        var _a;\n        if ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.removeAllListeners)\n            this.provider.removeAllListeners(_type);\n    }\n    connect() {\n        var _a;\n        if ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.connect)\n            this.provider.connect();\n    }\n    disconnect(_code, _data) {\n        var _a;\n        if ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.disconnect)\n            this.provider.disconnect(_code, _data);\n    }\n    reset() {\n        var _a;\n        if ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.reset)\n            this.provider.reset();\n    }\n    on(_type, _listener) {\n        if (this.provider)\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            this.provider.on(_type, _listener);\n    }\n    removeListener(_type, _listener) {\n        if (this.provider)\n            this.provider.removeListener(_type, _listener);\n    }\n}\n//# sourceMappingURL=web3_provider.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ResponseError } from 'web3-errors';\nimport { Transport, Network } from './types.js';\nimport { Web3ExternalProvider } from './web3_provider.js';\nimport { QuickNodeRateLimitError } from './errors.js';\nconst isValid = (str) => str !== undefined && str.trim().length > 0;\nexport class QuickNodeProvider extends Web3ExternalProvider {\n    // eslint-disable-next-line default-param-last\n    constructor(network = Network.ETH_MAINNET, transport = Transport.HTTPS, token = '', host = '', providerConfigOptions) {\n        super(network, transport, token, host, providerConfigOptions);\n    }\n    request(payload, requestOptions) {\n        const _super = Object.create(null, {\n            request: { get: () => super.request }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _super.request.call(this, payload, requestOptions);\n            }\n            catch (error) {\n                if (error instanceof ResponseError && error.statusCode === 429) {\n                    throw new QuickNodeRateLimitError(error);\n                }\n                throw error;\n            }\n        });\n    }\n    // eslint-disable-next-line class-methods-use-this\n    getRPCURL(network, transport, _token, _host) {\n        let host = '';\n        let token = '';\n        switch (network) {\n            case Network.ETH_MAINNET:\n                host = isValid(_host) ? _host : 'powerful-holy-bush.quiknode.pro';\n                token = isValid(_token) ? _token : '3240624a343867035925ff7561eb60dfdba2a668';\n                break;\n            case Network.ETH_SEPOLIA:\n                host = isValid(_host)\n                    ? _host\n                    : 'dimensional-fabled-glitter.ethereum-sepolia.quiknode.pro';\n                token = isValid(_token) ? _token : '382a3b5a4b938f2d6e8686c19af4b22921fde2cd';\n                break;\n            case Network.ETH_HOLESKY:\n                host = isValid(_host) ? _host : 'yolo-morning-card.ethereum-holesky.quiknode.pro';\n                token = isValid(_token) ? _token : '481ebe70638c4dcf176af617a16d02ab866b9af9';\n                break;\n            case Network.ARBITRUM_MAINNET:\n                host = isValid(_host)\n                    ? _host\n                    : 'autumn-divine-dinghy.arbitrum-mainnet.quiknode.pro';\n                token = isValid(_token) ? _token : 'a5d7bfbf60b5ae9ce3628e53d69ef50d529e9a8c';\n                break;\n            case Network.ARBITRUM_SEPOLIA:\n                host = isValid(_host) ? _host : 'few-patient-pond.arbitrum-sepolia.quiknode.pro';\n                token = isValid(_token) ? _token : '3be985450970628c860b959c65cd2642dcafe53c';\n                break;\n            case Network.BNB_MAINNET:\n                host = isValid(_host) ? _host : 'purple-empty-reel.bsc.quiknode.pro';\n                token = isValid(_token) ? _token : 'ebf6c532961e21f092ff2facce1ec4c89c540158';\n                break;\n            case Network.BNB_TESTNET:\n                host = isValid(_host) ? _host : 'floral-rough-scion.bsc-testnet.quiknode.pro';\n                token = isValid(_token) ? _token : '5b297e5acff5f81f4c37ebf6f235f7299b6f9d28';\n                break;\n            case Network.POLYGON_MAINNET:\n                host = isValid(_host) ? _host : 'small-chaotic-moon.matic.quiknode.pro';\n                token = isValid(_token) ? _token : '847569f8a017e84d985e10d0f44365d965a951f1';\n                break;\n            case Network.POLYGON_AMOY:\n                host = isValid(_host) ? _host : 'prettiest-side-shape.matic-amoy.quiknode.pro';\n                token = isValid(_token) ? _token : '79a9476eea661d4f82de614db1d8a895b14b881c';\n                break;\n            default:\n                throw new Error('Network info not avalible.');\n        }\n        return `${transport}://${host}/${token}`;\n    }\n}\n//# sourceMappingURL=web3_provider_quicknode.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Network, Transport } from './types.js';\nimport { Web3ExternalProvider } from './web3_provider.js';\nconst isValid = (str) => str !== undefined && str.trim().length > 0;\nconst websocketExclusions = [\n    Network.DYMENSION_MAINNET,\n    Network.DYMENSION_TESTNET,\n    Network.KAVA_MAINNET,\n    Network.CRONOS_MAINNET,\n    // deprecated\n    Network.POLYGON_MAINNET,\n];\nexport class PublicNodeProvider extends Web3ExternalProvider {\n    // eslint-disable-next-line default-param-last\n    constructor(network = Network.ETH_MAINNET, transport = Transport.HTTPS, host = '', providerConfigOptions) {\n        super(network, transport, '', host, providerConfigOptions);\n    }\n    // eslint-disable-next-line class-methods-use-this\n    getRPCURL(network, transport, _, _host) {\n        if (!PublicNodeProvider.networkHostMap[network]) {\n            throw new Error('Network info not avalible.');\n        }\n        const defaultHost = `${PublicNodeProvider.networkHostMap[network]}.publicnode.com`;\n        const host = isValid(_host) ? _host : defaultHost;\n        if (websocketExclusions.includes(network) && transport === Transport.WebSocket) {\n            return `${transport}://${host}/websocket`;\n        }\n        return `${transport}://${host}`;\n    }\n}\nPublicNodeProvider.networkHostMap = {\n    [Network.POLYGON_AMOY]: 'polygon-amoy-bor-rpc',\n    [Network.DYMENSION_MAINNET]: 'dymension-evm-rpc',\n    [Network.DYMENSION_TESTNET]: 'dymension-testnet-evm-rpc',\n    [Network.BLAST_MAINNET]: 'blast-rpc',\n    [Network.GNOSIS_MAINNET]: 'gnosis-rpc',\n    [Network.PULSECHAIN_MAINNET]: 'pulsechain-rpc',\n    [Network.PULSECHAIN_TESTNET]: 'pulsechain-testnet-rpc',\n    [Network.KAVA_MAINNET]: 'kava-evm-rpc',\n    [Network.CRONOS_MAINNET]: 'cronos-evm-rpc',\n    [Network.MANTLE_MAINNET]: 'mantle-rpc',\n    [Network.TAIKO_MAINNET]: 'taiko-rpc',\n    [Network.TAIKO_HEKLA]: 'taiko-hekla-rpc',\n    [Network.LINEA_MAINNET]: 'linea-rpc',\n    [Network.LINEA_SEPOLIA]: 'linea-sepolia-rpc',\n    [Network.SCROLL_MAINNET]: 'scroll-rpc',\n    [Network.SCROLL_SEPOLIA]: 'scroll-sepolia-rpc',\n    [Network.SYSCOIN_MAINNET]: 'syscoin-evm-rpc',\n    [Network.SYSCOIN_TANENBAUM]: 'syscoin-tanenbaum-evm-rpc',\n    [Network.HAQQ_MAINNET]: 'haqq-evm-rpc',\n    [Network.EVMOS_MAINNET]: 'evmos-evm-rpc',\n    [Network.EVMOS_TESTNET]: 'evmos-testnet-evm-rpc',\n    [Network.BERACHAIN_TESTNET]: 'berachain-testnet-evm-rpc',\n    [Network.ETH_MAINNET]: 'ethereum-rpc',\n    [Network.ETH_SEPOLIA]: 'ethereum-sepolia-rpc',\n    [Network.ETH_HOLESKY]: 'ethereum-holesky-rpc',\n    [Network.BSC_MAINNET]: 'bsc-rpc',\n    [Network.BSC_TESTNET]: 'bsc-testnet-rpc',\n    [Network.POLYGON_MAINNET]: 'polygon-bor-rpc',\n    [Network.BASE_MAINNET]: 'base-rpc',\n    [Network.BASE_SEPOLIA]: 'base-sepolia-rpc',\n    [Network.ARBITRUM_ONE]: 'arbitrum-one-rpc',\n    [Network.ARBITRUM_NOVA]: 'arbitrum-nova-rpc',\n    [Network.ARBITRUM_SEPOLIA]: 'arbitrum-sepolia-rpc',\n    [Network.AVALANCHE_C_MAINNET]: 'avalanche-c-chain-rpc',\n    [Network.AVALANCHE_P_MAINNET]: 'avalanche-p-chain-rpc',\n    [Network.AVALANCHE_X_MAINNET]: 'avalanche-x-chain-rpc',\n    [Network.AVALANCHE_FUJI_C]: 'avalanche-fuji-c-chain-rpc',\n    [Network.AVALANCHE_FUJI_P]: 'avalanche-fuji-p-chain-rpc',\n    [Network.AVALANCHE_FUJI_X]: 'avalanche-fuji-x-chain-rpc',\n    [Network.OPTIMISM_MAINNET]: 'optimism-rpc',\n    [Network.OPTIMISM_SEPOLIA]: 'optimism-sepolia-rpc',\n    [Network.FANTOM_MAINNET]: 'fantom-rpc',\n    [Network.FANTOM_TESTNET]: 'fantom-testnet-rpc',\n    [Network.OPBNB_MAINNET]: 'opbnb-rpc',\n    [Network.OPBNB_TESTNET]: 'opbnb-testnet-rpc',\n    [Network.GNOSIS_CHIADO]: 'gnosis-chiado-rpc',\n    [Network.CHILIZ_MAINNET]: 'chiliz-rpc',\n    [Network.CHILIZ_SPICY]: 'chiliz-spicy-rpc',\n    [Network.MOONBEAM_MAINNET]: 'moonbeam-rpc',\n    [Network.BAHAMUT_MAINNET]: 'bahamut-rpc',\n    [Network.TRON_MAINNET]: 'tron-evm-rpc',\n    [Network.MOONRIVER_MAINNET]: 'moonriver-rpc',\n};\n//# sourceMappingURL=web3_provider_publicnode.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { QuickNodeProvider } from './web3_provider_quicknode.js';\nexport * from './types.js';\nexport * from './web3_provider_quicknode.js';\nexport * from './web3_provider_publicnode.js';\nexport * from './web3_provider.js';\nexport * from './errors.js';\n// default providers\nexport const mainnet = new QuickNodeProvider();\n//# sourceMappingURL=index.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { decodeLog, decodeParameter, decodeParameters, encodeEventSignature, encodeFunctionCall, encodeFunctionSignature, encodeParameter, encodeParameters, } from 'web3-eth-abi';\n/**\n * The object for `web3.abi`\n */\nexport default {\n    encodeEventSignature,\n    encodeFunctionCall,\n    encodeFunctionSignature,\n    encodeParameter,\n    encodeParameters,\n    decodeParameter,\n    decodeParameters,\n    decodeLog,\n};\n//# sourceMappingURL=abi.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ETH_DATA_FORMAT } from 'web3-types';\nimport { format } from 'web3-utils';\nimport { prepareTransactionForSigning } from 'web3-eth';\nimport { create, decrypt, encrypt, hashMessage, privateKeyToAccount, recover, recoverTransaction, signTransaction, sign, Wallet, privateKeyToAddress, parseAndValidatePrivateKey, privateKeyToPublicKey, } from 'web3-eth-accounts';\n/**\n * Initialize the accounts module for the given context.\n *\n * To avoid multiple package dependencies for `web3-eth-accounts` we are creating\n * this function in `web3` package. In future the actual `web3-eth-accounts` package\n * should be converted to context aware.\n */\nexport const initAccountsForContext = (context) => {\n    const signTransactionWithContext = (transaction, privateKey) => __awaiter(void 0, void 0, void 0, function* () {\n        const tx = yield prepareTransactionForSigning(transaction, context);\n        const privateKeyBytes = format({ format: 'bytes' }, privateKey, ETH_DATA_FORMAT);\n        return signTransaction(tx, privateKeyBytes);\n    });\n    const privateKeyToAccountWithContext = (privateKey) => {\n        const account = privateKeyToAccount(privateKey);\n        return Object.assign(Object.assign({}, account), { signTransaction: (transaction) => __awaiter(void 0, void 0, void 0, function* () { return signTransactionWithContext(transaction, account.privateKey); }) });\n    };\n    const decryptWithContext = (keystore, password, options) => __awaiter(void 0, void 0, void 0, function* () {\n        var _a;\n        const account = yield decrypt(keystore, password, (_a = options === null || options === void 0 ? void 0 : options.nonStrict) !== null && _a !== void 0 ? _a : true);\n        return Object.assign(Object.assign({}, account), { signTransaction: (transaction) => __awaiter(void 0, void 0, void 0, function* () { return signTransactionWithContext(transaction, account.privateKey); }) });\n    });\n    const createWithContext = () => {\n        const account = create();\n        return Object.assign(Object.assign({}, account), { signTransaction: (transaction) => __awaiter(void 0, void 0, void 0, function* () { return signTransactionWithContext(transaction, account.privateKey); }) });\n    };\n    const wallet = new Wallet({\n        create: createWithContext,\n        privateKeyToAccount: privateKeyToAccountWithContext,\n        decrypt: decryptWithContext,\n    });\n    return {\n        signTransaction: signTransactionWithContext,\n        create: createWithContext,\n        privateKeyToAccount: privateKeyToAccountWithContext,\n        decrypt: decryptWithContext,\n        recoverTransaction,\n        hashMessage,\n        sign,\n        recover,\n        encrypt,\n        wallet,\n        privateKeyToAddress,\n        parseAndValidatePrivateKey,\n        privateKeyToPublicKey,\n    };\n};\n//# sourceMappingURL=accounts.js.map","/* eslint-disable header/header */ export const Web3PkgInfo = { version: '4.16.0' };\n//# sourceMappingURL=version.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport var Eip6963EventName;\n(function (Eip6963EventName) {\n    Eip6963EventName[\"eip6963announceProvider\"] = \"eip6963:announceProvider\";\n    Eip6963EventName[\"eip6963requestProvider\"] = \"eip6963:requestProvider\";\n})(Eip6963EventName || (Eip6963EventName = {}));\nexport const eip6963ProvidersMap = new Map();\nexport const web3ProvidersMapUpdated = 'web3:providersMapUpdated';\nexport const requestEIP6963Providers = () => __awaiter(void 0, void 0, void 0, function* () {\n    return new Promise((resolve, reject) => {\n        if (typeof window === 'undefined') {\n            reject(new Error('window object not available, EIP-6963 is intended to be used within a browser'));\n        }\n        window.addEventListener(Eip6963EventName.eip6963announceProvider, ((event) => {\n            eip6963ProvidersMap.set(event.detail.info.uuid, event.detail);\n            const newEvent = new CustomEvent(web3ProvidersMapUpdated, { detail: eip6963ProvidersMap });\n            window.dispatchEvent(newEvent);\n            resolve(eip6963ProvidersMap);\n        }));\n        window.dispatchEvent(new Event(Eip6963EventName.eip6963requestProvider));\n    });\n});\nexport const onNewProviderDiscovered = (callback) => {\n    if (typeof window === 'undefined') {\n        throw new Error('window object not available, EIP-6963 is intended to be used within a browser');\n    }\n    window.addEventListener(web3ProvidersMapUpdated, callback);\n};\n//# sourceMappingURL=web3_eip6963.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line max-classes-per-file\nimport { Web3Context, isSupportedProvider, } from 'web3-core';\nimport { Web3Eth, registeredSubscriptions } from 'web3-eth';\nimport Contract from 'web3-eth-contract';\nimport { ENS, registryAddresses } from 'web3-eth-ens';\nimport { Iban } from 'web3-eth-iban';\nimport { Personal } from 'web3-eth-personal';\nimport { Net } from 'web3-net';\nimport * as utils from 'web3-utils';\nimport { isNullish, isDataFormat, isContractInitOptions } from 'web3-utils';\nimport { mainnet } from 'web3-rpc-providers';\nimport { InvalidMethodParamsError } from 'web3-errors';\nimport abi from './abi.js';\nimport { initAccountsForContext } from './accounts.js';\nimport { Web3PkgInfo } from './version.js';\nimport { onNewProviderDiscovered, requestEIP6963Providers } from './web3_eip6963.js';\nexport class Web3 extends Web3Context {\n    constructor(providerOrContext = mainnet) {\n        var _a;\n        if (isNullish(providerOrContext) ||\n            (typeof providerOrContext === 'string' && providerOrContext.trim() === '') ||\n            (typeof providerOrContext !== 'string' &&\n                !isSupportedProvider(providerOrContext) &&\n                !providerOrContext.provider)) {\n            console.warn('NOTE: web3.js is running without provider. You need to pass a provider in order to interact with the network!');\n        }\n        let contextInitOptions = {};\n        if (typeof providerOrContext === 'string' ||\n            isSupportedProvider(providerOrContext)) {\n            contextInitOptions.provider = providerOrContext;\n        }\n        else if (providerOrContext) {\n            contextInitOptions = providerOrContext;\n        }\n        else {\n            contextInitOptions = {};\n        }\n        contextInitOptions.registeredSubscriptions = Object.assign(Object.assign({}, registeredSubscriptions), ((_a = contextInitOptions.registeredSubscriptions) !== null && _a !== void 0 ? _a : {}));\n        super(contextInitOptions);\n        const accounts = initAccountsForContext(this);\n        // Init protected properties\n        this._wallet = accounts.wallet;\n        this._accountProvider = accounts;\n        this.utils = utils;\n        // Have to use local alias to initiate contract context\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const self = this;\n        class ContractBuilder extends Contract {\n            constructor(jsonInterface, addressOrOptionsOrContext, optionsOrContextOrReturnFormat, contextOrReturnFormat, returnFormat) {\n                if (isContractInitOptions(addressOrOptionsOrContext) &&\n                    isContractInitOptions(optionsOrContextOrReturnFormat)) {\n                    throw new InvalidMethodParamsError('Should not provide options at both 2nd and 3rd parameters');\n                }\n                let address;\n                let options = {};\n                let context;\n                let dataFormat;\n                // add validation so its not a breaking change\n                if (!isNullish(addressOrOptionsOrContext) &&\n                    typeof addressOrOptionsOrContext !== 'object' &&\n                    typeof addressOrOptionsOrContext !== 'string') {\n                    throw new InvalidMethodParamsError();\n                }\n                if (typeof addressOrOptionsOrContext === 'string') {\n                    address = addressOrOptionsOrContext;\n                }\n                if (isContractInitOptions(addressOrOptionsOrContext)) {\n                    options = addressOrOptionsOrContext;\n                }\n                else if (isContractInitOptions(optionsOrContextOrReturnFormat)) {\n                    options = optionsOrContextOrReturnFormat;\n                }\n                else {\n                    options = {};\n                }\n                if (addressOrOptionsOrContext instanceof Web3Context) {\n                    context = addressOrOptionsOrContext;\n                }\n                else if (optionsOrContextOrReturnFormat instanceof Web3Context) {\n                    context = optionsOrContextOrReturnFormat;\n                }\n                else if (contextOrReturnFormat instanceof Web3Context) {\n                    context = contextOrReturnFormat;\n                }\n                else {\n                    context = self.getContextObject();\n                }\n                if (returnFormat) {\n                    dataFormat = returnFormat;\n                }\n                else if (isDataFormat(optionsOrContextOrReturnFormat)) {\n                    dataFormat = optionsOrContextOrReturnFormat;\n                }\n                else if (isDataFormat(contextOrReturnFormat)) {\n                    dataFormat = contextOrReturnFormat;\n                }\n                super(jsonInterface, address, options, context, dataFormat);\n                super.subscribeToContextEvents(self);\n                // eslint-disable-next-line no-use-before-define\n                if (!isNullish(eth)) {\n                    // eslint-disable-next-line no-use-before-define\n                    const TxMiddleware = eth.getTransactionMiddleware();\n                    if (!isNullish(TxMiddleware)) {\n                        super.setTransactionMiddleware(TxMiddleware);\n                    }\n                }\n            }\n        }\n        const eth = self.use(Web3Eth);\n        // Eth Module\n        this.eth = Object.assign(eth, {\n            // ENS module\n            ens: self.use(ENS, registryAddresses.main), // registry address defaults to main network\n            // Iban helpers\n            Iban,\n            net: self.use(Net),\n            personal: self.use(Personal),\n            // Contract helper and module\n            Contract: ContractBuilder,\n            // ABI Helpers\n            abi,\n            // Accounts helper\n            accounts,\n        });\n    }\n}\nWeb3.version = Web3PkgInfo.version;\nWeb3.utils = utils;\nWeb3.requestEIP6963Providers = requestEIP6963Providers;\nWeb3.onNewProviderDiscovered = onNewProviderDiscovered;\nWeb3.modules = {\n    Web3Eth,\n    Iban,\n    Net,\n    ENS,\n    Personal,\n};\nexport default Web3;\n//# sourceMappingURL=web3.js.map","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * This is the main (or 'umbrella') class of the web3.js library.\n *\n * ```ts\n * import Web3 from 'web3';\n *\n * > Web3.utils\n * > Web3.version\n * > Web3.givenProvider\n * > Web3.providers\n * > Web3.modules\n * ```\n *\n * # Web3.modules\n *\n * ```ts\n * Web3.modules\n * ```\n *\n * Will return an object with the classes of all major sub modules, to be able to instantiate them manually.\n *\n * #### Returns\n *\n *  `Object` A list of module constructors:\n *\n *\n *  + `Eth` - `Constructor`: The Eth module for interacting with the Ethereum network\n *\n *\n *  + `Net` - `Constructor`: The Net module for interacting with network properties.\n *\n *\n *  + `Personal` - `constructor`: The Personal module for interacting with the Ethereum accounts (web3.eth.personal).\n *\n * #### Example\n *\n * ```ts\n * Web3.modules\n * > {\n *   \tEth: Eth(provider),\n *   \tNet: Net(provider),\n *   \tPersonal: Personal(provider),\n *   }\n * ```\n *\n * See details: {@link Web3.modules}\n *\n * # Web3 Instance\n *\n * The Web3 class is an umbrella package to house all Ethereum related modules.\n *\n * ```ts\n * import Web3 from 'web3';\n *\n * // \"Web3.givenProvider\" will be set if in an Ethereum supported browser.\n * const web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546');\n *\n * > web3.eth\n * > web3.utils\n * > web3.version\n * ```\n *\n * ### version\n *\n * Contains the current package version of the web3.js library.\n *\n * #### Returns\n * //todo enable when functionality added\n * // @see Web3.version\n *\n * ### utils\n *\n * Static accessible property of the Web3 class and property of the instance as well.\n *\n * ```ts\n * Web3.utils\n * web3.utils\n * ```\n *\n * Utility functions are also exposed on the `Web3` class object diretly.\n *\n * //todo enable when implemented\n * //See details: {@link Web3.utils}\n *\n * ### setProvider\n *\n * ```ts\n * web3.setProvider(myProvider)\n * web3.eth.setProvider(myProvider)\n * ...\n * ```\n *\n * Will change the provider for its module.\n *\n * **_NOTE:_** When called on the umbrella package web3 it will also set the provider for all sub modules web3.eth  etc.\n *\n * #### Parameters\n *  `Object`  - `myProvider`: a valid provider.\n *\n * #### Returns\n * `Boolean`\n *\n * See details: {@link Web3.setProvider}\n *\n * #### Example: Local Geth Node\n * ```ts\n * import Web3 from \"web3\";\n * let web3: Web3 = new Web3('http://localhost:8545');\n * // or\n * let web3: Web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n *\n * // change provider\n * web3.setProvider('ws://localhost:8546');\n * // or\n * web3.setProvider(new Web3.providers.WebsocketProvider('ws://localhost:8546'));\n *\n * //todo add IPC provider\n * ```\n *\n * #### Example: Remote Geth Node\n *\n * ```ts\n * // Using a remote node provider, like Alchemy (https://www.alchemyapi.io/supernode), is simple.\n * import Web3 from \"web3\";\n * let web3: Web3 = new Web3(\"https://eth-mainnet.alchemyapi.io/v2/your-api-key\");\n * ```\n *\n * ### providers\n *\n * ```ts\n * web3.providers\n * web3.eth.providers\n * ```\n * Contains the current available providers.\n *\n * #### Returns\n *  `Object` with the following providers:\n *\n *\n *  + `Object` - `HttpProvider`: HTTP provider, does not support subscriptions.\n *\n *\n *  + `Object` - `WebSocketProvider`: The WebSocket provider is the standard for usage in legacy browsers.\n *\n *\n *  + `Object` - `IpcProvider`: The IPC provider is used in node.js dapps when running a local node. Gives the most secure connection.\n *\n *\n * #### Example\n * ```ts\n * import { Web3 } from 'web3';\n * // use the given Provider or instantiate a new websocket provider\n * let web3 = new Web3(Web3.givenProvider || 'ws://remotenode.com:8546');\n * // or\n * let web3 = new Web3(Web3.givenProvider || new Web3.providers.WebsocketProvider('ws://remotenode.com:8546'));\n *\n * // Using the IPC provider in node.js\n * import { Web3 } from 'web3';\n * import { IpcProvider } from 'web3-providers-ipc';\n * var web3 = new Web3(new IpcProvider('/Users/myuser/Library/Ethereum/geth.ipc')); // mac os path\n * // on windows the path is: \"\\\\\\\\.\\\\pipe\\\\geth.ipc\"\n * // on linux the path is: \"/users/myuser/.ethereum/geth.ipc\"\n * ```\n * #### Configuration\n *\n * ```ts\n *\n * //===\n * //Http\n * //===\n *\n * import Web3HttpProvider, { HttpProviderOptions } from \"web3-providers-http\";\n *\n * let options: HttpProviderOptions = {\n * \tproviderOptions: {\n * \t\tkeepalive: true,\n * \t\tcredentials: \"omit\",\n * \t\theaders: {\n * \t\t\t\"Access-Control-Allow-Origin\": \"*\",\n * \t\t},\n * \t},\n * };\n *\n *\n * var provider = new Web3HttpProvider(\"http://localhost:8545\", options);\n * web3.setProvider(provider);\n *\n * //===\n * //WebSockets\n * //===\n * import Web3WsProvider, {\n * \tClientOptions,\n * \tClientRequestArgs,\n * \tReconnectOptions,\n * } from \"web3-providers-ws\";\n *\n *\n * let clientOptions: ClientOptions = {\n * \t// Useful for credentialed urls, e.g: ws://username:password@localhost:8546\n * \theaders: {\n * \t\tauthorization: \"Basic username:password\",\n * \t},\n * \tmaxPayload: 100000000,\n * };\n *\n * // Enable auto reconnection\n * let reconnectOptions: ReconnectOptions = {\n * \tautoReconnect: true,\n * \tdelay: 5000, // ms\n * \tmaxAttempts: 5,\n * };\n *\n * //clientOptions and reconnectOptions are optional\n * //clientOptions: ClientOptions | ClientRequestArgs\n * let ws = new Web3WsProvider(\n * \"ws://localhost:8546\",\n * clientOptions,\n * reconnectOptions\n * );\n * web3.setProvider(ws);\n *\n * ```\n * More information for the Http and Websocket provider modules can be found here:\n *\n *\n * - {@link HttpProvider}\n *\n *\n * - {@link WebSocketProvider}\n *\n * See details: {@link Web3.providers}\n *\n *\n * ### givenProvider\n *\n * ```ts\n * web3.givenProvider\n * web3.eth.givenProvider\n * ...\n * ```\n * When using web3.js in an Ethereum compatible browser, it will set with the current native provider by that browser.\n * Will return the given provider by the (browser) environment, otherwise `undefined`.\n *\n * #### Returns\n * `Object` -  The given provider set or `undefined`.\n *\n * See details: {@link Web3.givenProvider}\n *\n * ### currentProvider\n *\n * ```ts\n * web3.currentProvider\n * web3.eth.currentProvider\n * ...\n * ```\n * Will return the current provider, otherwise `undefined`.\n *\n * #### Returns\n * `Object`: The current provider, otherwise `undefined`.\n *\n * See details: {@link Web3.currentProvider}\n *\n * ### BatchRequest\n *\n * ```ts\n * new web3.BatchRequest()\n * new web3.BatchRequest()\n * ...\n * ```\n * Class to create and execute batch requests.\n *\n *  #### Parameters\n *  none\n *\n * #### Returns\n * `Object`: With the following methods:\n *\n * + `add(request)`: To add a request object to the batch call.\n *\n * + `execute()` : To execute the batch request.\n *\n * #### Example\n * ```ts\n * let request1: JsonRpcOptionalRequest = {\n * \tid: 10,\n * \tmethod: 'eth_getBalance',\n * \tparams: [\"0xdc6bad79dab7ea733098f66f6c6f9dd008da3258\", 'latest'],\n * };\n * let request2: JsonRpcOptionalRequest = {\n * \tid: 11,\n * \tmethod: 'eth_getBalance',\n * \tparams: [\"0x962f9a9c2a6c092474d24def35eccb3d9363265e\", 'latest'],\n * };\n *\n * const batch = new web3.BatchRequest();\n *\n *  batch.add(request1);\n *  batch.add(request2);\n * // add returns a deferred promise which can be used to run specific code after completion of each respective request.\n * //const request2Promise = batch.add(request2);\n *\n * const response = await batch.execute();\n * ```\n * See details: {@link Web3.BatchRequest}\n */\n/**\n * This comment _supports3_ [Markdown](https://marked.js.org/)\n */\nimport Web3 from './web3.js';\nexport * from './types.js';\nexport * from './web3_eip6963.js';\nexport default Web3;\n/**\n * Named exports for all objects which are the default-exported-object in their packages\n */\nexport { Web3 };\nexport { Web3Context, Web3PluginBase, Web3EthPluginBase, Web3PromiEvent } from 'web3-core';\nexport { Web3Eth } from 'web3-eth';\nexport { Contract } from 'web3-eth-contract';\nexport { Iban } from 'web3-eth-iban';\nexport { Personal } from 'web3-eth-personal';\nexport { Net } from 'web3-net';\nexport { HttpProvider } from 'web3-providers-http';\nexport { WebSocketProvider } from 'web3-providers-ws';\nexport { Web3Validator } from 'web3-validator';\n/**\n * Export all packages grouped by name spaces\n */\nexport * as core from 'web3-core';\nexport * as errors from 'web3-errors';\nexport * as eth from './eth.exports.js';\nexport * as net from 'web3-net';\nexport * as providers from './providers.exports.js';\nexport * as rpcMethods from 'web3-rpc-methods';\nexport * as types from 'web3-types';\nexport * as utils from 'web3-utils';\nexport * as validator from 'web3-validator';\n/**\n * Export all types from `web3-types` without a namespace (in addition to being available at `types` namespace).\n * To enable the user to write: `function something(): Web3Api` without the need for `types.Web3Api`.\n * And the same for `web3-errors`. Because this package contains error classes and constants.\n */\nexport * from 'web3-errors';\nexport * from 'web3-types';\n//# sourceMappingURL=index.js.map","/**\n * 以太坊钱包连接状态\n */\nexport enum EthWalletStatus {\n  DISCONNECTED = 'disconnected',\n  CONNECTING = 'connecting',\n  CONNECTED = 'connected',\n  ERROR = 'error'\n}\n\n/**\n * 以太坊钱包账户信息\n */\nexport interface EthWalletAccount {\n  /** 钱包地址 */\n  address: string;\n  /** 钱包公钥（以太坊中较少使用） */\n  publicKey?: string;\n  /** 以太坊链ID */\n  chainId?: string | number;\n}\n\n/**\n * 以太坊交易参数接口\n */\nexport interface EthTransactionParams {\n  /** 接收地址 */\n  to: string;\n  /** 发送金额 */\n  amount: string;\n  /** 交易数据 */\n  data?: string;\n  /** Gas 限制 */\n  gasLimit?: string;\n  /** Gas 价格 */\n  gasPrice?: string;\n  /** EIP-1559 最大费用 */\n  maxFeePerGas?: string;\n  /** EIP-1559 最大优先费用 */\n  maxPriorityFeePerGas?: string;\n  /** Nonce */\n  nonce?: number;\n  /** 自定义参数 */\n  [key: string]: unknown;\n}\n\n/**\n * 以太坊钱包状态变化监听器\n */\nexport type EthWalletStatusChangeHandler = (status: EthWalletStatus, account?: EthWalletAccount | null) => void;\n","import Web3, { type Contract, type AbiItem, type EIP1193Provider } from 'web3';\nimport { EthWalletStatus as WalletStatus, type EthWalletAccount as WalletAccount } from './types';\n\ndeclare global {\n  interface Window {\n    ethereum?: EIP1193Provider<unknown>;\n  }\n}\n\nexport class Wallet {\n  /** web3 实例 */\n  private web3: Web3 | null = null;\n  /** 单例实例 */\n  private static instance: Wallet | null = null;\n  /** 以太坊 provider */\n  private provider?: EIP1193Provider<unknown>;\n  /** 钱包连接状态 */\n  private _status: WalletStatus = WalletStatus.DISCONNECTED;\n\n  /** 当前连接的账户信息 */\n  private _account: WalletAccount | null = null;\n\n  /** 状态变化监听器集合 */\n  private statusChangeHandlers: Set<(status: WalletStatus, account?: WalletAccount | null) => void> = new Set();\n\n  /** 已初始化的合约实例缓存 */\n  private contractInstances: Map<string, Contract<AbiItem[]>> = new Map();\n\n  /**\n   * 构造函数\n   * @param options 以太坊钱包配置选项\n   */\n  constructor() {\n    if (typeof window !== 'undefined' && window.ethereum) {\n      this.provider = window.ethereum;\n      this.web3 = new Web3(this.provider);\n\n      this.initStatus();\n      this.bindProviderEvents();\n    }\n  }\n  /**\n   * 获取单例实例\n   */\n  public static getInstance(): Wallet {\n    if (!Wallet.instance) {\n      Wallet.instance = new Wallet();\n    }\n    return Wallet.instance;\n  }\n  private handleAccountsChanged = (accounts: string[]) => {\n    this.handleProviderStatusChange(accounts);\n  };\n\n  private handleDisconnect = () => {\n    this.handleProviderStatusChange([]);\n  };\n\n  private handleChainChanged = () => {\n    // 当网络变化时，重新初始化状态\n    this.initStatus();\n  };\n\n  /**\n   * 绑定 provider 的事件\n   */\n  private bindProviderEvents() {\n    this.provider?.on?.('accountsChanged', this.handleAccountsChanged);\n    this.provider?.on?.('disconnect', this.handleDisconnect);\n    this.provider?.on?.('chainChanged', this.handleChainChanged);\n  }\n\n  /**\n   * 移除 provider 的事件\n   */\n  private unbindProviderEvents() {\n    this.provider?.removeListener?.('accountsChanged', this.handleAccountsChanged);\n    this.provider?.removeListener?.('disconnect', this.handleDisconnect);\n    this.provider?.removeListener?.('chainChanged', this.handleChainChanged);\n  }\n  /**\n   * 初始化钱包连接状态\n   */\n  private async initStatus() {\n    try {\n      const explicitlyConnected = localStorage.getItem('ethWalletExplicitlyConnected') === 'true';\n      const accounts = (await this.provider?.request({ method: 'eth_accounts' })) as string[] | undefined;\n\n      if (explicitlyConnected && accounts && accounts.length > 0) {\n        this.handleProviderStatusChange(accounts);\n      } else {\n        this.updateStatus(WalletStatus.DISCONNECTED, null);\n      }\n    } catch {\n      this.updateStatus(WalletStatus.DISCONNECTED, null);\n    }\n  }\n\n  /**\n   * 处理 provider 状态变化\n   * @param accounts 账户列表\n   */\n  private handleProviderStatusChange(accounts?: string[]) {\n    if (accounts && accounts.length > 0) {\n      const account: WalletAccount = {\n        address: accounts[0] as string\n      };\n      this.updateStatus(WalletStatus.CONNECTED, account);\n    } else {\n      this.updateStatus(WalletStatus.DISCONNECTED, null);\n    }\n  }\n\n  /**\n   * 更新钱包状态，通知监听器\n   * @param status 钱包状态\n   * @param account 账户信息\n   */\n  private updateStatus(status: WalletStatus, account: WalletAccount | null) {\n    this._status = status;\n    this._account = account;\n\n    // 本地缓存保存当前状态和账户地址\n    if (status === WalletStatus.CONNECTED && this._account) {\n      localStorage.setItem('ethWalletStatus', 'connected');\n      localStorage.setItem('ethWalletAccount', this._account.address);\n    } else {\n      localStorage.removeItem('ethWalletStatus');\n      localStorage.removeItem('ethWalletAccount');\n    }\n\n    this.notifyStatusChange(status, account);\n  }\n\n  /**\n   * 通知所有状态变化监听器\n   * @param status 钱包状态\n   * @param account 账户信息\n   */\n  private notifyStatusChange(status: WalletStatus, account: WalletAccount | null) {\n    this.statusChangeHandlers.forEach(handler => {\n      try {\n        handler(status, account);\n      } catch (error) {\n        console.warn('钱包状态变化监听器执行出错:', error);\n      }\n    });\n  }\n\n  /**\n   * 获取钱包连接状态\n   * @returns 钱包状态\n   */\n  get status(): WalletStatus {\n    return this._status;\n  }\n\n  /**\n   * 获取当前连接的账户信息\n   * @returns 账户信息\n   */\n  get account(): WalletAccount | null {\n    return this._account;\n  }\n\n  /**\n   * 获取是否已连接\n   * @returns 是否已连接\n   */\n  get connected(): boolean {\n    return this._status === WalletStatus.CONNECTED && this._account !== null;\n  }\n\n  /**\n   * 获取 MetaMask 深度链接\n   * @returns MetaMask 深度链接\n   */\n  private getMetaMaskDeepLink(): string {\n    if (typeof window === 'undefined') {\n      throw new Error('Not running in a browser environment');\n    }\n    const host = window.location.host;\n    // 这里只用 host，避免路径问题\n    return `https://metamask.app.link/dapp/${host}`;\n  }\n\n  /**\n   * 添加状态变化监听器\n   * @param handler 状态变化监听器\n   */\n  public addStatusChangeListener(handler: (status: WalletStatus, account?: WalletAccount | null) => void) {\n    this.statusChangeHandlers.add(handler);\n  }\n\n  /**\n   * 移除状态变化监听器\n   * @param handler 状态变化监听器\n   */\n  public removeStatusChangeListener(handler: (status: WalletStatus, account?: WalletAccount | null) => void) {\n    this.statusChangeHandlers.delete(handler);\n  }\n\n  /**\n   * 连接钱包\n   * @param deeplinkUrl 可选，移动端唤起钱包的deeplink，不传则自动构造\n   */\n  public async connect(deeplinkUrl?: string): Promise<void> {\n    if (typeof window === 'undefined') {\n      throw new Error('Not running in a browser environment');\n    }\n    if (window.ethereum) {\n      try {\n        // 先请求权限，这会强制弹出 MetaMask\n        await window.ethereum.request({\n          method: 'wallet_requestPermissions',\n          params: [{ eth_accounts: {} }]\n        });\n        const response = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const accounts = response as unknown as string[];\n        localStorage.setItem('ethWalletExplicitlyConnected', 'true');\n        this.handleProviderStatusChange(accounts);\n      } catch (error) {\n        console.error('连接钱包失败或用户拒绝:', error);\n        throw error;\n      }\n    } else {\n      const url = deeplinkUrl ?? this.getMetaMaskDeepLink();\n      window.location.href = url;\n      // 用户会被跳转去钱包APP内置浏览器打开dapp，后续用户操作\n    }\n  }\n\n  /**\n   * 断开钱包连接\n   */\n  public async disconnect(): Promise<void> {\n    try {\n      // 清理本地状态\n      this._account = null;\n      this.updateStatus(WalletStatus.DISCONNECTED, null);\n\n      // 移除事件监听\n      this.unbindProviderEvents();\n\n      // 清理本地存储\n      localStorage.removeItem('ethWalletStatus');\n      localStorage.removeItem('ethWalletAccount');\n    } catch (error) {\n      console.warn('断开钱包连接时出错:', error);\n    }\n  }\n\n  /**\n   * 销毁 Wallet 单例实例\n   */\n  public static destroy(): void {\n    if (Wallet.instance) {\n      const instance = Wallet.instance;\n      instance.disconnect();\n      instance.statusChangeHandlers.clear();\n      instance.provider = undefined;\n      instance.web3 = null;\n      Wallet.instance = null;\n    }\n  }\n\n  /**\n   * 发送最基础的 ETH 转账交易\n   * @param to 接收地址\n   * @param amount 转账金额\n   * @param unit 单位（可选，默认为 'ether'，也可为 'wei'）\n   * @returns 交易哈希\n   */\n  public async sendTransaction(to: string, amount: string | number, unit: 'ether' | 'wei' = 'ether'): Promise<string> {\n    if (!this.connected || !this._account) {\n      throw new Error('钱包未连接');\n    }\n    if (!this.web3) {\n      throw new Error('web3 实例不存在');\n    }\n    if (!this.provider) {\n      throw new Error('provider 不存在');\n    }\n\n    const from = this._account.address;\n    const valueInWei = this.web3.utils.toWei(amount.toString(), unit);\n\n    try {\n      const txParams = {\n        from,\n        to,\n        value: valueInWei\n      };\n\n      const response = (await this.provider.request({\n        method: 'eth_sendTransaction',\n        params: [txParams]\n      })) as { result: string };\n\n      if (!response.result || typeof response.result !== 'string') {\n        throw new Error('交易哈希格式错误');\n      }\n\n      return response.result;\n    } catch (error) {\n      console.error('发送 ETH 交易失败:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 初始化智能合约\n   * @param contractABI 合约 ABI\n   * @param contractAddress 合约地址\n   * @returns 合约实例\n   */\n  public initContract(contractABI: AbiItem[], contractAddress: string): Contract<AbiItem[]> {\n    if (!this.web3) {\n      throw new Error('web3 实例不存在');\n    }\n\n    // 检查是否已经初始化过该合约\n    const cacheKey = `${contractAddress.toLowerCase()}`;\n    const cachedContract = this.contractInstances.get(cacheKey);\n    if (cachedContract) {\n      return cachedContract;\n    }\n\n    try {\n      // 创建新的合约实例\n      const contract = new this.web3.eth.Contract(contractABI, contractAddress);\n\n      // 缓存合约实例\n      this.contractInstances.set(cacheKey, contract);\n\n      return contract;\n    } catch (error) {\n      console.error('初始化智能合约失败:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 获取已初始化的合约实例\n   * @param contractAddress 合约地址\n   * @returns 合约实例，如果未初始化则返回 undefined\n   */\n  public getContract(contractAddress: string): Contract<AbiItem[]> | undefined {\n    const cacheKey = `${contractAddress.toLowerCase()}`;\n    return this.contractInstances.get(cacheKey);\n  }\n\n  /**\n   * 清除合约实例缓存\n   * @param contractAddress 可选的合约地址，如果不提供则清除所有缓存\n   */\n  public clearContractCache(contractAddress?: string): void {\n    if (contractAddress) {\n      const cacheKey = `${contractAddress.toLowerCase()}`;\n      this.contractInstances.delete(cacheKey);\n    } else {\n      this.contractInstances.clear();\n    }\n  }\n\n  /**\n   * 根据 chainId 获取网络名称\n   */\n  private getChainName(chainId: string): string | undefined {\n    const chainIdMap: Record<string, string> = {\n      '0x1': 'Ethereum Mainnet',\n      '0x5': 'Goerli Testnet',\n      '0xaa36a7': 'Sepolia Testnet',\n      '0x89': 'Polygon Mainnet',\n      '0x13881': 'Mumbai Testnet',\n      '0xa': 'Optimism',\n      '0x420': 'Optimism Goerli',\n      '0xa4b1': 'Arbitrum One',\n      '0x66eed': 'Arbitrum Goerli'\n    };\n    return chainIdMap[chainId.toLowerCase()];\n  }\n\n  /**\n   * 将 chainId 统一转换为十六进制格式\n   * @param chainId 链 ID（可以是数字或十六进制字符串）\n   * @returns 十六进制格式的 chainId\n   */\n  private formatChainId(chainId: string | number): string {\n    // 检查 chainId 是否为 null 或 undefined\n    if (chainId == null) {\n      throw new Error('chainId 不能为空');\n    }\n\n    // 如果是对象类型，尝试获取其 chainId 属性\n    if (typeof chainId === 'object') {\n      if ('chainId' in chainId) {\n        chainId = (chainId as Record<string, unknown>).chainId as string | number;\n      } else {\n        throw new Error('无效的 chainId 格式');\n      }\n    }\n\n    // 处理数字类型\n    if (typeof chainId === 'number') {\n      return `0x${chainId.toString(16)}`;\n    }\n\n    // 处理字符串类型\n    if (typeof chainId === 'string') {\n      // 如果已经是十六进制字符串，确保有 0x 前缀\n      if (chainId.startsWith('0x')) {\n        return chainId.toLowerCase();\n      }\n      // 如果是数字字符串，转换为十六进制\n      const num = parseInt(chainId);\n      if (isNaN(num)) {\n        throw new Error('无效的 chainId 格式');\n      }\n      return `0x${num.toString(16)}`;\n    }\n\n    throw new Error('无效的 chainId 格式');\n  }\n\n  /**\n   * 切换网络\n   * @param chainId 目标网络的 chainId\n   * @param networkInfo 网络信息（仅在需要添加网络时使用）\n   */\n  public async switchNetwork(\n    chainId: string | number,\n    networkInfo?: {\n      chainName: string;\n      nativeCurrency: {\n        name: string;\n        symbol: string;\n        decimals: number;\n      };\n      rpcUrls: string[];\n      blockExplorerUrls?: string[];\n    }\n  ): Promise<void> {\n    if (!this.provider) {\n      throw new Error('provider 不存在');\n    }\n\n    const formattedChainId = this.formatChainId(chainId);\n\n    try {\n      // 尝试切换网络\n      await this.provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: formattedChainId }]\n      });\n    } catch (error: unknown) {\n      // 如果错误码是 4902，说明网络未添加\n      if ((error as { code?: number }).code === 4902 && networkInfo) {\n        try {\n          // 尝试添加网络\n          await this.provider.request({\n            method: 'wallet_addEthereumChain',\n            params: [\n              {\n                chainId: formattedChainId,\n                chainName: networkInfo.chainName,\n                nativeCurrency: networkInfo.nativeCurrency,\n                rpcUrls: networkInfo.rpcUrls,\n                blockExplorerUrls: networkInfo.blockExplorerUrls\n              }\n            ]\n          });\n        } catch (addError) {\n          console.error('添加网络失败:', addError);\n          throw new Error('添加网络失败，请手动添加网络');\n        }\n      } else {\n        console.error('切换网络失败:', error);\n        throw new Error('切换网络失败');\n      }\n    }\n  }\n\n  /**\n   * 获取当前链 ID\n   */\n  get currentChainId(): Promise<string> {\n    if (!this.provider) {\n      throw new Error('provider 不存在');\n    }\n    return this.provider.request({ method: 'eth_chainId' }).then((response: unknown) => response as string);\n  }\n\n  /**\n   * 获取当前网络信息\n   */\n  public async getNetworkInfo(): Promise<{\n    chainId: string;\n    chainName?: string;\n  }> {\n    if (!this.provider) {\n      throw new Error('provider 不存在');\n    }\n\n    try {\n      const chainId = await this.currentChainId;\n      return {\n        chainId,\n        chainName: this.getChainName(chainId)\n      };\n    } catch (error) {\n      console.error('获取网络信息失败:', error);\n      throw new Error('获取网络信息失败');\n    }\n  }\n\n  /**\n   * 切换到自定义网络\n   * @param chainId 目标网络的 chainId\n   * @param networkInfo 网络信息\n   */\n  public async switchToCustomNetwork(\n    chainId: string | number,\n    networkInfo: {\n      chainName: string;\n      nativeCurrency: {\n        name: string;\n        symbol: string;\n        decimals: number;\n      };\n      rpcUrls: string[];\n      blockExplorerUrls?: string[];\n    }\n  ): Promise<void> {\n    if (!this.provider) {\n      throw new Error('provider 不存在');\n    }\n\n    const formattedChainId = this.formatChainId(chainId);\n\n    try {\n      // 尝试切换网络\n      await this.provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: formattedChainId }]\n      });\n    } catch (error: unknown) {\n      // 如果错误码是 4902，说明网络未添加\n      if ((error as { code?: number }).code === 4902) {\n        try {\n          // 尝试添加网络\n          await this.provider.request({\n            method: 'wallet_addEthereumChain',\n            params: [\n              {\n                chainId: formattedChainId,\n                chainName: networkInfo.chainName,\n                nativeCurrency: networkInfo.nativeCurrency,\n                rpcUrls: networkInfo.rpcUrls,\n                blockExplorerUrls: networkInfo.blockExplorerUrls\n              }\n            ]\n          });\n        } catch (addError) {\n          console.error('添加网络失败:', addError);\n          throw new Error('添加网络失败，请手动添加网络');\n        }\n      } else {\n        console.error('切换网络失败:', error);\n        throw new Error('切换网络失败');\n      }\n    }\n  }\n}\n\n// 导出类型定义\nexport * from './types';\n"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247],"mappings":"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SAAS;EACL,WAAW;EACX,UAAU;EACV,YAAY;EACZ,OAAO;EACP,WAAW;CACd;CACD,WAAW;EACP;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,cAAc;GACd,MAAM;GACN,KAAK;GACL,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;CACJ;CACD,gBAAgB,CAAE;CAClB,aAAa,CACT,yFACH;AACJ;;;;AC/FD,sBAAe;CACX,MAAM;CACN,SAAS;CACT,WAAW;CACX,iBAAiB;CACjB,WAAW;EACP,MAAM;EACN,WAAW;EACX,QAAQ,CAAE;CACb;CACD,SAAS;CACT,KAAK;CACL,SAAS;EACL,UAAU;EACV,YAAY;EACZ,OAAO;EACP,WAAW;CACd;CACD,WAAW;EACP;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,cAAc;GACd,MAAM;GACN,KAAK;GACL,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;CACJ;CACD,gBAAgB,CAAE;CAClB,aAAa,CACT,0FACH;AACJ;;;;AC/GD,sBAAe;CACX,MAAM;CACN,SAAS;CACT,WAAW;CACX,iBAAiB;CACjB,WAAW;EACP,MAAM;EACN,WAAW;EACX,QAAQ,CAAE;CACb;CACD,SAAS;CACT,KAAK;CACL,SAAS;EACL,WAAW;EACX,UAAU;EACV,YAAY;EACZ,OAAO;EACP,WAAW;CACd;CACD,WAAW;EACP;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,cAAc;GACd,MAAM;GACN,KAAK;GACL,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,UAAU;EACb;EACD;GACI,MAAM;GACN,OAAO;GACP,WAAW;GACX,UAAU;EACb;CACJ;C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;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,IAAI,GAAI;IACT,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;IACV,CAAC,KAAK,GAAI;GACb;GACD,GAAG;EACN;CACJ;CACD,IAAI,CAAE;CACN,KAAK,CAAE;AACV;;;;ACjLD,oBAAe;CACX,MAAM;CACN,QAAQ;CACR,SAAS;CACT,KAAK;CACL,QAAQ;CACR,iBAAiB;CACjB,WAAW,CAAE;CACb,WAAW,EACP,oBAAoB;EAChB,GAAG;EACH,GAAG;CACN,EACJ;CACD,IAAI,CAAE;CACN,KAAK,CAAE;AACV;;;;AChBD,oBAAe;CACX,MAAM;CACN,SAAS;CACT,KAAK;CACL,QAAQ;CACR,iBAAiB;CACjB,WAAW,CAAE;CACb,WAAW,CAAE;CACb,IAAI,CAAE;CACN,KAAK,CAAE;AACV;;;;ACVD,oBAAe;CACX,MAAM;CACN,SAAS;CACT,KAAK;CACL,QAAQ;CACR,iBAAiB;CACjB,WAAW,CAAE;CACb,WAAW;EACP,WAAW;GACP,GAAG;GACH,GAAG;EACN;EACD,mBAAmB;GACf,GAAG;GACH,GAAG;EACN;EACD,iBAAiB;GACb,GAAG;GACH,GAAG;EACN;EACD,uBAAuB;GACnB,GAAG;GACH,GAAG;EACN;EACD,sBAAsB;GAClB,GAAG;GACH,GAAG;EACN;EACD,uBAAuB;GACnB,GAAG;GACH,GAAG;EACN;EACD,yBAAyB;GACrB,GAAG;GACH,GAAG;EACN;EACD,0BAA0B;GACtB,GAAG;GACH,GAAG;EACN;EACD,MAAM;GACF,GAAG;GACH,GAAG;EACN;EACD,UAAU;GACN,GAAG;GACH,GAAG;EACN;EACD,cAAc;GACV,GAAG;GACH,GAAG;EACN;EACD,YAAY;GACR,GAAG;GACH,GAAG;EACN;EACD,SAAS;GACL,GAAG;GACH,GAAG;EACN;EACD,aAAa;GACT,GAAG;GACH,GAAG;EACN;EACD,aAAa;GACT,GAAG;GACH,GAAG;EACN;EACD,aAAa;GACT,GAAG;GACH,GAAG;EACN;EACD,OAAO;GACH,GAAG;GACH,GAAG;EACN;EACD,QAAQ;GACJ,GAAG;GACH,GAAG;EACN;CACJ;CACD,IAAI,CAAE;CACN,KAAK,CAAE;AACV;;;;ACnFD,oBAAe;CACX,MAAM;CACN,SAAS;CACT,KAAK;CACL,QAAQ;CACR,iBAAiB;CACjB,cAAc,CAAC,MAAM,IAAK;CAC1B,WAAW,CAAE;CACb,WAAW;EACP,0BAA0B;GACtB,GAAG;GACH,GAAG;EACN;EACD,uBAAuB;GACnB,GAAG;GACH,GAAG;EACN;CACJ;CACD,IAAI,CAAE;CACN,KAAK,CAAE;AACV;;;;ACpBD,oBAAe;CACX,MAAM;CACN,QAAQ;CACR,SAAS;CACT,KAAK;CACL,QAAQ;CACR,iBAAiB;CACjB,WAAW,CAAE;CACb,WAAW,EACP,SAAS;EACL,GAAG;EACH,GAAG;CACN,EACJ;CACD,IAAI,CAAE;CACN,KAAK,CAAE;AACV;;;;AChBD,oBAAe;CACX,MAAM;CACN,SAAS;CACT,KAAK;CACL,QAAQ;CACR,iBAAiB;CACjB,cAAc,CAAC,IAAK;CACpB,WAAW,EACP,mBAAmB;EACf,GAAG;EACH,GAAG;CACN,EACJ;CACD,WAAW;EACP,oBAAoB;GAChB,GAAG;GACH,GAAG;EACN;EACD,0BAA0B;GACtB,GAAG;GACH,GAAG;EACN;CACJ;CACD,IAAI,CAAE;CACN,KAAK,CAAE;AACV;;;;ACzBD,oBAAe;CACX,MAAM;CACN,QAAQ;CACR,SAAS;CACT,KAAK;CACL,QAAQ;CACR,iBAAiB;CACjB,cAAc,CAAC,IAAK;CACpB,WAAW,CAAE;CACb,WAAW,CAAE;CACb,IAAI,CAAE;CACN,KAAK,CAAE;AACV;;;;ACZD,oBAAe;CACX,MAAM;CACN,SAAS;CACT,KAAK;CACL,QAAQ;CACR,iBAAiB;CACjB,cAAc,CAAE;CAChB,WAAW,CAAE;CACb,WAAW,CAAE;CACb,IAAI,CAAE;CACN,KAAK,CAAE;AACV;;;;ACXD,oBAAe;CACX,MAAM;CACN,SAAS;CACT,KAAK;CACL,QAAQ;CACR,iBAAiB;CACjB,cAAc,CAAE;CAChB,WAAW,CAAE;CACb,WAAW,CAAE;CACb,IAAI,CAAE;CACN,KAAK,EACD,qBAAqB;EACjB,GAAG;EACH,GAAG;CACN,EACJ;AACJ;;;;AChBD,oBAAe;CACX,MAAM;CACN,QAAQ;CACR,SAAS;CACT,KAAK;CACL,QAAQ;CACR,iBAAiB;CACjB,cAAc,CAAE;CAChB,WAAW,CAAE;CACb,WAAW,CAAE;CACb,IAAI,CAAE;CACN,KAAK,CAAE;AACV;;;;ACZD,oBAAe;CACX,MAAM;CACN,QAAQ;CACR,SAAS;CACT,KAAK;CACL,QAAQ;CACR,iBAAiB;CACjB,cAAc,CAAC,IAAK;CACpB,WAAW,CAAE;CACb,WAAW,CAAE;CACb,IAAI,CAAE;CACN,KAAK,CAAE;AACV;;;;ACZD,oBAAe;CACX,MAAM;CACN,QAAQ;CACR,SAAS;CACT,KAAK;CACL,QAAQ;CACR,iBAAiB;CACjB,cAAc,CAAC,IAAK;CACpB,WAAW,CAAE;CACb,WAAW,CAAE;CACb,IAAI,CAAE;CACN,KAAK,CAAE;AACV;;;;ACZD,oBAAe;CACX,MAAM;CACN,QAAQ;CACR,SAAS;CACT,KAAK;CACL,QAAQ;CACR,iBAAiB;CACjB,cAAc,CAAE;CAChB,WAAW,CAAE;CACb,WAAW,CAAE;CACb,IAAI,CAAE;CACN,KAAK,CAAE;AACV;;;;ACZD,oBAAe;CACX,MAAM;CACN,QAAQ;CACR,SAAS;CACT,KAAK;CACL,QAAQ;CACR,iBAAiB;CACjB,cAAc,CAAE;CAChB,WAAW,CAAE;CACb,WAAW,EACP,OAAO;EACH,GAAG;EACH,GAAG;CACN,EACJ;CACD,IAAI,CAAE;CACN,KAAK,CAAE;AACV;;;;ACjBD,oBAAe;CACX,MAAM;CACN,QAAQ;CACR,SAAS;CACT,KAAK;CACL,QAAQ;CACR,iBAAiB;CACjB,cAAc,CAAE;CAChB,WAAW,CAAE;CACb,WAAW,EACP,kBAAkB;EACd,GAAG;EACH,GAAG;CACN,EACJ;CACD,IAAI,EACA,iBAAiB;EACb,GAAG;EACH,GAAG;CACN,EACJ;CACD,KAAK,CAAE;AACV;;;;ACtBD,oBAAe;CACX,MAAM;CACN,QAAQ;CACR,SAAS;CACT,KAAK;CACL,QAAQ;CACR,iBAAiB;CACjB,WAAW,CAAE;CACb,WAAW,CAAE;CACb,IAAI,CAAE;CACN,KAAK,EACD,qBAAqB;EACjB,GAAG;EACH,GAAG;CACN,EACJ;AACJ;;;;AChBD,oBAAe;CACX,MAAM;CACN,QAAQ;CACR,SAAS;CACT,KAAK;CACL,QAAQ;CACR,iBAAiB;CACjB,cAAc,CAAE;CAChB,WAAW,CAAE;CACb,WAAW,CAAE;CACb,IAAI,CAAE;CACN,KAAK,CAAE;AACV;;;;ACZD,oBAAe;CACX,MAAM;CACN,QAAQ;CACR,SAAS;CACT,KAAK;CACL,QAAQ;CACR,iBAAiB;CACjB,WAAW,CAAE;CACb,WAAW,CAAE;CACb,IAAI,CAAE;CACN,KAAK,EACD,qBAAqB;EACjB,GAAG;EACH,GAAG;CACN,EACJ;AACJ;;;;ACsBD,MAAa,OAAO;CAChB,MAAME;CACN,MAAMC;CACN,MAAMC;CACN,MAAMC;CACN,MAAMC;CACN,MAAMC;CACN,MAAMC;CACN,MAAMC;CACN,MAAMC;CACN,MAAMC;CACN,MAAMC;CACN,MAAMC;CACN,MAAMC;CACN,MAAMC;CACN,MAAMC;CACN,MAAMC;CACN,MAAMC;CACN,MAAMC;CACN,MAAMC;CACN,MAAMC;CACN,MAAMC;CACN,MAAMC;AACT;;;;AC7DD,yBAAe;CACX,MAAM;CACN,SAAS;CACT,KAAK;CACL,QAAQ;CACR,WAAW;EACP,aAAa;GACT,GAAG;GACH,GAAG;EACN;EACD,sBAAsB;GAClB,GAAG;GACH,GAAG;EACN;EACD,mBAAmB;GACf,GAAG;GACH,GAAG;EACN;CACJ;CACD,WAAW;EACP,MAAM;GACF,GAAG;GACH,GAAG;EACN;EACD,UAAU;GACN,GAAG;IAAC;IAAG;IAAG;IAAG;IAAG;IAAG;IAAI;GAAG;GAC1B,GAAG;EACN;EACD,KAAK;GACD,GAAG;GACH,GAAG;EACN;EACD,SAAS;GACL,GAAG;GACH,GAAG;EACN;EACD,MAAM;GACF,GAAG;GACH,GAAG;EACN;EACD,UAAU;GACN,GAAG;GACH,GAAG;EACN;EACD,OAAO;GACH,GAAG;GACH,GAAG;EACN;EACD,WAAW;GACP,GAAG;GACH,GAAG;EACN;EACD,aAAa;GACT,GAAG;GACH,GAAG;EACN;EACD,cAAc;GACV,GAAG;GACH,GAAG;EACN;EACD,UAAU;GACN,GAAG;GACH,GAAG;EACN;EACD,KAAK;GACD,GAAG;GACH,GAAG;EACN;EACD,SAAS;GACL,GAAG;GACH,GAAG;EACN;EACD,UAAU;GACN,GAAG;GACH,GAAG;EACN;EACD,QAAQ;GACJ,GAAG;GACH,GAAG;EACN;EACD,MAAM;GACF,GAAG;GACH,GAAG;EACN;EACD,aAAa;GACT,GAAG;GACH,GAAG;EACN;EACD,mBAAmB;GACf,GAAG;GACH,GAAG;EACN;EACD,gBAAgB;GACZ,GAAG;GACH,GAAG;EACN;EACD,oBAAoB;GAChB,GAAG;GACH,GAAG;EACN;EACD,QAAQ;GACJ,GAAG;GACH,GAAG;EACN;EACD,cAAc;GACV,GAAG;GACH,GAAG;EACN;EACD,YAAY;GACR,GAAG;GACH,GAAG;EACN;EACD,IAAI;GACA,GAAG;GACH,GAAG;EACN;EACD,YAAY;GACR,GAAG;GACH,GAAG;EACN;EACD,YAAY;GACR,GAAG;GACH,GAAG;EACN;EACD,eAAe;GACX,GAAG;GACH,GAAG;EACN;EACD,MAAM;GACF,GAAG;GACH,GAAG;EACN;EACD,WAAW;GACP,GAAG;GACH,GAAG;EACN;EACD,QAAQ;GACJ,GAAG;GACH,GAAG;EACN;EACD,YAAY;GACR,GAAG;GACH,GAAG;EACN;EACD,WAAW;GACP,GAAG;GACH,GAAG;EACN;EACD,eAAe;GACX,GAAG;GACH,GAAG;EACN;EACD,UAAU;GACN,GAAG;GACH,GAAG;EACN;EACD,cAAc;GACV,GAAG;GACH,GAAG;EACN;EACD,MAAM;GACF,GAAG;GACH,GAAG;EACN;EACD,KAAK;GACD,GAAG;GACH,GAAG;EACN;EACD,KAAK;GACD,GAAG;GACH,GAAG;EACN;EACD,KAAK;GACD,GAAG;GACH,GAAG;EACN;EACD,KAAK;GACD,GAAG;GACH,GAAG;EACN;EACD,MAAM;GACF,GAAG;GACH,GAAG;EACN;EACD,KAAK;GACD,GAAG;GACH,GAAG;EACN;EACD,MAAM;GACF,GAAG;GACH,GAAG;EACN;EACD,QAAQ;GACJ,GAAG;GACH,GAAG;EACN;EACD,QAAQ;GACJ,GAAG;GACH,GAAG;EACN;EACD,YAAY;GACR,GAAG;GACH,GAAG;EACN;EACD,IAAI;GACA,GAAG;GACH,GAAG;EACN;EACD,IAAI;GACA,GAAG;GACH,GAAG;EACN;EACD,KAAK;GACD,GAAG;GACH,GAAG;EACN;EACD,KAAK;GACD,GAAG;GACH,GAAG;EACN;EACD,IAAI;GACA,GAAG;GACH,GAAG;EACN;EACD,QAAQ;GACJ,GAAG;GACH,GAAG;EACN;EACD,KAAK;GACD,GAAG;GACH,GAAG;EACN;EACD,IAAI;GACA,GAAG;GACH,GAAG;EACN;EACD,KAAK;GACD,GAAG;GACH,GAAG;EACN;EACD,KAAK;GACD,GAAG;GACH,GAAG;EACN;EACD,MAAM;GACF,GAAG;GACH,GAAG;EACN;EACD,SAAS;GACL,GAAG;GACH,GAAG;EACN;EACD,SAAS;GACL,GAAG;GACH,GAAG;EACN;EACD,QAAQ;GACJ,GAAG;GACH,GAAG;EACN;EACD,QAAQ;GACJ,GAAG;GACH,GAAG;EACN;EACD,WAAW;GACP,GAAG;GACH,GAAG;EACN;EACD,cAAc;GACV,GAAG;GACH,GAAG;EACN;EACD,cAAc;GACV,GAAG;GACH,GAAG;EACN;EACD,cAAc;GACV,GAAG;GACH,GAAG;EACN;EACD,UAAU;GACN,GAAG;GACH,GAAG;EACN;EACD,UAAU;GACN,GAAG;GACH,GAAG;EACN;EACD,UAAU;GACN,GAAG;GACH,GAAG;EACN;EACD,aAAa;GACT,GAAG;GACH,GAAG;EACN;EACD,aAAa;GACT,GAAG;GACH,GAAG;EACN;EACD,WAAW;GACP,GAAG;GACH,GAAG;EACN;EACD,UAAU;GACN,GAAG;GACH,GAAG;EACN;EACD,WAAW;GACP,GAAG;GACH,GAAG;EACN;EACD,QAAQ;GACJ,GAAG;GACH,GAAG;EACN;EACD,YAAY;GACR,GAAG;GACH,GAAG;EACN;EACD,UAAU;GACN,GAAG;GACH,GAAG;EACN;EACD,KAAK;GACD,GAAG;GACH,GAAG;EACN;EACD,OAAO;GACH,GAAG;GACH,GAAG;EACN;EACD,QAAQ;GACJ,GAAG;GACH,GAAG;EACN;EACD,SAAS;GACL,GAAG;GACH,GAAG;EACN;EACD,QAAQ;GACJ,GAAG;GACH,GAAG;EACN;EACD,MAAM;GACF,GAAG;GACH,GAAG;EACN;EACD,OAAO;GACH,GAAG;GACH,GAAG;EACN;EACD,IAAI;GACA,GAAG;GACH,GAAG;EACN;EACD,OAAO;GACH,GAAG;GACH,GAAG;EACN;EACD,KAAK;GACD,GAAG;GACH,GAAG;EACN;EACD,MAAM;GACF,GAAG;GACH,GAAG;EACN;EACD,KAAK;GACD,GAAG;GACH,GAAG;EACN;EACD,MAAM;GACF,GAAG;GACH,GAAG;EACN;EACD,UAAU;GACN,GAAG;GACH,GAAG;EACN;EACD,QAAQ;GACJ,GAAG;GACH,GAAG;EACN;EACD,SAAS;GACL,GAAG;GACH,GAAG;EACN;EACD,cAAc;GACV,GAAG;GACH,GAAG;EACN;CACJ;CACD,IAAI;EACA,YAAY;GACR,GAAG;GACH,GAAG;EACN;EACD,iBAAiB;GACb,GAAG;GACH,GAAG;EACN;EACD,kBAAkB;GACd,GAAG;GACH,GAAG;EACN;CACJ;CACD,KAAK;EACD,mBAAmB;GACf,GAAG;GACH,GAAG;EACN;EACD,wBAAwB;GACpB,GAAG;GACH,GAAG;EACN;EACD,eAAe;GACX,GAAG;GACH,GAAG;EACN;EACD,eAAe;GACX,GAAG;GACH,GAAG;EACN;EACD,gBAAgB;GACZ,GAAG;GACH,GAAG;EACN;EACD,aAAa;GACT,GAAG;GACH,GAAG;EACN;EACD,qBAAqB;GACjB,GAAG;GACH,GAAG;EACN;CACJ;AACJ;;;;ACrbD,kBAAe;CACX,MAAM;CACN,SAAS;CACT,KAAK;CACL,QAAQ;CACR,WAAW,CAAE;CACb,WAAW,CAAE;CACb,IAAI,CAAE;CACN,KAAK,CAAE;AACV;;;;ACTD,wBAAe;CACX,MAAM;CACN,SAAS;CACT,KAAK;CACL,QAAQ;CACR,WAAW,CAAE;CACb,WAAW,EACP,cAAc;EACV,GAAG;EACH,GAAG;CACN,EACJ;CACD,IAAI,CAAE;CACN,KAAK,CAAE;AACV;;;;ACdD,+BAAe;CACX,MAAM;CACN,SAAS;CACT,KAAK;CACL,QAAQ;CACR,WAAW,CAAE;CACb,WAAW;EACP,OAAO;GACH,GAAG;GACH,GAAG;EACN;EACD,MAAM;GACF,GAAG;GACH,GAAG;EACN;EACD,aAAa;GACT,GAAG;GACH,GAAG;EACN;EACD,aAAa;GACT,GAAG;GACH,GAAG;EACN;EACD,SAAS;GACL,GAAG;GACH,GAAG;EACN;EACD,cAAc;GACV,GAAG;GACH,GAAG;EACN;EACD,UAAU;GACN,GAAG;GACH,GAAG;EACN;EACD,cAAc;GACV,GAAG;GACH,GAAG;EACN;CACJ;CACD,IAAI,CAAE;CACN,KAAK,CAAE;AACV;;;;AC1CD,6BAAe;CACX,MAAM;CACN,SAAS;CACT,KAAK;CACL,QAAQ;CACR,WAAW,CAAE;CACb,WAAW,EACP,SAAS;EACL,GAAG;EACH,GAAG;CACN,EACJ;CACD,IAAI,EACA,aAAa;EACT,GAAG;EACH,GAAG;CACN,EACJ;CACD,KAAK,CAAE;AACV;;;;ACnBD,wBAAe;CACX,MAAM;CACN,SAAS;CACT,KAAK;CACL,QAAQ;CACR,WAAW,CAAE;CACb,WAAW;EACP,oBAAoB;GAChB,GAAG;GACH,GAAG;EACN;EACD,OAAO;GACH,GAAG;GACH,GAAG;EACN;EACD,OAAO;GACH,GAAG;GACH,GAAG;EACN;EACD,WAAW;GACP,GAAG;GACH,GAAG;EACN;EACD,eAAe;GACX,GAAG;GACH,GAAG;EACN;EACD,QAAQ;GACJ,GAAG;GACH,GAAG;EACN;EACD,YAAY;GACR,GAAG;GACH,GAAG;EACN;EACD,gBAAgB;GACZ,GAAG;GACH,GAAG;EACN;EACD,gBAAgB;GACZ,GAAG;GACH,GAAG;EACN;CACJ;CACD,IAAI,CAAE;CACN,KAAK;EACD,aAAa;GACT,GAAG;GACH,GAAG;EACN;EACD,qBAAqB;GACjB,GAAG;GACH,GAAG;EACN;CACJ;AACJ;;;;ACvDD,6BAAe;CACX,MAAM;CACN,SAAS;CACT,KAAK;CACL,QAAQ;CACR,WAAW,CAAE;CACb,WAAW;EACP,kBAAkB;GACd,GAAG;GACH,GAAG;EACN;EACD,kBAAkB;GACd,GAAG;GACH,GAAG;EACN;EACD,mBAAmB;GACf,GAAG;GACH,GAAG;EACN;EACD,mBAAmB;GACf,GAAG;GACH,GAAG;EACN;EACD,sBAAsB;GAClB,GAAG;GACH,GAAG;EACN;EACD,sBAAsB;GAClB,GAAG;GACH,GAAG;EACN;EACD,2BAA2B;GACvB,GAAG;GACH,GAAG;EACN;EACD,KAAK;GACD,GAAG;GACH,GAAG;EACN;EACD,KAAK;GACD,GAAG;GACH,GAAG;EACN;EACD,KAAK;GACD,GAAG;GACH,GAAG;EACN;EACD,aAAa;GACT,GAAG;GACH,GAAG;EACN;EACD,SAAS;GACL,GAAG;GACH,GAAG;EACN;CACJ;CACD,IAAI,CAAE;CACN,KAAK;EACD,aAAa;GACT,GAAG;GACH,GAAG;EACN;EACD,qBAAqB;GACjB,GAAG;GACH,GAAG;EACN;CACJ;AACJ;;;;ACnED,yBAAe;CACX,MAAM;CACN,SAAS;CACT,KAAK;CACL,QAAQ;CACR,WAAW,CAAE;CACb,WAAW;EACP,kBAAkB;GACd,GAAG;GACH,GAAG;EACN;EACD,kBAAkB;GACd,GAAG;GACH,GAAG;EACN;EACD,mBAAmB;GACf,GAAG;GACH,GAAG;EACN;EACD,mBAAmB;GACf,GAAG;GACH,GAAG;EACN;EACD,sBAAsB;GAClB,GAAG;GACH,GAAG;EACN;EACD,sBAAsB;GAClB,GAAG;GACH,GAAG;EACN;EACD,2BAA2B;GACvB,GAAG;GACH,GAAG;EACN;CACJ;CACD,IAAI,CAAE;CACN,KAAK,CAAE;AACV;;;;ACtCD,uBAAe;CACX,MAAM;CACN,SAAS;CACT,KAAK;CACL,QAAQ;CACR,WAAW,CAAE;CACb,WAAW;EACP,aAAa;GACT,GAAG;GACH,GAAG;EACN;EACD,OAAO;GACH,GAAG;GACH,GAA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AAM;EACN,SAAS,CACL;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,iBAAiB;EACjB,MAAM;CACT;CACD;EACI,QAAQ,CACJ;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,MAAM;EACN,SAAS,CACL;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,iBAAiB;EACjB,MAAM;CACT;CACD;EACI,QAAQ,CACJ;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,MAAM;EACN,SAAS,CACL;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,iBAAiB;EACjB,MAAM;CACT;CACD;EACI,QAAQ,CACJ;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,MAAM;EACN,SAAS,CACL;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,iBAAiB;EACjB,MAAM;CACT;AACJ;;;;ACpKD,MAAa,oBAAoB;CAC7B;EACI,WAAW;EACX,QAAQ,CACJ;GACI,SAAS;GACT,cAAc;GACd,MAAM;GACN,MAAM;EACT,GACD;GACI,SAAS;GACT,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,MAAM;EACN,MAAM;CACT;CACD;EACI,WAAW;EACX,QAAQ;GACJ;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;GACD;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;GACD;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;EACJ;EACD,MAAM;EACN,MAAM;CACT;CACD;EACI,WAAW;EACX,QAAQ;GACJ;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;GACD;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;GACD;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;EACJ;EACD,MAAM;EACN,MAAM;CACT;CACD;EACI,WAAW;EACX,QAAQ,CACJ;GACI,SAAS;GACT,cAAc;GACd,MAAM;GACN,MAAM;EACT,GACD;GACI,SAAS;GACT,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,MAAM;EACN,MAAM;CACT;CACD;EACI,WAAW;EACX,QAAQ;GACJ;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;GACD;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;GACD;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;GACD;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;EACJ;EACD,MAAM;EACN,MAAM;CACT;CACD;EACI,WAAW;EACX,QAAQ;GACJ;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;GACD;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;GACD;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;EACJ;EACD,MAAM;EACN,MAAM;CACT;CACD;EACI,WAAW;EACX,QAAQ,CACJ;GACI,SAAS;GACT,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,MAAM;EACN,MAAM;CACT;CACD;EACI,WAAW;EACX,QAAQ;GACJ;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;GACD;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;GACD;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;EACJ;EACD,MAAM;EACN,MAAM;CACT;CACD;EACI,WAAW;EACX,QAAQ;GACJ;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;GACD;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;GACD;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;EACJ;EACD,MAAM;EACN,MAAM;CACT;CACD;EACI,WAAW;EACX,QAAQ,CACJ;GACI,SAAS;GACT,cAAc;GACd,MAAM;GACN,MAAM;EACT,GACD;GACI,SAAS;GACT,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,MAAM;EACN,MAAM;CACT;CACD;EACI,WAAW;EACX,QAAQ;GACJ;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;GACD;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;GACD;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;EACJ;EACD,MAAM;EACN,MAAM;CACT;CACD;EACI,WAAW;EACX,QAAQ;GACJ;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;GACD;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;GACD;IACI,SAAS;IACT,cAAc;IACd,MAAM;IACN,MAAM;GACT;EACJ;EACD,MAAM;EACN,MAAM;CACT;CACD;EACI,QAAQ,CACJ;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,GACD;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,MAAM;EACN,SAAS,CACL;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,GACD;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,iBAAiB;EACjB,MAAM;CACT;CACD;EACI,QAAQ,CACJ;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,MAAM;EACN,SAAS,CACL;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,iBAAiB;EACjB,MAAM;CACT;CACD;EACI,QAAQ,CACJ;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,GACD;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,MAAM;EACN,SAAS,CACL;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,iBAAiB;EACjB,MAAM;CACT;CACD;EACI,QAAQ,CACJ;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,MAAM;EACN,SAAS,CACL;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,iBAAiB;EACjB,MAAM;CACT;CACD;EACI,QAAQ;GACJ;IACI,cAAc;IACd,MAAM;IACN,MAAM;GACT;GACD;IACI,cAAc;IACd,MAAM;IACN,MAAM;GACT;GACD;IACI,cAAc;IACd,MAAM;IACN,MAAM;GACT;EACJ;EACD,MAAM;EACN,SAAS,CACL;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,iBAAiB;EACjB,MAAM;CACT;CACD;EACI,QAAQ,CACJ;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,GACD;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,MAAM;EACN,SAAS,CACL;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,iBAAiB;EACjB,MAAM;CACT;CACD;EACI,QAAQ,CACJ;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,GACD;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,MAAM;EACN,SAAS,CACL;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,iBAAiB;EACjB,MAAM;CACT;CACD;EACI,QAAQ,CACJ;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,GACD;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,MAAM;EACN,SAAS,CACL;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,iBAAiB;EACjB,MAAM;CACT;CACD;EACI,QAAQ,CACJ;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,MAAM;EACN,SAAS,CACL;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,iBAAiB;EACjB,MAAM;CACT;CACD;EACI,QAAQ,CACJ;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,MAAM;EACN,SAAS,CACL;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,GACD;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,iBAAiB;EACjB,MAAM;CACT;CACD;EACI,QAAQ,CACJ;GACI,cAAc;GACd,MAAM;GACN,MAAM;EACT,CACJ;EACD,MAAM;EACN,SA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"}